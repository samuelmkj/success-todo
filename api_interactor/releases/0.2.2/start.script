{script,
    {"api_interactor","0.2.2"},
    [{preLoaded,
         [atomics,counters,erl_prim_loader,erl_tracer,erlang,erts_code_purger,
          erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,otp_ring0,persistent_term,
          prim_buffer,prim_eval,prim_file,prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-6.3.1.3/ebin","$ROOT/lib/stdlib-3.8.2.4/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-6.3.1.3/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_ddll,
          erl_distribution,erl_epmd,erl_reply,erl_signal_handler,erts_debug,
          gen_sctp,gen_tcp,gen_udp,global,global_group,global_search,group,
          group_history,hipe_unified_loader,inet,inet6_sctp,inet6_tcp,
          inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,local_tcp,
          local_udp,logger_disk_log_h,logger_formatter,logger_h_common,
          logger_handler_watcher,logger_olp,logger_proxy,logger_std_h,
          logger_sup,net,net_adm,net_kernel,os,pg2,ram_file,raw_file_io,
          raw_file_io_compressed,raw_file_io_deflate,raw_file_io_delayed,
          raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.8.2.4/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-7.3.2/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bs,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_record,
          beam_reorder,beam_split,beam_trim,beam_type,beam_utils,
          beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,cerl_sets,
          cerl_trees,compile,core_lib,core_lint,core_parse,core_pp,core_scan,
          erl_bifs,rec_env,sys_core_alias,sys_core_bsm,sys_core_dsetel,
          sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,v3_codegen,v3_core,v3_kernel,v3_kernel_pp]},
     {path,["$ROOT/lib/elixir-1.9.4/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Identifier',
          'Elixir.Code.LoadError','Elixir.Code.Typespec','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Config',
          'Elixir.Config.Provider','Elixir.Config.Reader','Elixir.Date',
          'Elixir.Date.Range','Elixir.DateTime','Elixir.Dict',
          'Elixir.DynamicSupervisor','Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Unicode','Elixir.StringIO','Elixir.Supervisor',
          'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
          'Elixir.SyntaxError','Elixir.System','Elixir.SystemLimitError',
          'Elixir.Task','Elixir.Task.Supervised','Elixir.Task.Supervisor',
          'Elixir.Time','Elixir.TokenMissingError','Elixir.TryClauseError',
          'Elixir.Tuple','Elixir.URI','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/logger-1.9.4/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.BackendSupervisor','Elixir.Logger.Backends.Console',
          'Elixir.Logger.Config','Elixir.Logger.ErlangHandler',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/jason-1.2.2/ebin"]},
     {primLoad,
         ['Elixir.Jason','Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Decimal','Elixir.Jason.Encoder.Float',
          'Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment','Elixir.Jason.Encoder.List',
          'Elixir.Jason.Encoder.Map','Elixir.Jason.Encoder.NaiveDateTime',
          'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
          'Elixir.Jason.Fragment','Elixir.Jason.Helpers']},
     {path,["$ROOT/lib/ink-1.2.0/ebin"]},
     {primLoad,['Elixir.Ink','Elixir.Ink.Encoder']},
     {path,["$ROOT/lib/asn1-5.0.8/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/crypto-4.4.2.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/public_key-1.6.6.1/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-9.2.3.6/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_handshake,
          dtls_listener_sup,dtls_packet_demux,dtls_record,dtls_socket,dtls_v1,
          inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,ssl_app,
          ssl_certificate,ssl_cipher,ssl_cipher_format,ssl_config,
          ssl_connection,ssl_connection_sup,ssl_crl,ssl_crl_cache,
          ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dist_admin_sup,
          ssl_dist_connection_sup,ssl_dist_sup,ssl_handshake,
          ssl_listen_tracker_sup,ssl_manager,ssl_pem_cache,ssl_pkix_db,
          ssl_record,ssl_session,ssl_session_cache,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_v3,tls_connection,tls_connection_sup,
          tls_handshake,tls_record,tls_sender,tls_socket,tls_v1]},
     {path,["$ROOT/lib/inets-7.0.7.2/ebin"]},
     {primLoad,
         [http_chunk,http_request,http_response,http_transport,http_uri,
          http_util,httpc,httpc_cookie,httpc_handler,httpc_handler_sup,
          httpc_manager,httpc_profile_sup,httpc_request,httpc_response,
          httpc_sup,httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
          httpd_conf,httpd_connection_sup,httpd_custom,httpd_custom_api,
          httpd_esi,httpd_example,httpd_file,httpd_instance_sup,httpd_log,
          httpd_logger,httpd_manager,httpd_misc_sup,httpd_request,
          httpd_request_handler,httpd_response,httpd_script_env,httpd_socket,
          httpd_sup,httpd_util,inets,inets_app,inets_ftp_wrapper,inets_lib,
          inets_service,inets_sup,inets_tftp_wrapper,inets_trace,mod_actions,
          mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
          mod_auth_server,mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,
          mod_get,mod_head,mod_htaccess,mod_log,mod_range,mod_responsecontrol,
          mod_security,mod_security_server,mod_trace]},
     {path,["$ROOT/lib/libcluster-3.2.2/ebin"]},
     {primLoad,
         ['Elixir.Cluster.Logger','Elixir.Cluster.Strategy',
          'Elixir.Cluster.Strategy.DNSPoll','Elixir.Cluster.Strategy.Epmd',
          'Elixir.Cluster.Strategy.ErlangHosts',
          'Elixir.Cluster.Strategy.Gossip',
          'Elixir.Cluster.Strategy.Kubernetes',
          'Elixir.Cluster.Strategy.Kubernetes.DNS',
          'Elixir.Cluster.Strategy.Kubernetes.DNSSRV',
          'Elixir.Cluster.Strategy.Rancher','Elixir.Cluster.Strategy.State',
          'Elixir.Cluster.Supervisor']},
     {path,["$ROOT/lib/conv_case-0.2.2/ebin"]},
     {primLoad,['Elixir.ConvCase']},
     {path,["$ROOT/lib/xema-0.14.0/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Xema.Ref','Elixir.Inspect.Xema.Schema',
          'Elixir.Xema','Elixir.Xema.Behaviour','Elixir.Xema.Builder',
          'Elixir.Xema.CastError','Elixir.Xema.Castable',
          'Elixir.Xema.Castable.Atom','Elixir.Xema.Castable.BitString',
          'Elixir.Xema.Castable.Date','Elixir.Xema.Castable.DateTime',
          'Elixir.Xema.Castable.Decimal','Elixir.Xema.Castable.Float',
          'Elixir.Xema.Castable.Helper','Elixir.Xema.Castable.Integer',
          'Elixir.Xema.Castable.List','Elixir.Xema.Castable.Map',
          'Elixir.Xema.Castable.NaiveDateTime','Elixir.Xema.Castable.Time',
          'Elixir.Xema.Castable.Tuple','Elixir.Xema.Caster',
          'Elixir.Xema.Format','Elixir.Xema.JsonSchema',
          'Elixir.Xema.JsonSchema.Validator','Elixir.Xema.Loader',
          'Elixir.Xema.NoLoader','Elixir.Xema.Ref','Elixir.Xema.Schema',
          'Elixir.Xema.SchemaError','Elixir.Xema.SchemaValidator',
          'Elixir.Xema.Utils','Elixir.Xema.ValidationError',
          'Elixir.Xema.Validator']},
     {path,["$ROOT/lib/json_xema-0.6.0/ebin"]},
     {primLoad,
         ['Elixir.JsonXema','Elixir.JsonXema.SchemaError',
          'Elixir.JsonXema.SchemaValidator',
          'Elixir.JsonXema.ValidationError']},
     {path,["$ROOT/lib/unicode_util_compat-0.7.0/ebin"]},
     {primLoad,[string_compat,unicode_util_compat]},
     {path,["$ROOT/lib/idna-6.1.1/ebin"]},
     {primLoad,
         [idna,idna_bidi,idna_context,idna_data,idna_mapping,idna_table,
          idna_ucs,punycode]},
     {path,["$ROOT/lib/mimerl-1.2.0/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/certifi-2.8.0/ebin"]},
     {primLoad,[certifi,certifi_pt]},
     {path,["$ROOT/lib/syntax_tools-2.1.7.1/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,merl,merl_transform,prettypr]},
     {path,["$ROOT/lib/parse_trans-3.3.1/ebin"]},
     {primLoad,
         [ct_expand,exprecs,parse_trans,parse_trans_codegen,parse_trans_mod,
          parse_trans_pp]},
     {path,["$ROOT/lib/ssl_verify_fun-1.1.6/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
          ssl_verify_fun_encodings,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_string,ssl_verify_util]},
     {path,["$ROOT/lib/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,["$ROOT/lib/hackney-1.18.0/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_connection,
          hackney_connections,hackney_cookie,hackney_date,hackney_headers,
          hackney_headers_new,hackney_http,hackney_http_connect,
          hackney_local_tcp,hackney_manager,hackney_metrics,hackney_multipart,
          hackney_pool,hackney_pool_handler,hackney_request,hackney_response,
          hackney_socks5,hackney_ssl,hackney_ssl_certificate,hackney_stream,
          hackney_sup,hackney_tcp,hackney_trace,hackney_url,hackney_util]},
     {path,["$ROOT/lib/httpoison-1.6.2/ebin"]},
     {primLoad,
         ['Elixir.HTTPoison','Elixir.HTTPoison.AsyncChunk',
          'Elixir.HTTPoison.AsyncEnd','Elixir.HTTPoison.AsyncHeaders',
          'Elixir.HTTPoison.AsyncRedirect','Elixir.HTTPoison.AsyncResponse',
          'Elixir.HTTPoison.AsyncStatus','Elixir.HTTPoison.Base',
          'Elixir.HTTPoison.Error','Elixir.HTTPoison.Handlers.Multipart',
          'Elixir.HTTPoison.Request','Elixir.HTTPoison.Response']},
     {path,["$ROOT/lib/telemetry-0.4.3/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup]},
     {path,["$ROOT/lib/cowlib-2.8.0/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_te,cow_iolists,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy,cow_sse,cow_uri,cow_ws]},
     {path,["$ROOT/lib/ranch-1.7.1/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowboy-2.7.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,cowboy_handler,
          cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
          cowboy_middleware,cowboy_req,cowboy_rest,cowboy_router,
          cowboy_static,cowboy_stream,cowboy_stream_h,cowboy_sub_protocol,
          cowboy_sup,cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
     {path,["$ROOT/lib/eex-1.9.4/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError',
          'Elixir.EEx.Tokenizer']},
     {path,["$ROOT/lib/mime-1.3.1/ebin"]},
     {primLoad,['Elixir.MIME','Elixir.MIME.Application']},
     {path,["$ROOT/lib/plug_crypto-1.1.2/ebin"]},
     {primLoad,
         ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
          'Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier']},
     {path,["$ROOT/lib/plug-1.10.0/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Plug.Conn','Elixir.Inspect.Plug.Conn',
          'Elixir.Plug','Elixir.Plug.Adapters.Cowboy',
          'Elixir.Plug.Adapters.Cowboy2','Elixir.Plug.Adapters.Test.Conn',
          'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
          'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.HTML','Elixir.Plug.Head','Elixir.Plug.Logger',
          'Elixir.Plug.MIME','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.BadEncodingError',
          'Elixir.Plug.Parsers.JSON','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.Router',
          'Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.MalformedURIError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Supervisor',
          'Elixir.Plug.Telemetry','Elixir.Plug.Test',
          'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,["$ROOT/lib/plug_cowboy-2.2.1/ebin"]},
     {primLoad,
         ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
          'Elixir.Plug.Cowboy.Drainer','Elixir.Plug.Cowboy.Handler',
          'Elixir.Plug.Cowboy.Stream','Elixir.Plug.Cowboy.Translator']},
     {path,["$ROOT/lib/mnesia-4.15.6/ebin"]},
     {primLoad,
         [mnesia,mnesia_app,mnesia_backend_type,mnesia_backup,mnesia_bup,
          mnesia_checkpoint,mnesia_checkpoint_sup,mnesia_controller,
          mnesia_dumper,mnesia_event,mnesia_ext_sup,mnesia_frag,
          mnesia_frag_hash,mnesia_index,mnesia_kernel_sup,mnesia_late_loader,
          mnesia_lib,mnesia_loader,mnesia_locker,mnesia_log,mnesia_monitor,
          mnesia_recover,mnesia_registry,mnesia_schema,mnesia_snmp_hook,
          mnesia_sp,mnesia_subscr,mnesia_sup,mnesia_text,mnesia_tm]},
     {path,["$ROOT/lib/common-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.Common.ABNF','Elixir.Autoflow.Common.ABNF.Core',
          'Elixir.Autoflow.Common.ABNF.Decoder',
          'Elixir.Autoflow.Common.ABNF.Encoder',
          'Elixir.Autoflow.Common.ABNF.Grammar',
          'Elixir.Autoflow.Common.ABNF.Util',
          'Elixir.Autoflow.Common.Application',
          'Elixir.Autoflow.Common.Binary','Elixir.Autoflow.Common.Connection',
          'Elixir.Autoflow.Common.Data','Elixir.Autoflow.Common.Dispatch',
          'Elixir.Autoflow.Common.Dispatch.Service',
          'Elixir.Autoflow.Common.Dispatch.Service.Process',
          'Elixir.Autoflow.Common.Dispatch.Service.Status',
          'Elixir.Autoflow.Common.Dispatch.Service.Timer.Process',
          'Elixir.Autoflow.Common.Dispatch.Web',
          'Elixir.Autoflow.Common.Environment',
          'Elixir.Autoflow.Common.Execution','Elixir.Autoflow.Common.File',
          'Elixir.Autoflow.Common.Iex.Test',
          'Elixir.Autoflow.Common.JsonSchemaForm',
          'Elixir.Autoflow.Common.JsonSchemaForm.Error',
          'Elixir.Autoflow.Common.JsonSchemaForm.State',
          'Elixir.Autoflow.Common.LogReader',
          'Elixir.Autoflow.Common.LogReader.State',
          'Elixir.Autoflow.Common.LoggerNotificationBackend',
          'Elixir.Autoflow.Common.Logs',
          'Elixir.Autoflow.Common.Macros.Deployment',
          'Elixir.Autoflow.Common.Object','Elixir.Autoflow.Common.Orm.Json',
          'Elixir.Autoflow.Common.Orm.Native',
          'Elixir.Autoflow.Common.Process.Cluster',
          'Elixir.Autoflow.Common.Process.Registry',
          'Elixir.Autoflow.Common.Process.TimeServer',
          'Elixir.Autoflow.Common.Product','Elixir.Autoflow.Common.Rpc',
          'Elixir.Autoflow.Common.Schema.Http.Loader',
          'Elixir.Autoflow.Common.State.Cluster',
          'Elixir.Autoflow.Common.State.Ratelimit',
          'Elixir.Autoflow.Common.State.Table',
          'Elixir.Autoflow.Common.SystemEnvironment',
          'Elixir.Autoflow.Common.TLS','Elixir.Autoflow.Common.XML',
          'Elixir.Autoflow.Utils.KeyValueStore','Elixir.Debugger',
          'Elixir.Utils','Elixir.Yaml.Decoder',
          'Elixir.Yaml.Decoder.FileNotFoundError',
          'Elixir.Yaml.Decoder.Mapper','Elixir.Yaml.Decoder.Node.KeywordList',
          'Elixir.Yaml.Decoder.ParsingError','Elixir.Yaml.Decoder.Records',
          'Elixir.Yaml.Decoder.Sigil','Elixir.Yaml.Encoder']},
     {path,["$ROOT/lib/gen_state_machine-2.1.0/ebin"]},
     {primLoad,
         ['Elixir.GenStateMachine','Elixir.GenStateMachine.Application',
          'Elixir.GenStateMachine.Translator']},
     {path,["$ROOT/lib/decimal-1.9.0/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Decimal.Macros','Elixir.Inspect.Decimal',
          'Elixir.String.Chars.Decimal']},
     {path,["$ROOT/lib/ecto-3.6.1/ebin"]},
     {primLoad,
         ['Elixir.Ecto','Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Queryable',
          'Elixir.Ecto.Adapter.Schema','Elixir.Ecto.Adapter.Storage',
          'Elixir.Ecto.Adapter.Transaction','Elixir.Ecto.Application',
          'Elixir.Ecto.Association','Elixir.Ecto.Association.BelongsTo',
          'Elixir.Ecto.Association.Has','Elixir.Ecto.Association.HasThrough',
          'Elixir.Ecto.Association.ManyToMany',
          'Elixir.Ecto.Association.NotLoaded','Elixir.Ecto.CastError',
          'Elixir.Ecto.ChangeError','Elixir.Ecto.Changeset',
          'Elixir.Ecto.Changeset.Relation','Elixir.Ecto.ConstraintError',
          'Elixir.Ecto.Embedded','Elixir.Ecto.Enum',
          'Elixir.Ecto.InvalidChangesetError','Elixir.Ecto.InvalidURLError',
          'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
          'Elixir.Ecto.MultiplePrimaryKeyError',
          'Elixir.Ecto.MultipleResultsError',
          'Elixir.Ecto.NoPrimaryKeyFieldError',
          'Elixir.Ecto.NoPrimaryKeyValueError','Elixir.Ecto.NoResultsError',
          'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
          'Elixir.Ecto.Query.API','Elixir.Ecto.Query.BooleanExpr',
          'Elixir.Ecto.Query.Builder','Elixir.Ecto.Query.Builder.CTE',
          'Elixir.Ecto.Query.Builder.Combination',
          'Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.Dynamic',
          'Elixir.Ecto.Query.Builder.Filter','Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Update',
          'Elixir.Ecto.Query.Builder.Windows','Elixir.Ecto.Query.CastError',
          'Elixir.Ecto.Query.CompileError','Elixir.Ecto.Query.DynamicExpr',
          'Elixir.Ecto.Query.FromExpr','Elixir.Ecto.Query.JoinExpr',
          'Elixir.Ecto.Query.Planner','Elixir.Ecto.Query.QueryExpr',
          'Elixir.Ecto.Query.SelectExpr','Elixir.Ecto.Query.Tagged',
          'Elixir.Ecto.Query.WindowAPI','Elixir.Ecto.Query.WithExpr',
          'Elixir.Ecto.QueryError','Elixir.Ecto.Queryable',
          'Elixir.Ecto.Queryable.Atom','Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query',
          'Elixir.Ecto.Queryable.Ecto.SubQuery','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Assoc',
          'Elixir.Ecto.Repo.Preloader','Elixir.Ecto.Repo.Queryable',
          'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
          'Elixir.Ecto.Repo.Supervisor','Elixir.Ecto.Repo.Transaction',
          'Elixir.Ecto.Schema','Elixir.Ecto.Schema.Loader',
          'Elixir.Ecto.Schema.Metadata','Elixir.Ecto.StaleEntryError',
          'Elixir.Ecto.SubQuery','Elixir.Ecto.SubQueryError',
          'Elixir.Ecto.Type','Elixir.Ecto.UUID',
          'Elixir.Inspect.Ecto.Association.NotLoaded',
          'Elixir.Inspect.Ecto.Changeset','Elixir.Inspect.Ecto.Query',
          'Elixir.Inspect.Ecto.Query.DynamicExpr',
          'Elixir.Inspect.Ecto.Schema.Metadata',
          'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
          'Elixir.Jason.Encoder.Ecto.Schema.Metadata','Elixir.Mix.Ecto',
          'Elixir.Mix.Tasks.Ecto','Elixir.Mix.Tasks.Ecto.Create',
          'Elixir.Mix.Tasks.Ecto.Drop','Elixir.Mix.Tasks.Ecto.Gen.Repo']},
     {path,["$ROOT/lib/connection-1.0.4/ebin"]},
     {primLoad,['Elixir.Connection']},
     {path,["$ROOT/lib/db_connection-2.4.1/ebin"]},
     {primLoad,
         ['Elixir.DBConnection','Elixir.DBConnection.App',
          'Elixir.DBConnection.Backoff','Elixir.DBConnection.Connection',
          'Elixir.DBConnection.ConnectionError',
          'Elixir.DBConnection.ConnectionPool',
          'Elixir.DBConnection.ConnectionPool.Pool',
          'Elixir.DBConnection.EncodeError','Elixir.DBConnection.Holder',
          'Elixir.DBConnection.LogEntry','Elixir.DBConnection.Ownership',
          'Elixir.DBConnection.Ownership.Manager',
          'Elixir.DBConnection.Ownership.Proxy',
          'Elixir.DBConnection.OwnershipError',
          'Elixir.DBConnection.PrepareStream','Elixir.DBConnection.Query',
          'Elixir.DBConnection.Stream','Elixir.DBConnection.Task',
          'Elixir.DBConnection.TransactionError',
          'Elixir.DBConnection.Watcher',
          'Elixir.Enumerable.DBConnection.PrepareStream',
          'Elixir.Enumerable.DBConnection.Stream']},
     {path,["$ROOT/lib/ecto_sql-3.6.1/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
          'Elixir.Ecto.Adapter.Migration','Elixir.Ecto.Adapter.Structure',
          'Elixir.Ecto.Adapters.MySQL','Elixir.Ecto.Adapters.MyXQL',
          'Elixir.Ecto.Adapters.MyXQL.Connection',
          'Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.Connection',
          'Elixir.Ecto.Adapters.SQL','Elixir.Ecto.Adapters.SQL.Application',
          'Elixir.Ecto.Adapters.SQL.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
          'Elixir.Ecto.Adapters.SQL.Stream','Elixir.Ecto.Adapters.Tds',
          'Elixir.Ecto.Adapters.Tds.Connection','Elixir.Ecto.Migration',
          'Elixir.Ecto.Migration.Command','Elixir.Ecto.Migration.Constraint',
          'Elixir.Ecto.Migration.Index','Elixir.Ecto.Migration.Reference',
          'Elixir.Ecto.Migration.Runner',
          'Elixir.Ecto.Migration.SchemaMigration',
          'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
          'Elixir.Enumerable.Ecto.Adapters.SQL.Stream','Elixir.Mix.EctoSQL',
          'Elixir.Mix.Tasks.Ecto.Dump','Elixir.Mix.Tasks.Ecto.Gen.Migration',
          'Elixir.Mix.Tasks.Ecto.Load','Elixir.Mix.Tasks.Ecto.Migrate',
          'Elixir.Mix.Tasks.Ecto.Migrations','Elixir.Mix.Tasks.Ecto.Rollback',
          'Elixir.Tds.Ecto.UUID','Elixir.Tds.Ecto.VarChar']},
     {path,["$ROOT/lib/uuid-1.1.8/ebin"]},
     {primLoad,['Elixir.UUID']},
     {path,["$ROOT/lib/store-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.Store.Application',
          'Elixir.Autoflow.Store.Dispatcher','Elixir.Autoflow.Store.Manager',
          'Elixir.Autoflow.Store.Migration',
          'Elixir.Autoflow.Store.Procedure.Table',
          'Elixir.Autoflow.Store.Process.ChangeHandler',
          'Elixir.Autoflow.Store.Process.TableExpiry',
          'Elixir.Autoflow.Store.Record','Elixir.Autoflow.Store.Resource',
          'Elixir.Autoflow.Store.Table',
          'Elixir.Autoflow.Store.Table.ChangeHistory',
          'Elixir.Autoflow.Store.Table.Data',
          'Elixir.Autoflow.Store.Table.DataGroup',
          'Elixir.Autoflow.Store.Table.File',
          'Elixir.Autoflow.Store.Table.FileContent',
          'Elixir.Autoflow.Store.Table.Flow',
          'Elixir.Autoflow.Store.Table.Inbound',
          'Elixir.Autoflow.Store.Table.InboundEndpoint',
          'Elixir.Autoflow.Store.Table.ResourceInfo',
          'Elixir.Autoflow.Store.Table.Schema',
          'Elixir.Autoflow.Store.Table.Schema.Http.Header',
          'Elixir.Autoflow.Store.Table.Schema.Http.Oauth',
          'Elixir.Autoflow.Store.Table.Schema.Http.Operation',
          'Elixir.Autoflow.Store.Table.Schema.Http.Parameter',
          'Elixir.Autoflow.Store.Table.Schema.Http.PathItem',
          'Elixir.Autoflow.Store.Table.Schema.Http.RequestBody',
          'Elixir.Autoflow.Store.Table.Schema.Http.Response',
          'Elixir.Autoflow.Store.Table.Schema.Http.Schema',
          'Elixir.Autoflow.Store.Table.Schema.Http.SecurityScheme',
          'Elixir.Autoflow.Store.Table.Schema.Http.Tokens',
          'Elixir.Autoflow.Store.Table.Test',
          'Elixir.Autoflow.Store.Table.Timer',
          'Elixir.Autoflow.Store.Table.User',
          'Elixir.Autoflow.Store.Table.Variable']},
     {path,["$ROOT/lib/store_mnesia-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.StoreMnesia.Adapter',
          'Elixir.Autoflow.StoreMnesia.Application']},
     {path,["$ROOT/lib/logger_file_backend-0.0.11/ebin"]},
     {primLoad,['Elixir.LoggerFileBackend']},
     {path,["$ROOT/lib/goldrush-0.1.9/ebin"]},
     {primLoad,
         [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,gr_context,gr_counter,
          gr_counter_sup,gr_manager,gr_manager_sup,gr_param,gr_param_sup,
          gr_sup,gre]},
     {path,["$ROOT/lib/lager-3.8.0/ebin"]},
     {primLoad,
         [error_logger_lager_h,lager,lager_app,lager_backend_throttle,
          lager_common_test_backend,lager_config,lager_console_backend,
          lager_crash_log,lager_default_formatter,lager_file_backend,
          lager_format,lager_handler_watcher,lager_handler_watcher_sup,
          lager_manager_killer,lager_msg,lager_rotator_behaviour,
          lager_rotator_default,lager_stdlib,lager_sup,lager_transform,
          lager_trunc_io,lager_util]},
     {path,["$ROOT/lib/xmerl-1.3.20.1/ebin"]},
     {primLoad,
         [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,xmerl_html,
          xmerl_lib,xmerl_otpsgml,xmerl_regexp,xmerl_sax_old_dom,
          xmerl_sax_parser,xmerl_sax_parser_latin1,xmerl_sax_parser_list,
          xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
          xmerl_sax_parser_utf8,xmerl_sax_simple_dom,xmerl_scan,xmerl_sgml,
          xmerl_simple,xmerl_text,xmerl_ucs,xmerl_uri,xmerl_validate,
          xmerl_xlate,xmerl_xml,xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
          xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
          xmerl_xsd_type]},
     {path,["$ROOT/lib/sasl-3.3/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/tools-3.1.0.1/ebin"]},
     {primLoad,
         [cover,eprof,fprof,instrument,lcnt,make,xref,xref_base,xref_compiler,
          xref_parser,xref_reader,xref_scanner,xref_utils]},
     {path,["$ROOT/lib/jsx-2.11.0/ebin"]},
     {primLoad,
         [jsx,jsx_config,jsx_consult,jsx_decoder,jsx_encoder,jsx_parser,
          jsx_to_json,jsx_to_term,jsx_verify]},
     {path,["$ROOT/lib/recon-2.5.1/ebin"]},
     {primLoad,[recon,recon_alloc,recon_lib,recon_map,recon_rec,recon_trace]},
     {path,["$ROOT/lib/credentials_obfuscation-2.2.0/ebin"]},
     {primLoad,
         [credentials_obfuscation,credentials_obfuscation_app,
          credentials_obfuscation_pbe,credentials_obfuscation_sup,
          credentials_obfuscation_svc]},
     {path,["$ROOT/lib/rabbit_common-3.8.9/ebin"]},
     {primLoad,
         [app_utils,code_version,credit_flow,delegate,delegate_sup,
          file_handle_cache,file_handle_cache_stats,gen_server2,
          lager_forwarder_backend,mirrored_supervisor,mnesia_sync,pmon,
          priority_queue,rabbit_amqp_connection,rabbit_amqqueue_common,
          rabbit_auth_backend_dummy,rabbit_auth_mechanism,
          rabbit_authn_backend,rabbit_authz_backend,rabbit_basic_common,
          rabbit_binary_generator,rabbit_binary_parser,rabbit_cert_info,
          rabbit_channel_common,rabbit_command_assembler,rabbit_control_misc,
          rabbit_core_metrics,rabbit_data_coercion,rabbit_env,
          rabbit_error_logger_handler,rabbit_event,rabbit_exchange_type,
          rabbit_framing_amqp_0_8,rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
          rabbit_http_util,rabbit_json,rabbit_log,rabbit_log_ra_shim,
          rabbit_misc,rabbit_msg_store_index,rabbit_net,rabbit_nodes_common,
          rabbit_numerical,rabbit_password_hashing,rabbit_pbe,
          rabbit_peer_discovery_backend,rabbit_policy_validator,
          rabbit_queue_collector,rabbit_registry,rabbit_registry_class,
          rabbit_resource_monitor_misc,rabbit_runtime,
          rabbit_runtime_parameter,rabbit_semver,rabbit_semver_parser,
          rabbit_ssl_options,rabbit_types,rabbit_writer,supervisor2,
          vm_memory_monitor,worker_pool,worker_pool_sup,worker_pool_worker]},
     {path,["$ROOT/lib/amqp_client-3.8.9/ebin"]},
     {primLoad,
         [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
          amqp_channel_sup_sup,amqp_channels_manager,amqp_client,
          amqp_connection,amqp_connection_sup,amqp_connection_type_sup,
          amqp_direct_connection,amqp_direct_consumer,amqp_gen_connection,
          amqp_gen_consumer,amqp_main_reader,amqp_network_connection,
          amqp_rpc_client,amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
          amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,uri_parser]},
     {path,["$ROOT/lib/amqp-1.6.0/ebin"]},
     {primLoad,
         ['Elixir.AMQP','Elixir.AMQP.Application','Elixir.AMQP.Basic',
          'Elixir.AMQP.BasicError','Elixir.AMQP.Channel',
          'Elixir.AMQP.Channel.Receiver',
          'Elixir.AMQP.Channel.ReceiverManager','Elixir.AMQP.Confirm',
          'Elixir.AMQP.Connection','Elixir.AMQP.Core',
          'Elixir.AMQP.DirectConsumer','Elixir.AMQP.Exchange',
          'Elixir.AMQP.Queue','Elixir.AMQP.Utils']},
     {path,["$ROOT/lib/rustler-0.22.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Compile.Rustler','Elixir.Mix.Tasks.Rustler.New',
          'Elixir.Rustler','Elixir.Rustler.Compiler',
          'Elixir.Rustler.Compiler.Config','Elixir.Rustler.Compiler.Messages',
          'Elixir.Rustler.Compiler.Rustup']},
     {path,["$ROOT/lib/tds_encoding-1.0.0/ebin"]},
     {primLoad,['Elixir.Tds.Encoding']},
     {path,["$ROOT/lib/redix-1.0.0/ebin"]},
     {primLoad,
         ['Elixir.Redix','Elixir.Redix.Connection',
          'Elixir.Redix.ConnectionError','Elixir.Redix.Connector',
          'Elixir.Redix.Error','Elixir.Redix.Protocol',
          'Elixir.Redix.Protocol.ParseError','Elixir.Redix.PubSub',
          'Elixir.Redix.PubSub.Connection','Elixir.Redix.SocketOwner',
          'Elixir.Redix.StartOptions','Elixir.Redix.Telemetry',
          'Elixir.Redix.URI']},
     {path,["$ROOT/lib/mutex-1.1.3/ebin"]},
     {primLoad,['Elixir.Mutex','Elixir.Mutex.Lock','Elixir.Mutex.S']},
     {path,["$ROOT/lib/yamerl-0.7.0/ebin"]},
     {primLoad,
         [yamerl,yamerl_app,yamerl_constr,yamerl_errors,yamerl_node_bool,
          yamerl_node_bool_ext,yamerl_node_bool_json,yamerl_node_erlang_atom,
          yamerl_node_erlang_fun,yamerl_node_float,yamerl_node_float_ext,
          yamerl_node_float_json,yamerl_node_int,yamerl_node_int_ext,
          yamerl_node_int_json,yamerl_node_ipaddr,yamerl_node_map,
          yamerl_node_null,yamerl_node_null_json,yamerl_node_seq,
          yamerl_node_size,yamerl_node_str,yamerl_node_str_json,
          yamerl_node_timestamp,yamerl_parser,yamerl_sup,
          yamerl_yamler_compat]},
     {path,["$ROOT/lib/varint-1.2.0/ebin"]},
     {primLoad,['Elixir.Varint.LEB128','Elixir.Varint.Zigzag']},
     {path,["$ROOT/lib/crc32cer-0.1.10/ebin"]},
     {primLoad,[crc32cer]},
     {path,["$ROOT/lib/kayrock-0.1.12/ebin"]},
     {primLoad,
         ['Elixir.Kayrock','Elixir.Kayrock.AddOffsetsToTxn',
          'Elixir.Kayrock.AddOffsetsToTxn.V0.Request',
          'Elixir.Kayrock.AddOffsetsToTxn.V0.Response',
          'Elixir.Kayrock.AddPartitionsToTxn',
          'Elixir.Kayrock.AddPartitionsToTxn.V0.Request',
          'Elixir.Kayrock.AddPartitionsToTxn.V0.Response',
          'Elixir.Kayrock.AlterConfigs',
          'Elixir.Kayrock.AlterConfigs.V0.Request',
          'Elixir.Kayrock.AlterConfigs.V0.Response',
          'Elixir.Kayrock.AlterReplicaLogDirs',
          'Elixir.Kayrock.AlterReplicaLogDirs.V0.Request',
          'Elixir.Kayrock.AlterReplicaLogDirs.V0.Response',
          'Elixir.Kayrock.ApiVersions',
          'Elixir.Kayrock.ApiVersions.V0.Request',
          'Elixir.Kayrock.ApiVersions.V0.Response',
          'Elixir.Kayrock.ApiVersions.V1.Request',
          'Elixir.Kayrock.ApiVersions.V1.Response',
          'Elixir.Kayrock.BinaryDebugUtil','Elixir.Kayrock.BrokerConnection',
          'Elixir.Kayrock.BrokerConnection.State','Elixir.Kayrock.Client',
          'Elixir.Kayrock.Client.Broker',
          'Elixir.Kayrock.Client.ClusterMetadata',
          'Elixir.Kayrock.Client.Opts','Elixir.Kayrock.Client.State',
          'Elixir.Kayrock.Client.Topic','Elixir.Kayrock.Compression',
          'Elixir.Kayrock.Convenience','Elixir.Kayrock.CreateAcls',
          'Elixir.Kayrock.CreateAcls.V0.Request',
          'Elixir.Kayrock.CreateAcls.V0.Response',
          'Elixir.Kayrock.CreateDelegationToken',
          'Elixir.Kayrock.CreateDelegationToken.V0.Request',
          'Elixir.Kayrock.CreateDelegationToken.V0.Response',
          'Elixir.Kayrock.CreatePartitions',
          'Elixir.Kayrock.CreatePartitions.V0.Request',
          'Elixir.Kayrock.CreatePartitions.V0.Response',
          'Elixir.Kayrock.CreateTopics',
          'Elixir.Kayrock.CreateTopics.V0.Request',
          'Elixir.Kayrock.CreateTopics.V0.Response',
          'Elixir.Kayrock.CreateTopics.V1.Request',
          'Elixir.Kayrock.CreateTopics.V1.Response',
          'Elixir.Kayrock.CreateTopics.V2.Request',
          'Elixir.Kayrock.CreateTopics.V2.Response',
          'Elixir.Kayrock.DeleteAcls','Elixir.Kayrock.DeleteAcls.V0.Request',
          'Elixir.Kayrock.DeleteAcls.V0.Response',
          'Elixir.Kayrock.DeleteGroups',
          'Elixir.Kayrock.DeleteGroups.V0.Request',
          'Elixir.Kayrock.DeleteGroups.V0.Response',
          'Elixir.Kayrock.DeleteRecords',
          'Elixir.Kayrock.DeleteRecords.V0.Request',
          'Elixir.Kayrock.DeleteRecords.V0.Response',
          'Elixir.Kayrock.DeleteTopics',
          'Elixir.Kayrock.DeleteTopics.V0.Request',
          'Elixir.Kayrock.DeleteTopics.V0.Response',
          'Elixir.Kayrock.DeleteTopics.V1.Request',
          'Elixir.Kayrock.DeleteTopics.V1.Response',
          'Elixir.Kayrock.DescribeAcls',
          'Elixir.Kayrock.DescribeAcls.V0.Request',
          'Elixir.Kayrock.DescribeAcls.V0.Response',
          'Elixir.Kayrock.DescribeConfigs',
          'Elixir.Kayrock.DescribeConfigs.V0.Request',
          'Elixir.Kayrock.DescribeConfigs.V0.Response',
          'Elixir.Kayrock.DescribeConfigs.V1.Request',
          'Elixir.Kayrock.DescribeConfigs.V1.Response',
          'Elixir.Kayrock.DescribeDelegationToken',
          'Elixir.Kayrock.DescribeDelegationToken.V0.Request',
          'Elixir.Kayrock.DescribeDelegationToken.V0.Response',
          'Elixir.Kayrock.DescribeGroups',
          'Elixir.Kayrock.DescribeGroups.V0.Request',
          'Elixir.Kayrock.DescribeGroups.V0.Response',
          'Elixir.Kayrock.DescribeGroups.V1.Request',
          'Elixir.Kayrock.DescribeGroups.V1.Response',
          'Elixir.Kayrock.DescribeLogDirs',
          'Elixir.Kayrock.DescribeLogDirs.V0.Request',
          'Elixir.Kayrock.DescribeLogDirs.V0.Response',
          'Elixir.Kayrock.Deserialize','Elixir.Kayrock.EndTxn',
          'Elixir.Kayrock.EndTxn.V0.Request',
          'Elixir.Kayrock.EndTxn.V0.Response','Elixir.Kayrock.ErrorCode',
          'Elixir.Kayrock.ErrorCode.InvalidAtomException',
          'Elixir.Kayrock.ErrorCode.InvalidErrorCodeException',
          'Elixir.Kayrock.ExpireDelegationToken',
          'Elixir.Kayrock.ExpireDelegationToken.V0.Request',
          'Elixir.Kayrock.ExpireDelegationToken.V0.Response',
          'Elixir.Kayrock.Fetch','Elixir.Kayrock.Fetch.V0.Request',
          'Elixir.Kayrock.Fetch.V0.Response',
          'Elixir.Kayrock.Fetch.V1.Request',
          'Elixir.Kayrock.Fetch.V1.Response',
          'Elixir.Kayrock.Fetch.V2.Request',
          'Elixir.Kayrock.Fetch.V2.Response',
          'Elixir.Kayrock.Fetch.V3.Request',
          'Elixir.Kayrock.Fetch.V3.Response',
          'Elixir.Kayrock.Fetch.V4.Request',
          'Elixir.Kayrock.Fetch.V4.Response',
          'Elixir.Kayrock.Fetch.V5.Request',
          'Elixir.Kayrock.Fetch.V5.Response',
          'Elixir.Kayrock.Fetch.V6.Request',
          'Elixir.Kayrock.Fetch.V6.Response',
          'Elixir.Kayrock.Fetch.V7.Request',
          'Elixir.Kayrock.Fetch.V7.Response','Elixir.Kayrock.FindCoordinator',
          'Elixir.Kayrock.FindCoordinator.V0.Request',
          'Elixir.Kayrock.FindCoordinator.V0.Response',
          'Elixir.Kayrock.FindCoordinator.V1.Request',
          'Elixir.Kayrock.FindCoordinator.V1.Response',
          'Elixir.Kayrock.Generate','Elixir.Kayrock.GroupProtocolMetadata',
          'Elixir.Kayrock.Heartbeat','Elixir.Kayrock.Heartbeat.V0.Request',
          'Elixir.Kayrock.Heartbeat.V0.Response',
          'Elixir.Kayrock.Heartbeat.V1.Request',
          'Elixir.Kayrock.Heartbeat.V1.Response',
          'Elixir.Kayrock.InitProducerId',
          'Elixir.Kayrock.InitProducerId.V0.Request',
          'Elixir.Kayrock.InitProducerId.V0.Response',
          'Elixir.Kayrock.InvalidRequestError','Elixir.Kayrock.JoinGroup',
          'Elixir.Kayrock.JoinGroup.V0.Request',
          'Elixir.Kayrock.JoinGroup.V0.Response',
          'Elixir.Kayrock.JoinGroup.V1.Request',
          'Elixir.Kayrock.JoinGroup.V1.Response',
          'Elixir.Kayrock.JoinGroup.V2.Request',
          'Elixir.Kayrock.JoinGroup.V2.Response',
          'Elixir.Kayrock.KafkaSchemaMetadata','Elixir.Kayrock.LeaveGroup',
          'Elixir.Kayrock.LeaveGroup.V0.Request',
          'Elixir.Kayrock.LeaveGroup.V0.Response',
          'Elixir.Kayrock.LeaveGroup.V1.Request',
          'Elixir.Kayrock.LeaveGroup.V1.Response','Elixir.Kayrock.ListGroups',
          'Elixir.Kayrock.ListGroups.V0.Request',
          'Elixir.Kayrock.ListGroups.V0.Response',
          'Elixir.Kayrock.ListGroups.V1.Request',
          'Elixir.Kayrock.ListGroups.V1.Response',
          'Elixir.Kayrock.ListOffsets',
          'Elixir.Kayrock.ListOffsets.V0.Request',
          'Elixir.Kayrock.ListOffsets.V0.Response',
          'Elixir.Kayrock.ListOffsets.V1.Request',
          'Elixir.Kayrock.ListOffsets.V1.Response',
          'Elixir.Kayrock.ListOffsets.V2.Request',
          'Elixir.Kayrock.ListOffsets.V2.Response','Elixir.Kayrock.Macros',
          'Elixir.Kayrock.MemberAssignment',
          'Elixir.Kayrock.MemberAssignment.PartitionAssignment',
          'Elixir.Kayrock.MessageSet','Elixir.Kayrock.MessageSet.Message',
          'Elixir.Kayrock.Metadata','Elixir.Kayrock.Metadata.V0.Request',
          'Elixir.Kayrock.Metadata.V0.Response',
          'Elixir.Kayrock.Metadata.V1.Request',
          'Elixir.Kayrock.Metadata.V1.Response',
          'Elixir.Kayrock.Metadata.V2.Request',
          'Elixir.Kayrock.Metadata.V2.Response',
          'Elixir.Kayrock.Metadata.V3.Request',
          'Elixir.Kayrock.Metadata.V3.Response',
          'Elixir.Kayrock.Metadata.V4.Request',
          'Elixir.Kayrock.Metadata.V4.Response',
          'Elixir.Kayrock.Metadata.V5.Request',
          'Elixir.Kayrock.Metadata.V5.Response','Elixir.Kayrock.OffsetCommit',
          'Elixir.Kayrock.OffsetCommit.V0.Request',
          'Elixir.Kayrock.OffsetCommit.V0.Response',
          'Elixir.Kayrock.OffsetCommit.V1.Request',
          'Elixir.Kayrock.OffsetCommit.V1.Response',
          'Elixir.Kayrock.OffsetCommit.V2.Request',
          'Elixir.Kayrock.OffsetCommit.V2.Response',
          'Elixir.Kayrock.OffsetCommit.V3.Request',
          'Elixir.Kayrock.OffsetCommit.V3.Response',
          'Elixir.Kayrock.OffsetFetch',
          'Elixir.Kayrock.OffsetFetch.V0.Request',
          'Elixir.Kayrock.OffsetFetch.V0.Response',
          'Elixir.Kayrock.OffsetFetch.V1.Request',
          'Elixir.Kayrock.OffsetFetch.V1.Response',
          'Elixir.Kayrock.OffsetFetch.V2.Request',
          'Elixir.Kayrock.OffsetFetch.V2.Response',
          'Elixir.Kayrock.OffsetFetch.V3.Request',
          'Elixir.Kayrock.OffsetFetch.V3.Response','Elixir.Kayrock.Produce',
          'Elixir.Kayrock.Produce.V0.Request',
          'Elixir.Kayrock.Produce.V0.Response',
          'Elixir.Kayrock.Produce.V1.Request',
          'Elixir.Kayrock.Produce.V1.Response',
          'Elixir.Kayrock.Produce.V2.Request',
          'Elixir.Kayrock.Produce.V2.Response',
          'Elixir.Kayrock.Produce.V3.Request',
          'Elixir.Kayrock.Produce.V3.Response',
          'Elixir.Kayrock.Produce.V4.Request',
          'Elixir.Kayrock.Produce.V4.Response',
          'Elixir.Kayrock.Produce.V5.Request',
          'Elixir.Kayrock.Produce.V5.Response','Elixir.Kayrock.RecordBatch',
          'Elixir.Kayrock.RecordBatch.Record',
          'Elixir.Kayrock.RecordBatch.RecordHeader',
          'Elixir.Kayrock.RenewDelegationToken',
          'Elixir.Kayrock.RenewDelegationToken.V0.Request',
          'Elixir.Kayrock.RenewDelegationToken.V0.Response',
          'Elixir.Kayrock.Request',
          'Elixir.Kayrock.Request.Kayrock.AddOffsetsToTxn.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.AddPartitionsToTxn.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.AlterConfigs.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.AlterReplicaLogDirs.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.ApiVersions.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.ApiVersions.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.CreateAcls.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.CreateDelegationToken.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.CreatePartitions.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.CreateTopics.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.CreateTopics.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.CreateTopics.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.DeleteAcls.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DeleteGroups.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DeleteRecords.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DeleteTopics.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DeleteTopics.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeAcls.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeConfigs.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeConfigs.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeDelegationToken.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeGroups.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeGroups.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.DescribeLogDirs.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.EndTxn.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.ExpireDelegationToken.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V3.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V4.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V5.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V6.Request',
          'Elixir.Kayrock.Request.Kayrock.Fetch.V7.Request',
          'Elixir.Kayrock.Request.Kayrock.FindCoordinator.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.FindCoordinator.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.Heartbeat.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.Heartbeat.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.InitProducerId.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.JoinGroup.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.JoinGroup.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.JoinGroup.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.LeaveGroup.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.LeaveGroup.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.ListGroups.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.ListGroups.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.ListOffsets.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.ListOffsets.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.ListOffsets.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.MessageSet',
          'Elixir.Kayrock.Request.Kayrock.Metadata.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.Metadata.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.Metadata.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.Metadata.V3.Request',
          'Elixir.Kayrock.Request.Kayrock.Metadata.V4.Request',
          'Elixir.Kayrock.Request.Kayrock.Metadata.V5.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V3.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V3.Request',
          'Elixir.Kayrock.Request.Kayrock.Produce.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.Produce.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.Produce.V2.Request',
          'Elixir.Kayrock.Request.Kayrock.Produce.V3.Request',
          'Elixir.Kayrock.Request.Kayrock.Produce.V4.Request',
          'Elixir.Kayrock.Request.Kayrock.Produce.V5.Request',
          'Elixir.Kayrock.Request.Kayrock.RecordBatch',
          'Elixir.Kayrock.Request.Kayrock.RenewDelegationToken.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.SaslAuthenticate.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.SaslHandshake.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.SaslHandshake.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.SyncGroup.V0.Request',
          'Elixir.Kayrock.Request.Kayrock.SyncGroup.V1.Request',
          'Elixir.Kayrock.Request.Kayrock.TxnOffsetCommit.V0.Request',
          'Elixir.Kayrock.SaslAuthenticate',
          'Elixir.Kayrock.SaslAuthenticate.V0.Request',
          'Elixir.Kayrock.SaslAuthenticate.V0.Response',
          'Elixir.Kayrock.SaslHandshake',
          'Elixir.Kayrock.SaslHandshake.V0.Request',
          'Elixir.Kayrock.SaslHandshake.V0.Response',
          'Elixir.Kayrock.SaslHandshake.V1.Request',
          'Elixir.Kayrock.SaslHandshake.V1.Response',
          'Elixir.Kayrock.Serialize','Elixir.Kayrock.Socket',
          'Elixir.Kayrock.SyncGroup','Elixir.Kayrock.SyncGroup.V0.Request',
          'Elixir.Kayrock.SyncGroup.V0.Response',
          'Elixir.Kayrock.SyncGroup.V1.Request',
          'Elixir.Kayrock.SyncGroup.V1.Response',
          'Elixir.Kayrock.TxnOffsetCommit',
          'Elixir.Kayrock.TxnOffsetCommit.V0.Request',
          'Elixir.Kayrock.TxnOffsetCommit.V0.Response',
          'Elixir.Mix.Tasks.Gen.KafkaProtocol']},
     {path,["$ROOT/lib/kafka_ex-0.11.0/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.KafkaEx.Stream','Elixir.KafkaEx',
          'Elixir.KafkaEx.ApiVersions','Elixir.KafkaEx.Compression',
          'Elixir.KafkaEx.Config','Elixir.KafkaEx.ConsumerGroup',
          'Elixir.KafkaEx.ConsumerGroup.Heartbeat',
          'Elixir.KafkaEx.ConsumerGroup.Heartbeat.State',
          'Elixir.KafkaEx.ConsumerGroup.Manager',
          'Elixir.KafkaEx.ConsumerGroup.Manager.State',
          'Elixir.KafkaEx.ConsumerGroup.PartitionAssignment',
          'Elixir.KafkaEx.ConsumerGroupRequiredError',
          'Elixir.KafkaEx.DefaultPartitioner','Elixir.KafkaEx.GenConsumer',
          'Elixir.KafkaEx.GenConsumer.State',
          'Elixir.KafkaEx.GenConsumer.Supervisor',
          'Elixir.KafkaEx.InvalidConsumerGroupError',
          'Elixir.KafkaEx.LegacyPartitioner','Elixir.KafkaEx.NetworkClient',
          'Elixir.KafkaEx.New.Adapter','Elixir.KafkaEx.New.Broker',
          'Elixir.KafkaEx.New.Client','Elixir.KafkaEx.New.Client.State',
          'Elixir.KafkaEx.New.ClientCompatibility',
          'Elixir.KafkaEx.New.ClusterMetadata',
          'Elixir.KafkaEx.New.KafkaExAPI','Elixir.KafkaEx.New.NodeSelector',
          'Elixir.KafkaEx.New.Partition','Elixir.KafkaEx.New.Topic',
          'Elixir.KafkaEx.Partitioner','Elixir.KafkaEx.Protocol',
          'Elixir.KafkaEx.Protocol.ApiVersions',
          'Elixir.KafkaEx.Protocol.ApiVersions.ApiVersion',
          'Elixir.KafkaEx.Protocol.ApiVersions.Response',
          'Elixir.KafkaEx.Protocol.Common',
          'Elixir.KafkaEx.Protocol.ConsumerMetadata',
          'Elixir.KafkaEx.Protocol.ConsumerMetadata.Response',
          'Elixir.KafkaEx.Protocol.CreateTopics',
          'Elixir.KafkaEx.Protocol.CreateTopics.ConfigEntry',
          'Elixir.KafkaEx.Protocol.CreateTopics.ReplicaAssignment',
          'Elixir.KafkaEx.Protocol.CreateTopics.Request',
          'Elixir.KafkaEx.Protocol.CreateTopics.Response',
          'Elixir.KafkaEx.Protocol.CreateTopics.TopicError',
          'Elixir.KafkaEx.Protocol.CreateTopics.TopicRequest',
          'Elixir.KafkaEx.Protocol.DeleteTopics',
          'Elixir.KafkaEx.Protocol.DeleteTopics.Request',
          'Elixir.KafkaEx.Protocol.DeleteTopics.Response',
          'Elixir.KafkaEx.Protocol.DeleteTopics.TopicError',
          'Elixir.KafkaEx.Protocol.Fetch',
          'Elixir.KafkaEx.Protocol.Fetch.Message',
          'Elixir.KafkaEx.Protocol.Fetch.Request',
          'Elixir.KafkaEx.Protocol.Fetch.Response',
          'Elixir.KafkaEx.Protocol.Heartbeat',
          'Elixir.KafkaEx.Protocol.Heartbeat.Request',
          'Elixir.KafkaEx.Protocol.Heartbeat.Response',
          'Elixir.KafkaEx.Protocol.JoinGroup',
          'Elixir.KafkaEx.Protocol.JoinGroup.Request',
          'Elixir.KafkaEx.Protocol.JoinGroup.Response',
          'Elixir.KafkaEx.Protocol.LeaveGroup',
          'Elixir.KafkaEx.Protocol.LeaveGroup.Request',
          'Elixir.KafkaEx.Protocol.LeaveGroup.Response',
          'Elixir.KafkaEx.Protocol.Metadata',
          'Elixir.KafkaEx.Protocol.Metadata.Broker',
          'Elixir.KafkaEx.Protocol.Metadata.PartitionMetadata',
          'Elixir.KafkaEx.Protocol.Metadata.Request',
          'Elixir.KafkaEx.Protocol.Metadata.Response',
          'Elixir.KafkaEx.Protocol.Metadata.TopicMetadata',
          'Elixir.KafkaEx.Protocol.Offset',
          'Elixir.KafkaEx.Protocol.Offset.Request',
          'Elixir.KafkaEx.Protocol.Offset.Response',
          'Elixir.KafkaEx.Protocol.OffsetCommit',
          'Elixir.KafkaEx.Protocol.OffsetCommit.Request',
          'Elixir.KafkaEx.Protocol.OffsetCommit.Response',
          'Elixir.KafkaEx.Protocol.OffsetFetch',
          'Elixir.KafkaEx.Protocol.OffsetFetch.Request',
          'Elixir.KafkaEx.Protocol.OffsetFetch.Response',
          'Elixir.KafkaEx.Protocol.Produce',
          'Elixir.KafkaEx.Protocol.Produce.Message',
          'Elixir.KafkaEx.Protocol.Produce.Request',
          'Elixir.KafkaEx.Protocol.Produce.Response',
          'Elixir.KafkaEx.Protocol.SyncGroup',
          'Elixir.KafkaEx.Protocol.SyncGroup.Assignment',
          'Elixir.KafkaEx.Protocol.SyncGroup.Request',
          'Elixir.KafkaEx.Protocol.SyncGroup.Response',
          'Elixir.KafkaEx.Server','Elixir.KafkaEx.Server.State',
          'Elixir.KafkaEx.Server0P10AndLater','Elixir.KafkaEx.Server0P8P0',
          'Elixir.KafkaEx.Server0P8P2','Elixir.KafkaEx.Server0P9P0',
          'Elixir.KafkaEx.Socket','Elixir.KafkaEx.Stream',
          'Elixir.KafkaEx.Supervisor',
          'Elixir.KafkaEx.TimestampNotSupportedError',
          'Elixir.KafkaEx.Utils.Murmur']},
     {path,["$ROOT/lib/poolboy-1.5.2/ebin"]},
     {primLoad,[poolboy,poolboy_sup,poolboy_worker]},
     {path,["$ROOT/lib/gen_smtp-0.15.0/ebin"]},
     {primLoad,
         [binstr,gen_smtp_application,gen_smtp_client,gen_smtp_server,
          gen_smtp_server_session,mimemail,smtp_rfc822_parse,
          smtp_server_example,smtp_socket,smtp_util]},
     {path,["$ROOT/lib/elixir_radius-1.0.0/ebin"]},
     {primLoad,
         ['Elixir.Radius','Elixir.Radius.Application','Elixir.Radius.Dict',
          'Elixir.Radius.Dict.Attribute','Elixir.Radius.Dict.DictEntry',
          'Elixir.Radius.Dict.EntryNotFoundError',
          'Elixir.Radius.Dict.ParserError','Elixir.Radius.Dict.Value',
          'Elixir.Radius.Dict.Vendor','Elixir.Radius.Packet',
          'Elixir.Radius.Supervisor','Elixir.Radius.Util',radius_dict_lex,
          radius_dict_parser]},
     {path,["$ROOT/lib/aws-0.7.0/ebin"]},
     {primLoad,
         ['Elixir.AWS','Elixir.AWS.ACM','Elixir.AWS.ACMPCA',
          'Elixir.AWS.API.Pricing','Elixir.AWS.APIGateway',
          'Elixir.AWS.AccessAnalyzer','Elixir.AWS.AlexaForBusiness',
          'Elixir.AWS.Amplify','Elixir.AWS.ApiGatewayManagementApi',
          'Elixir.AWS.ApiGatewayV2','Elixir.AWS.AppConfig',
          'Elixir.AWS.AppMesh','Elixir.AWS.AppStream','Elixir.AWS.AppSync',
          'Elixir.AWS.Appflow','Elixir.AWS.ApplicationAutoScaling',
          'Elixir.AWS.ApplicationDiscovery','Elixir.AWS.ApplicationInsights',
          'Elixir.AWS.Athena','Elixir.AWS.AutoScaling',
          'Elixir.AWS.AutoScalingPlans','Elixir.AWS.Backup',
          'Elixir.AWS.Batch','Elixir.AWS.Braket','Elixir.AWS.Budgets',
          'Elixir.AWS.Chime','Elixir.AWS.Client','Elixir.AWS.Cloud9',
          'Elixir.AWS.CloudDirectory','Elixir.AWS.CloudFormation',
          'Elixir.AWS.CloudFront','Elixir.AWS.CloudHSM',
          'Elixir.AWS.CloudHSMV2','Elixir.AWS.CloudSearch',
          'Elixir.AWS.CloudTrail','Elixir.AWS.CloudWatch',
          'Elixir.AWS.CloudWatchEvents','Elixir.AWS.CloudWatchLogs',
          'Elixir.AWS.Cloudsearchdomain','Elixir.AWS.CodeBuild',
          'Elixir.AWS.CodeCommit','Elixir.AWS.CodeDeploy',
          'Elixir.AWS.CodeGuruProfiler','Elixir.AWS.CodeGuruReviewer',
          'Elixir.AWS.CodePipeline','Elixir.AWS.CodeStar',
          'Elixir.AWS.CodeStarConnections','Elixir.AWS.Codeartifact',
          'Elixir.AWS.Codestarnotifications','Elixir.AWS.CognitoIdentity',
          'Elixir.AWS.CognitoIdentityProvider','Elixir.AWS.CognitoSync',
          'Elixir.AWS.Comprehend','Elixir.AWS.ComprehendMedical',
          'Elixir.AWS.ComputeOptimizer','Elixir.AWS.Config',
          'Elixir.AWS.Connect','Elixir.AWS.ConnectParticipant',
          'Elixir.AWS.CostExplorer','Elixir.AWS.CostandUsageReport',
          'Elixir.AWS.DAX','Elixir.AWS.DLM','Elixir.AWS.DataBrew',
          'Elixir.AWS.DataExchange','Elixir.AWS.DataSync',
          'Elixir.AWS.DatabaseMigration','Elixir.AWS.Datapipeline',
          'Elixir.AWS.Detective','Elixir.AWS.DeviceFarm',
          'Elixir.AWS.DirectConnect','Elixir.AWS.Directory',
          'Elixir.AWS.DocDB','Elixir.AWS.DynamoDB',
          'Elixir.AWS.DynamoDBStreams','Elixir.AWS.EBS',
          'Elixir.AWS.EC2InstanceConnect','Elixir.AWS.ECR','Elixir.AWS.ECS',
          'Elixir.AWS.EFS','Elixir.AWS.EKS','Elixir.AWS.EMR',
          'Elixir.AWS.ElastiCache','Elixir.AWS.ElasticBeanstalk',
          'Elixir.AWS.ElasticInference','Elixir.AWS.ElasticLoadBalancing',
          'Elixir.AWS.ElasticLoadBalancingv2','Elixir.AWS.ElasticTranscoder',
          'Elixir.AWS.Elasticsearch','Elixir.AWS.Entitlement.Marketplace',
          'Elixir.AWS.EventBridge','Elixir.AWS.FMS','Elixir.AWS.FSx',
          'Elixir.AWS.Firehose','Elixir.AWS.Forecast',
          'Elixir.AWS.Forecastquery','Elixir.AWS.FraudDetector',
          'Elixir.AWS.GameLift','Elixir.AWS.Glacier',
          'Elixir.AWS.GlobalAccelerator','Elixir.AWS.Glue',
          'Elixir.AWS.Greengrass','Elixir.AWS.GroundStation',
          'Elixir.AWS.GuardDuty','Elixir.AWS.HTTPClient','Elixir.AWS.Health',
          'Elixir.AWS.Honeycode','Elixir.AWS.IAM','Elixir.AWS.Identitystore',
          'Elixir.AWS.Imagebuilder','Elixir.AWS.Importexport',
          'Elixir.AWS.Inspector','Elixir.AWS.IoT',
          'Elixir.AWS.IoT1ClickDevices','Elixir.AWS.IoT1ClickProjects',
          'Elixir.AWS.IoTAnalytics','Elixir.AWS.IoTDataPlane',
          'Elixir.AWS.IoTEvents','Elixir.AWS.IoTEventsData',
          'Elixir.AWS.IoTJobsDataPlane','Elixir.AWS.IoTSecureTunneling',
          'Elixir.AWS.IoTSiteWise','Elixir.AWS.IoTThingsGraph',
          'Elixir.AWS.Ivs','Elixir.AWS.JSON','Elixir.AWS.KMS',
          'Elixir.AWS.Kafka','Elixir.AWS.Kendra','Elixir.AWS.Kinesis',
          'Elixir.AWS.KinesisAnalytics','Elixir.AWS.KinesisAnalyticsV2',
          'Elixir.AWS.KinesisVideo','Elixir.AWS.KinesisVideoArchivedMedia',
          'Elixir.AWS.KinesisVideoMedia','Elixir.AWS.KinesisVideoSignaling',
          'Elixir.AWS.LakeFormation','Elixir.AWS.Lambda',
          'Elixir.AWS.LexModelBuilding','Elixir.AWS.LexRuntime',
          'Elixir.AWS.LicenseManager','Elixir.AWS.Lightsail',
          'Elixir.AWS.MTurk','Elixir.AWS.MWAA','Elixir.AWS.Machinelearning',
          'Elixir.AWS.Macie','Elixir.AWS.Macie2',
          'Elixir.AWS.ManagedBlockchain','Elixir.AWS.MarketplaceCatalog',
          'Elixir.AWS.MarketplaceCommerceAnalytics',
          'Elixir.AWS.MarketplaceMetering','Elixir.AWS.MediaConnect',
          'Elixir.AWS.MediaConvert','Elixir.AWS.MediaLive',
          'Elixir.AWS.MediaPackage','Elixir.AWS.MediaPackageVod',
          'Elixir.AWS.MediaStore','Elixir.AWS.MediaStoreData',
          'Elixir.AWS.MediaTailor','Elixir.AWS.MigrationHub',
          'Elixir.AWS.MigrationHubConfig','Elixir.AWS.Mobile',
          'Elixir.AWS.Mobileanalytics','Elixir.AWS.Mq','Elixir.AWS.Neptune',
          'Elixir.AWS.NetworkFirewall','Elixir.AWS.NetworkManager',
          'Elixir.AWS.OpsWorks','Elixir.AWS.OpsWorksCM',
          'Elixir.AWS.Organizations','Elixir.AWS.Outposts','Elixir.AWS.PI',
          'Elixir.AWS.Personalize','Elixir.AWS.PersonalizeEvents',
          'Elixir.AWS.PersonalizeRuntime','Elixir.AWS.Pinpoint',
          'Elixir.AWS.PinpointEmail','Elixir.AWS.PinpointSMSVoice',
          'Elixir.AWS.Polly','Elixir.AWS.QLDB','Elixir.AWS.QLDBSession',
          'Elixir.AWS.QuickSight','Elixir.AWS.RAM','Elixir.AWS.RDS',
          'Elixir.AWS.RDSData','Elixir.AWS.Redshift',
          'Elixir.AWS.RedshiftData','Elixir.AWS.Rekognition',
          'Elixir.AWS.Request','Elixir.AWS.Request.Internal',
          'Elixir.AWS.ResourceGroups','Elixir.AWS.ResourceGroupsTaggingAPI',
          'Elixir.AWS.RoboMaker','Elixir.AWS.Route53',
          'Elixir.AWS.Route53Domains','Elixir.AWS.Route53Resolver',
          'Elixir.AWS.S3','Elixir.AWS.S3Control','Elixir.AWS.S3Outposts',
          'Elixir.AWS.SES','Elixir.AWS.SESv2','Elixir.AWS.SFN',
          'Elixir.AWS.SMS','Elixir.AWS.SNS','Elixir.AWS.SQS','Elixir.AWS.SSM',
          'Elixir.AWS.SSO','Elixir.AWS.SSOAdmin','Elixir.AWS.SSOOIDC',
          'Elixir.AWS.STS','Elixir.AWS.SWF','Elixir.AWS.SageMaker',
          'Elixir.AWS.SageMakerA2IRuntime','Elixir.AWS.SageMakerRuntime',
          'Elixir.AWS.Savingsplans','Elixir.AWS.Schemas','Elixir.AWS.Sdb',
          'Elixir.AWS.SecretsManager','Elixir.AWS.SecurityHub',
          'Elixir.AWS.ServerlessApplicationRepository',
          'Elixir.AWS.ServiceCatalog','Elixir.AWS.ServiceCatalogAppRegistry',
          'Elixir.AWS.ServiceDiscovery','Elixir.AWS.ServiceMetadata',
          'Elixir.AWS.ServiceQuotas','Elixir.AWS.Shield','Elixir.AWS.Signer',
          'Elixir.AWS.Snowball','Elixir.AWS.StorageGateway',
          'Elixir.AWS.Support','Elixir.AWS.Synthetics','Elixir.AWS.Textract',
          'Elixir.AWS.TimestreamQuery','Elixir.AWS.TimestreamWrite',
          'Elixir.AWS.Transcribe','Elixir.AWS.TranscribeStreaming',
          'Elixir.AWS.Transfer','Elixir.AWS.Translate','Elixir.AWS.Util',
          'Elixir.AWS.WAF','Elixir.AWS.WAFRegional','Elixir.AWS.WAFV2',
          'Elixir.AWS.WorkDocs','Elixir.AWS.WorkLink','Elixir.AWS.WorkMail',
          'Elixir.AWS.WorkMailMessageFlow','Elixir.AWS.WorkSpaces',
          'Elixir.AWS.XML','Elixir.AWS.XRay']},
     {path,["$ROOT/lib/ex_aws-2.1.3/ebin"]},
     {primLoad,
         ['Elixir.ExAws','Elixir.ExAws.Auth','Elixir.ExAws.Auth.Credentials',
          'Elixir.ExAws.Auth.Signatures','Elixir.ExAws.Auth.Utils',
          'Elixir.ExAws.Behaviour','Elixir.ExAws.Config',
          'Elixir.ExAws.Config.AuthCache',
          'Elixir.ExAws.Config.AuthCache.AuthConfigAdapter',
          'Elixir.ExAws.Config.Defaults','Elixir.ExAws.CredentialsIni',
          'Elixir.ExAws.Error','Elixir.ExAws.InstanceMeta',
          'Elixir.ExAws.JSON.Codec','Elixir.ExAws.JSON.JSX',
          'Elixir.ExAws.Operation',
          'Elixir.ExAws.Operation.ExAws.Operation.JSON',
          'Elixir.ExAws.Operation.ExAws.Operation.Query',
          'Elixir.ExAws.Operation.ExAws.Operation.RestQuery',
          'Elixir.ExAws.Operation.ExAws.Operation.S3',
          'Elixir.ExAws.Operation.JSON','Elixir.ExAws.Operation.Query',
          'Elixir.ExAws.Operation.RestQuery','Elixir.ExAws.Operation.S3',
          'Elixir.ExAws.Request','Elixir.ExAws.Request.Hackney',
          'Elixir.ExAws.Request.HttpClient','Elixir.ExAws.Request.Url',
          'Elixir.ExAws.Utils','Elixir.Mix.Tasks.Aws.Kinesis.Tail']},
     {path,["$ROOT/lib/mbcs_rs-0.1.2/ebin"]},
     {primLoad,['Elixir.MbcsRs']},
     {path,["$ROOT/lib/tortoise-0.9.6/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Tortoise.Package.Subscribe',
          'Elixir.Enumerable.Tortoise.Package.Subscribe','Elixir.Tortoise',
          'Elixir.Tortoise.App','Elixir.Tortoise.Connection',
          'Elixir.Tortoise.Connection.Backoff',
          'Elixir.Tortoise.Connection.Controller',
          'Elixir.Tortoise.Connection.Inflight',
          'Elixir.Tortoise.Connection.Inflight.Track',
          'Elixir.Tortoise.Connection.Receiver',
          'Elixir.Tortoise.Connection.Supervisor','Elixir.Tortoise.Decodable',
          'Elixir.Tortoise.Decodable.BitString',
          'Elixir.Tortoise.Decodable.List','Elixir.Tortoise.Encodable',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Connack',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Connect',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Disconnect',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Pingreq',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Pingresp',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Puback',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Pubcomp',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Publish',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Pubrec',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Pubrel',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Suback',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Subscribe',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Unsuback',
          'Elixir.Tortoise.Encodable.Tortoise.Package.Unsubscribe',
          'Elixir.Tortoise.Events','Elixir.Tortoise.Handler',
          'Elixir.Tortoise.Handler.Default','Elixir.Tortoise.Handler.Logger',
          'Elixir.Tortoise.Package','Elixir.Tortoise.Package.Connack',
          'Elixir.Tortoise.Package.Connect',
          'Elixir.Tortoise.Package.Disconnect','Elixir.Tortoise.Package.Meta',
          'Elixir.Tortoise.Package.Pingreq',
          'Elixir.Tortoise.Package.Pingresp','Elixir.Tortoise.Package.Puback',
          'Elixir.Tortoise.Package.Pubcomp','Elixir.Tortoise.Package.Publish',
          'Elixir.Tortoise.Package.Pubrec','Elixir.Tortoise.Package.Pubrel',
          'Elixir.Tortoise.Package.Suback',
          'Elixir.Tortoise.Package.Subscribe',
          'Elixir.Tortoise.Package.Unsuback',
          'Elixir.Tortoise.Package.Unsubscribe','Elixir.Tortoise.Pipe',
          'Elixir.Tortoise.Registry','Elixir.Tortoise.Supervisor',
          'Elixir.Tortoise.Transport','Elixir.Tortoise.Transport.SSL',
          'Elixir.Tortoise.Transport.Tcp']},
     {path,["$ROOT/lib/jamdb_oracle-0.4.5/ebin"]},
     {primLoad,
         ['Elixir.DBConnection.Query.Jamdb.Oracle.Query',
          'Elixir.Ecto.Adapters.Jamdb.Oracle',
          'Elixir.Ecto.Adapters.Jamdb.Oracle.Connection',
          'Elixir.Jamdb.Oracle','Elixir.Jamdb.Oracle.Query',
          'Elixir.String.Chars.Jamdb.Oracle.Query',jamdb_oracle,
          jamdb_oracle_conn,jamdb_oracle_crypt,jamdb_oracle_tns_decoder,
          jamdb_oracle_tns_encoder]},
     {path,["$ROOT/lib/castore-0.1.8/ebin"]},
     {primLoad,['Elixir.CAStore']},
     {path,["$ROOT/lib/license-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.License.Application',
          'Elixir.Autoflow.License.Manager']},
     {path,["$ROOT/lib/parallel_stream-1.0.6/ebin"]},
     {primLoad,
         ['Elixir.ParallelStream','Elixir.ParallelStream.Defaults',
          'Elixir.ParallelStream.Each','Elixir.ParallelStream.Each.Consumer',
          'Elixir.ParallelStream.Executor','Elixir.ParallelStream.Filter',
          'Elixir.ParallelStream.Filter.Consumer',
          'Elixir.ParallelStream.FilterExecutor',
          'Elixir.ParallelStream.Inqueue','Elixir.ParallelStream.Mapper',
          'Elixir.ParallelStream.Mapper.Consumer',
          'Elixir.ParallelStream.Outqueue','Elixir.ParallelStream.Producer',
          'Elixir.ParallelStream.Workers',
          'Elixir.ParallelStream.Workers.Worker']},
     {path,["$ROOT/lib/csv-2.4.1/ebin"]},
     {primLoad,
         ['Elixir.CSV','Elixir.CSV.Decoding.Decoder',
          'Elixir.CSV.Decoding.Lexer','Elixir.CSV.Decoding.Parser',
          'Elixir.CSV.Decoding.Preprocessing.Lines',
          'Elixir.CSV.Decoding.Preprocessing.None','Elixir.CSV.Defaults',
          'Elixir.CSV.Encode','Elixir.CSV.Encode.Any',
          'Elixir.CSV.Encode.BitString','Elixir.CSV.Encoding.Encoder',
          'Elixir.CSV.EncodingError','Elixir.CSV.EscapeSequenceError',
          'Elixir.CSV.RowLengthError','Elixir.CSV.StrayQuoteError']},
     {path,["$ROOT/lib/phoenix_pubsub-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.PubSub','Elixir.Phoenix.PubSub.Adapter',
          'Elixir.Phoenix.PubSub.Application',
          'Elixir.Phoenix.PubSub.BroadcastError','Elixir.Phoenix.PubSub.PG2',
          'Elixir.Phoenix.PubSub.Supervisor','Elixir.Phoenix.Tracker',
          'Elixir.Phoenix.Tracker.Clock',
          'Elixir.Phoenix.Tracker.DeltaGeneration',
          'Elixir.Phoenix.Tracker.Replica','Elixir.Phoenix.Tracker.Shard',
          'Elixir.Phoenix.Tracker.State']},
     {path,["$ROOT/lib/phoenix-1.5.8/ebin"]},
     {primLoad,
         ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
          'Elixir.Mix.Phoenix.Schema','Elixir.Mix.Tasks.Compile.Phoenix',
          'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
          'Elixir.Mix.Tasks.Phx.Digest.Clean','Elixir.Mix.Tasks.Phx.Gen.Cert',
          'Elixir.Mix.Tasks.Phx.Gen.Channel',
          'Elixir.Mix.Tasks.Phx.Gen.Context',
          'Elixir.Mix.Tasks.Phx.Gen.Embedded','Elixir.Mix.Tasks.Phx.Gen.Html',
          'Elixir.Mix.Tasks.Phx.Gen.Json','Elixir.Mix.Tasks.Phx.Gen.Live',
          'Elixir.Mix.Tasks.Phx.Gen.Presence',
          'Elixir.Mix.Tasks.Phx.Gen.Schema','Elixir.Mix.Tasks.Phx.Gen.Secret',
          'Elixir.Mix.Tasks.Phx.Routes','Elixir.Mix.Tasks.Phx.Server',
          'Elixir.Phoenix','Elixir.Phoenix.ActionClauseError',
          'Elixir.Phoenix.Channel','Elixir.Phoenix.Channel.Server',
          'Elixir.Phoenix.ChannelTest',
          'Elixir.Phoenix.ChannelTest.NoopSerializer',
          'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.CodeReloader.Proxy',
          'Elixir.Phoenix.CodeReloader.Server','Elixir.Phoenix.Config',
          'Elixir.Phoenix.ConnTest','Elixir.Phoenix.Controller',
          'Elixir.Phoenix.Controller.Pipeline','Elixir.Phoenix.Digester',
          'Elixir.Phoenix.Endpoint','Elixir.Phoenix.Endpoint.Cowboy2Adapter',
          'Elixir.Phoenix.Endpoint.Cowboy2Handler',
          'Elixir.Phoenix.Endpoint.CowboyAdapter',
          'Elixir.Phoenix.Endpoint.CowboyWebSocket',
          'Elixir.Phoenix.Endpoint.RenderErrors',
          'Elixir.Phoenix.Endpoint.Supervisor',
          'Elixir.Phoenix.Endpoint.Watcher','Elixir.Phoenix.Logger',
          'Elixir.Phoenix.MissingParamError','Elixir.Phoenix.Naming',
          'Elixir.Phoenix.NotAcceptableError','Elixir.Phoenix.Param',
          'Elixir.Phoenix.Param.Any','Elixir.Phoenix.Param.Atom',
          'Elixir.Phoenix.Param.BitString','Elixir.Phoenix.Param.Integer',
          'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
          'Elixir.Phoenix.Presence.Tracker','Elixir.Phoenix.Router',
          'Elixir.Phoenix.Router.ConsoleFormatter',
          'Elixir.Phoenix.Router.Helpers',
          'Elixir.Phoenix.Router.MalformedURIError',
          'Elixir.Phoenix.Router.NoRouteError',
          'Elixir.Phoenix.Router.Resource','Elixir.Phoenix.Router.Route',
          'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
          'Elixir.Phoenix.Socket.Broadcast',
          'Elixir.Phoenix.Socket.InvalidMessageError',
          'Elixir.Phoenix.Socket.Message',
          'Elixir.Phoenix.Socket.PoolSupervisor',
          'Elixir.Phoenix.Socket.Reply','Elixir.Phoenix.Socket.Serializer',
          'Elixir.Phoenix.Socket.Transport',
          'Elixir.Phoenix.Socket.V1.JSONSerializer',
          'Elixir.Phoenix.Socket.V2.JSONSerializer','Elixir.Phoenix.Template',
          'Elixir.Phoenix.Template.EExEngine',
          'Elixir.Phoenix.Template.Engine',
          'Elixir.Phoenix.Template.ExsEngine',
          'Elixir.Phoenix.Template.UndefinedError','Elixir.Phoenix.Token',
          'Elixir.Phoenix.Transports.LongPoll',
          'Elixir.Phoenix.Transports.LongPoll.Server',
          'Elixir.Phoenix.Transports.WebSocket','Elixir.Phoenix.View',
          'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
     {path,["$ROOT/lib/flow-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.Flow','Elixir.Autoflow.Flow.Action.Array',
          'Elixir.Autoflow.Flow.Action.Communication',
          'Elixir.Autoflow.Flow.Action.Conditional',
          'Elixir.Autoflow.Flow.Action.Config',
          'Elixir.Autoflow.Flow.Action.Connection',
          'Elixir.Autoflow.Flow.Action.Data',
          'Elixir.Autoflow.Flow.Action.Database',
          'Elixir.Autoflow.Flow.Action.Database.Common',
          'Elixir.Autoflow.Flow.Action.Database.Mariadb',
          'Elixir.Autoflow.Flow.Action.Database.Mssql',
          'Elixir.Autoflow.Flow.Action.Database.Oracle',
          'Elixir.Autoflow.Flow.Action.Database.Postgres',
          'Elixir.Autoflow.Flow.Action.Datetime',
          'Elixir.Autoflow.Flow.Action.Encode',
          'Elixir.Autoflow.Flow.Action.File',
          'Elixir.Autoflow.Flow.Action.Float',
          'Elixir.Autoflow.Flow.Action.Flow',
          'Elixir.Autoflow.Flow.Action.Integer',
          'Elixir.Autoflow.Flow.Action.Iteration',
          'Elixir.Autoflow.Flow.Action.Json',
          'Elixir.Autoflow.Flow.Action.Object',
          'Elixir.Autoflow.Flow.Action.Organization',
          'Elixir.Autoflow.Flow.Action.Security',
          'Elixir.Autoflow.Flow.Action.Server',
          'Elixir.Autoflow.Flow.Action.Service',
          'Elixir.Autoflow.Flow.Action.Service.Aws.Common',
          'Elixir.Autoflow.Flow.Action.Service.Aws.S3',
          'Elixir.Autoflow.Flow.Action.Service.Oracle.Ords',
          'Elixir.Autoflow.Flow.Action.String',
          'Elixir.Autoflow.Flow.Action.System',
          'Elixir.Autoflow.Flow.Action.Table',
          'Elixir.Autoflow.Flow.Action.Uri',
          'Elixir.Autoflow.Flow.Application','Elixir.Autoflow.Flow.Cache',
          'Elixir.Autoflow.Flow.Condition.Array',
          'Elixir.Autoflow.Flow.Condition.Data',
          'Elixir.Autoflow.Flow.Condition.Number',
          'Elixir.Autoflow.Flow.Condition.Object',
          'Elixir.Autoflow.Flow.Condition.String',
          'Elixir.Autoflow.Flow.Condition.Type',
          'Elixir.Autoflow.Flow.Exception','Elixir.Autoflow.Flow.Http',
          'Elixir.Autoflow.Flow.Migration','Elixir.Autoflow.Flow.Reference',
          'Elixir.Autoflow.Flow.Schema.Http.Operation',
          'Elixir.Autoflow.Flow.Utils']},
     {path,["$ROOT/lib/tds-2.1.3/ebin"]},
     {primLoad,
         ['Elixir.DBConnection.Query.Tds.Query','Elixir.Ntlm',
          'Elixir.String.Chars.Tds.Query','Elixir.Tds',
          'Elixir.Tds.BinaryUtils','Elixir.Tds.ConfigError',
          'Elixir.Tds.Error','Elixir.Tds.Latin1','Elixir.Tds.Messages',
          'Elixir.Tds.Parameter','Elixir.Tds.Perf','Elixir.Tds.Protocol',
          'Elixir.Tds.Protocol.Collation','Elixir.Tds.Protocol.Grammar',
          'Elixir.Tds.Protocol.Header','Elixir.Tds.Protocol.Prelogin',
          'Elixir.Tds.Protocol.Token','Elixir.Tds.Query','Elixir.Tds.Result',
          'Elixir.Tds.Tls','Elixir.Tds.TokenDescriptors.Basic',
          'Elixir.Tds.Tokens','Elixir.Tds.Types','Elixir.Tds.Types.UUID',
          'Elixir.Tds.Utils','Elixir.Tds.Version']},
     {path,["$ROOT/lib/postgrex-0.15.9/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Postgrex.Stream',
          'Elixir.DBConnection.Query.Postgrex.Copy',
          'Elixir.DBConnection.Query.Postgrex.Parameters',
          'Elixir.DBConnection.Query.Postgrex.Query',
          'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
          'Elixir.Postgrex.App','Elixir.Postgrex.BinaryExtension',
          'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
          'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
          'Elixir.Postgrex.Cursor','Elixir.Postgrex.DefaultTypes',
          'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
          'Elixir.Postgrex.Extension','Elixir.Postgrex.Extensions.Array',
          'Elixir.Postgrex.Extensions.BitString',
          'Elixir.Postgrex.Extensions.Bool','Elixir.Postgrex.Extensions.Box',
          'Elixir.Postgrex.Extensions.Circle',
          'Elixir.Postgrex.Extensions.Date',
          'Elixir.Postgrex.Extensions.Float4',
          'Elixir.Postgrex.Extensions.Float8',
          'Elixir.Postgrex.Extensions.HStore',
          'Elixir.Postgrex.Extensions.INET','Elixir.Postgrex.Extensions.Int2',
          'Elixir.Postgrex.Extensions.Int4','Elixir.Postgrex.Extensions.Int8',
          'Elixir.Postgrex.Extensions.Interval',
          'Elixir.Postgrex.Extensions.JSON',
          'Elixir.Postgrex.Extensions.JSONB',
          'Elixir.Postgrex.Extensions.Line',
          'Elixir.Postgrex.Extensions.LineSegment',
          'Elixir.Postgrex.Extensions.MACADDR',
          'Elixir.Postgrex.Extensions.Name',
          'Elixir.Postgrex.Extensions.Numeric',
          'Elixir.Postgrex.Extensions.OID','Elixir.Postgrex.Extensions.Path',
          'Elixir.Postgrex.Extensions.Point',
          'Elixir.Postgrex.Extensions.Polygon',
          'Elixir.Postgrex.Extensions.Range','Elixir.Postgrex.Extensions.Raw',
          'Elixir.Postgrex.Extensions.Record',
          'Elixir.Postgrex.Extensions.TID',
          'Elixir.Postgrex.Extensions.TSVector',
          'Elixir.Postgrex.Extensions.Time',
          'Elixir.Postgrex.Extensions.TimeTZ',
          'Elixir.Postgrex.Extensions.Timestamp',
          'Elixir.Postgrex.Extensions.TimestampTZ',
          'Elixir.Postgrex.Extensions.UUID',
          'Elixir.Postgrex.Extensions.VoidBinary',
          'Elixir.Postgrex.Extensions.VoidText','Elixir.Postgrex.INET',
          'Elixir.Postgrex.Interval','Elixir.Postgrex.Lexeme',
          'Elixir.Postgrex.Line','Elixir.Postgrex.LineSegment',
          'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
          'Elixir.Postgrex.Notifications','Elixir.Postgrex.Parameters',
          'Elixir.Postgrex.Path','Elixir.Postgrex.Point',
          'Elixir.Postgrex.Polygon','Elixir.Postgrex.Protocol',
          'Elixir.Postgrex.Query','Elixir.Postgrex.QueryError',
          'Elixir.Postgrex.Range','Elixir.Postgrex.Result',
          'Elixir.Postgrex.SCRAM','Elixir.Postgrex.Stream',
          'Elixir.Postgrex.SuperExtension','Elixir.Postgrex.TypeInfo',
          'Elixir.Postgrex.TypeModule','Elixir.Postgrex.TypeServer',
          'Elixir.Postgrex.TypeSupervisor','Elixir.Postgrex.Types',
          'Elixir.Postgrex.Utils','Elixir.String.Chars.Postgrex.Copy',
          'Elixir.String.Chars.Postgrex.Query']},
     {path,["$ROOT/lib/myxql-0.5.1/ebin"]},
     {primLoad,
         ['Elixir.DBConnection.Query.MyXQL.Query',
          'Elixir.DBConnection.Query.MyXQL.TextQuery','Elixir.MyXQL',
          'Elixir.MyXQL.Client','Elixir.MyXQL.Client.Config',
          'Elixir.MyXQL.Connection','Elixir.MyXQL.Cursor',
          'Elixir.MyXQL.Error','Elixir.MyXQL.Protocol',
          'Elixir.MyXQL.Protocol.Auth','Elixir.MyXQL.Protocol.Flags',
          'Elixir.MyXQL.Protocol.Records',
          'Elixir.MyXQL.Protocol.ServerErrorCodes',
          'Elixir.MyXQL.Protocol.Types','Elixir.MyXQL.Protocol.Values',
          'Elixir.MyXQL.Query','Elixir.MyXQL.Result','Elixir.MyXQL.TextQuery',
          'Elixir.String.Chars.MyXQL.Query',
          'Elixir.String.Chars.MyXQL.TextQuery']},
     {path,["$ROOT/lib/service-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.Service.AMQP.Process',
          'Elixir.Autoflow.Service.Application',
          'Elixir.Autoflow.Service.Connection',
          'Elixir.Autoflow.Service.Database',
          'Elixir.Autoflow.Service.Http.Router',
          'Elixir.Autoflow.Service.Http.Server',
          'Elixir.Autoflow.Service.Kafka.Handler',
          'Elixir.Autoflow.Service.Kafka.Process',
          'Elixir.Autoflow.Service.MQTT.Handler',
          'Elixir.Autoflow.Service.MQTT.Process',
          'Elixir.Autoflow.Service.MSSQL.Process',
          'Elixir.Autoflow.Service.MariaDB.Process',
          'Elixir.Autoflow.Service.Oracle.Process',
          'Elixir.Autoflow.Service.Postgres.Process',
          'Elixir.Autoflow.Service.Process',
          'Elixir.Autoflow.Service.Redis.Process',
          'Elixir.Autoflow.Service.Registry','Elixir.Autoflow.Service.Server',
          'Elixir.Autoflow.Service.Status',
          'Elixir.Autoflow.Service.TCP.Client',
          'Elixir.Autoflow.Service.TCP.Client.Connection',
          'Elixir.Autoflow.Service.TCP.Server',
          'Elixir.Autoflow.Service.TCP.Server.Connection',
          'Elixir.Autoflow.Service.TCP.Server.Listener',
          'Elixir.Autoflow.Service.Timer.Process']},
     {path,["$ROOT/lib/gettext-0.17.4/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation','Elixir.Gettext.Merger',
          'Elixir.Gettext.MissingBindingsError','Elixir.Gettext.PO',
          'Elixir.Gettext.PO.Parser','Elixir.Gettext.PO.PluralTranslation',
          'Elixir.Gettext.PO.SyntaxError','Elixir.Gettext.PO.Tokenizer',
          'Elixir.Gettext.PO.Translation','Elixir.Gettext.PO.Translations',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract','Elixir.Mix.Tasks.Gettext.Merge',
          gettext_po_parser]},
     {path,["$ROOT/lib/telemetry_metrics-0.4.2/ebin"]},
     {primLoad,
         ['Elixir.Telemetry.Metrics',
          'Elixir.Telemetry.Metrics.ConsoleReporter',
          'Elixir.Telemetry.Metrics.Counter',
          'Elixir.Telemetry.Metrics.Distribution',
          'Elixir.Telemetry.Metrics.LastValue','Elixir.Telemetry.Metrics.Sum',
          'Elixir.Telemetry.Metrics.Summary']},
     {path,["$ROOT/lib/telemetry_poller-0.5.0/ebin"]},
     {primLoad,
         [telemetry_poller,telemetry_poller_app,telemetry_poller_builtin,
          telemetry_poller_sup]},
     {path,["$ROOT/lib/phoenix_html-2.14.3/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
          'Elixir.Phoenix.HTML.Form','Elixir.Phoenix.HTML.FormData',
          'Elixir.Phoenix.HTML.FormData.Atom',
          'Elixir.Phoenix.HTML.FormData.Plug.Conn',
          'Elixir.Phoenix.HTML.Format','Elixir.Phoenix.HTML.Link',
          'Elixir.Phoenix.HTML.Safe','Elixir.Phoenix.HTML.Safe.Atom',
          'Elixir.Phoenix.HTML.Safe.BitString',
          'Elixir.Phoenix.HTML.Safe.Date','Elixir.Phoenix.HTML.Safe.DateTime',
          'Elixir.Phoenix.HTML.Safe.Float','Elixir.Phoenix.HTML.Safe.Integer',
          'Elixir.Phoenix.HTML.Safe.List',
          'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
          'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
          'Elixir.Phoenix.HTML.Safe.Time','Elixir.Phoenix.HTML.Safe.Tuple',
          'Elixir.Phoenix.HTML.Tag']},
     {path,["$ROOT/lib/phoenix_live_view-0.13.3/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Phoenix.LiveView.Socket',
          'Elixir.Inspect.Phoenix.LiveViewTest.Element',
          'Elixir.Inspect.Phoenix.LiveViewTest.View',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveComponent','Elixir.Phoenix.LiveView',
          'Elixir.Phoenix.LiveView.Application',
          'Elixir.Phoenix.LiveView.Channel',
          'Elixir.Phoenix.LiveView.Component',
          'Elixir.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.LiveView.Controller','Elixir.Phoenix.LiveView.Diff',
          'Elixir.Phoenix.LiveView.Engine','Elixir.Phoenix.LiveView.Helpers',
          'Elixir.Phoenix.LiveView.Plug','Elixir.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveView.Renderer','Elixir.Phoenix.LiveView.Router',
          'Elixir.Phoenix.LiveView.Socket',
          'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Phoenix.LiveView.Static','Elixir.Phoenix.LiveView.Utils',
          'Elixir.Phoenix.LiveViewTest',
          'Elixir.Phoenix.LiveViewTest.ClientProxy',
          'Elixir.Phoenix.LiveViewTest.DOM',
          'Elixir.Phoenix.LiveViewTest.Element',
          'Elixir.Phoenix.LiveViewTest.View']},
     {path,["$ROOT/lib/phoenix_live_dashboard-0.2.6/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.LiveDashboard',
          'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
          'Elixir.Phoenix.LiveDashboard.Application',
          'Elixir.Phoenix.LiveDashboard.ApplicationsLive',
          'Elixir.Phoenix.LiveDashboard.CardUsageComponent',
          'Elixir.Phoenix.LiveDashboard.ChartComponent',
          'Elixir.Phoenix.LiveDashboard.ColorBarComponent',
          'Elixir.Phoenix.LiveDashboard.ColorBarLegendComponent',
          'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
          'Elixir.Phoenix.LiveDashboard.EtsLive',
          'Elixir.Phoenix.LiveDashboard.HomeLive',
          'Elixir.Phoenix.LiveDashboard.LayoutView',
          'Elixir.Phoenix.LiveDashboard.LiveHelpers',
          'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
          'Elixir.Phoenix.LiveDashboard.MenuLive',
          'Elixir.Phoenix.LiveDashboard.MetricsLive',
          'Elixir.Phoenix.LiveDashboard.ModalComponent',
          'Elixir.Phoenix.LiveDashboard.OSMonLive',
          'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
          'Elixir.Phoenix.LiveDashboard.PortsLive',
          'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
          'Elixir.Phoenix.LiveDashboard.ProcessesLive',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
          'Elixir.Phoenix.LiveDashboard.RequestLogger',
          'Elixir.Phoenix.LiveDashboard.RequestLoggerLive',
          'Elixir.Phoenix.LiveDashboard.Router',
          'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
          'Elixir.Phoenix.LiveDashboard.SocketsLive',
          'Elixir.Phoenix.LiveDashboard.SystemInfo',
          'Elixir.Phoenix.LiveDashboard.TableHelpers',
          'Elixir.Phoenix.LiveDashboard.TelemetryListener',
          'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
          'Elixir.Phoenix.LiveDashboard.Web']},
     {path,["$ROOT/lib/runtime_tools-1.13.2/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,scheduler,system_information,
          ttb_autostart]},
     {path,["$ROOT/lib/web-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Web','Elixir.Web.Application','Elixir.Web.Authentication',
          'Elixir.Web.Channels.Usage','Elixir.Web.Endpoint',
          'Elixir.Web.ErrorHelpers','Elixir.Web.ErrorView',
          'Elixir.Web.FunctionController','Elixir.Web.Gettext',
          'Elixir.Web.LayoutView','Elixir.Web.PageController',
          'Elixir.Web.PageView','Elixir.Web.Router',
          'Elixir.Web.Router.Helpers','Elixir.Web.Socket',
          'Elixir.Web.Telemetry']},
     {path,["$ROOT/lib/artificery-0.4.2/ebin"]},
     {primLoad,
         ['Elixir.Artificery','Elixir.Artificery.Command',
          'Elixir.Artificery.Console','Elixir.Artificery.Console.Color',
          'Elixir.Artificery.Console.Color.ANSI',
          'Elixir.Artificery.Console.Events',
          'Elixir.Artificery.Console.Prompt',
          'Elixir.Artificery.Console.Spinner',
          'Elixir.Artificery.Console.Table','Elixir.Artificery.Entry',
          'Elixir.Artificery.Option']},
     {path,["$ROOT/lib/distillery-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Distillery.Cookies','Elixir.Distillery.Releases.App',
          'Elixir.Distillery.Releases.Appup',
          'Elixir.Distillery.Releases.Appup.Transform',
          'Elixir.Distillery.Releases.Appup.TransformError',
          'Elixir.Distillery.Releases.Appup.Utils',
          'Elixir.Distillery.Releases.Archiver',
          'Elixir.Distillery.Releases.Archiver.Archive',
          'Elixir.Distillery.Releases.Assembler',
          'Elixir.Distillery.Releases.BootScript',
          'Elixir.Distillery.Releases.Checks',
          'Elixir.Distillery.Releases.Checks.Cookie',
          'Elixir.Distillery.Releases.Checks.Erts',
          'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
          'Elixir.Distillery.Releases.Config',
          'Elixir.Distillery.Releases.Config.LoadError',
          'Elixir.Distillery.Releases.Config.Provider',
          'Elixir.Distillery.Releases.Config.Providers.Elixir',
          'Elixir.Distillery.Releases.Environment',
          'Elixir.Distillery.Releases.Errors',
          'Elixir.Distillery.Releases.Overlays',
          'Elixir.Distillery.Releases.Plugin',
          'Elixir.Distillery.Releases.Profile',
          'Elixir.Distillery.Releases.Release',
          'Elixir.Distillery.Releases.Runtime.Control',
          'Elixir.Distillery.Releases.Runtime.Pidfile',
          'Elixir.Distillery.Releases.Shell',
          'Elixir.Distillery.Releases.Shell.Macros',
          'Elixir.Distillery.Releases.Utils',
          'Elixir.Mix.Tasks.Distillery.Gen.Appup',
          'Elixir.Mix.Tasks.Distillery.Init',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
          'Elixir.Mix.Tasks.Distillery.Release',
          'Elixir.Mix.Tasks.Distillery.Release.Clean']},
     {path,["$ROOT/lib/core-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Autoflow.Core.AddOns','Elixir.Autoflow.Core.Downloads',
          'Elixir.Autoflow.Core.Procedure.Process',
          'Elixir.Autoflow.Core.Process.OauthProxy',
          'Elixir.Autoflow.Core.Process.Radius',
          'Elixir.Autoflow.Core.Schema.Http.Api',
          'Elixir.Autoflow.Core.Schema.Http.Swagger',
          'Elixir.Autoflow.Core.Schema.Http.Swagger.V2',
          'Elixir.Autoflow.Core.Schema.Http.Swagger.V3','Elixir.Core']},
     {path,["$ROOT/lib/mix-1.9.4/ebin"]},
     {primLoad,
         ['Elixir.Mix','Elixir.Mix.CLI','Elixir.Mix.Compilers.Elixir',
          'Elixir.Mix.Compilers.Erlang','Elixir.Mix.Compilers.Test',
          'Elixir.Mix.Config','Elixir.Mix.Dep','Elixir.Mix.Dep.Converger',
          'Elixir.Mix.Dep.ElixirSCM','Elixir.Mix.Dep.Fetcher',
          'Elixir.Mix.Dep.Loader','Elixir.Mix.Dep.Lock',
          'Elixir.Mix.Dep.Umbrella','Elixir.Mix.ElixirVersionError',
          'Elixir.Mix.Error','Elixir.Mix.Generator','Elixir.Mix.Hex',
          'Elixir.Mix.InvalidTaskError','Elixir.Mix.Local',
          'Elixir.Mix.Local.Installer','Elixir.Mix.NoProjectError',
          'Elixir.Mix.NoTaskError','Elixir.Mix.Project',
          'Elixir.Mix.ProjectStack','Elixir.Mix.PublicKey','Elixir.Mix.Rebar',
          'Elixir.Mix.Release','Elixir.Mix.RemoteConverger','Elixir.Mix.SCM',
          'Elixir.Mix.SCM.Git','Elixir.Mix.SCM.Path','Elixir.Mix.Shell',
          'Elixir.Mix.Shell.IO','Elixir.Mix.Shell.Process',
          'Elixir.Mix.Shell.Quiet','Elixir.Mix.State','Elixir.Mix.Task',
          'Elixir.Mix.Task.Compiler','Elixir.Mix.Task.Compiler.Diagnostic',
          'Elixir.Mix.Tasks.App.Start','Elixir.Mix.Tasks.App.Tree',
          'Elixir.Mix.Tasks.Archive','Elixir.Mix.Tasks.Archive.Build',
          'Elixir.Mix.Tasks.Archive.Check','Elixir.Mix.Tasks.Archive.Install',
          'Elixir.Mix.Tasks.Archive.Uninstall','Elixir.Mix.Tasks.Clean',
          'Elixir.Mix.Tasks.Cmd','Elixir.Mix.Tasks.Compile',
          'Elixir.Mix.Tasks.Compile.All','Elixir.Mix.Tasks.Compile.App',
          'Elixir.Mix.Tasks.Compile.Elixir','Elixir.Mix.Tasks.Compile.Erlang',
          'Elixir.Mix.Tasks.Compile.Leex',
          'Elixir.Mix.Tasks.Compile.Protocols',
          'Elixir.Mix.Tasks.Compile.Xref','Elixir.Mix.Tasks.Compile.Yecc',
          'Elixir.Mix.Tasks.Deps','Elixir.Mix.Tasks.Deps.Clean',
          'Elixir.Mix.Tasks.Deps.Compile','Elixir.Mix.Tasks.Deps.Get',
          'Elixir.Mix.Tasks.Deps.Loadpaths',
          'Elixir.Mix.Tasks.Deps.Precompile','Elixir.Mix.Tasks.Deps.Tree',
          'Elixir.Mix.Tasks.Deps.Unlock','Elixir.Mix.Tasks.Deps.Update',
          'Elixir.Mix.Tasks.Do','Elixir.Mix.Tasks.Escript',
          'Elixir.Mix.Tasks.Escript.Build','Elixir.Mix.Tasks.Escript.Install',
          'Elixir.Mix.Tasks.Escript.Uninstall','Elixir.Mix.Tasks.Format',
          'Elixir.Mix.Tasks.Help','Elixir.Mix.Tasks.Iex',
          'Elixir.Mix.Tasks.Loadconfig','Elixir.Mix.Tasks.Loadpaths',
          'Elixir.Mix.Tasks.Local','Elixir.Mix.Tasks.Local.Hex',
          'Elixir.Mix.Tasks.Local.PublicKeys','Elixir.Mix.Tasks.Local.Rebar',
          'Elixir.Mix.Tasks.New','Elixir.Mix.Tasks.Profile.Cprof',
          'Elixir.Mix.Tasks.Profile.Eprof','Elixir.Mix.Tasks.Profile.Fprof',
          'Elixir.Mix.Tasks.Release','Elixir.Mix.Tasks.Release.Init',
          'Elixir.Mix.Tasks.Run','Elixir.Mix.Tasks.Test',
          'Elixir.Mix.Tasks.Test.Cover','Elixir.Mix.Tasks.WillRecompile',
          'Elixir.Mix.Tasks.Xref','Elixir.Mix.TasksServer',
          'Elixir.Mix.Utils']},
     {path,["$ROOT/lib/iex-1.9.4/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Server','Elixir.IEx.State']},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-6.3.1.3/ebin","$ROOT/lib/stdlib-3.8.2.4/ebin",
          "$ROOT/lib/compiler-7.3.2/ebin","$ROOT/lib/elixir-1.9.4/ebin",
          "$ROOT/lib/logger-1.9.4/ebin","$ROOT/lib/jason-1.2.2/ebin",
          "$ROOT/lib/ink-1.2.0/ebin","$ROOT/lib/asn1-5.0.8/ebin",
          "$ROOT/lib/crypto-4.4.2.2/ebin","$ROOT/lib/public_key-1.6.6.1/ebin",
          "$ROOT/lib/ssl-9.2.3.6/ebin","$ROOT/lib/inets-7.0.7.2/ebin",
          "$ROOT/lib/libcluster-3.2.2/ebin","$ROOT/lib/conv_case-0.2.2/ebin",
          "$ROOT/lib/xema-0.14.0/ebin","$ROOT/lib/json_xema-0.6.0/ebin",
          "$ROOT/lib/unicode_util_compat-0.7.0/ebin",
          "$ROOT/lib/idna-6.1.1/ebin","$ROOT/lib/mimerl-1.2.0/ebin",
          "$ROOT/lib/certifi-2.8.0/ebin",
          "$ROOT/lib/syntax_tools-2.1.7.1/ebin",
          "$ROOT/lib/parse_trans-3.3.1/ebin",
          "$ROOT/lib/ssl_verify_fun-1.1.6/ebin",
          "$ROOT/lib/metrics-1.0.1/ebin","$ROOT/lib/hackney-1.18.0/ebin",
          "$ROOT/lib/httpoison-1.6.2/ebin","$ROOT/lib/telemetry-0.4.3/ebin",
          "$ROOT/lib/cowlib-2.8.0/ebin","$ROOT/lib/ranch-1.7.1/ebin",
          "$ROOT/lib/cowboy-2.7.0/ebin","$ROOT/lib/eex-1.9.4/ebin",
          "$ROOT/lib/mime-1.3.1/ebin","$ROOT/lib/plug_crypto-1.1.2/ebin",
          "$ROOT/lib/plug-1.10.0/ebin","$ROOT/lib/plug_cowboy-2.2.1/ebin",
          "$ROOT/lib/mnesia-4.15.6/ebin","$ROOT/lib/common-0.1.0/ebin",
          "$ROOT/lib/gen_state_machine-2.1.0/ebin",
          "$ROOT/lib/decimal-1.9.0/ebin","$ROOT/lib/ecto-3.6.1/ebin",
          "$ROOT/lib/connection-1.0.4/ebin",
          "$ROOT/lib/db_connection-2.4.1/ebin",
          "$ROOT/lib/ecto_sql-3.6.1/ebin","$ROOT/lib/uuid-1.1.8/ebin",
          "$ROOT/lib/store-0.1.0/ebin","$ROOT/lib/store_mnesia-0.1.0/ebin",
          "$ROOT/lib/logger_file_backend-0.0.11/ebin",
          "$ROOT/lib/goldrush-0.1.9/ebin","$ROOT/lib/lager-3.8.0/ebin",
          "$ROOT/lib/xmerl-1.3.20.1/ebin","$ROOT/lib/sasl-3.3/ebin",
          "$ROOT/lib/tools-3.1.0.1/ebin","$ROOT/lib/jsx-2.11.0/ebin",
          "$ROOT/lib/recon-2.5.1/ebin",
          "$ROOT/lib/credentials_obfuscation-2.2.0/ebin",
          "$ROOT/lib/rabbit_common-3.8.9/ebin",
          "$ROOT/lib/amqp_client-3.8.9/ebin","$ROOT/lib/amqp-1.6.0/ebin",
          "$ROOT/lib/rustler-0.22.0/ebin","$ROOT/lib/tds_encoding-1.0.0/ebin",
          "$ROOT/lib/redix-1.0.0/ebin","$ROOT/lib/mutex-1.1.3/ebin",
          "$ROOT/lib/yamerl-0.7.0/ebin","$ROOT/lib/varint-1.2.0/ebin",
          "$ROOT/lib/crc32cer-0.1.10/ebin","$ROOT/lib/kayrock-0.1.12/ebin",
          "$ROOT/lib/kafka_ex-0.11.0/ebin","$ROOT/lib/poolboy-1.5.2/ebin",
          "$ROOT/lib/gen_smtp-0.15.0/ebin",
          "$ROOT/lib/elixir_radius-1.0.0/ebin","$ROOT/lib/aws-0.7.0/ebin",
          "$ROOT/lib/ex_aws-2.1.3/ebin","$ROOT/lib/mbcs_rs-0.1.2/ebin",
          "$ROOT/lib/tortoise-0.9.6/ebin","$ROOT/lib/jamdb_oracle-0.4.5/ebin",
          "$ROOT/lib/castore-0.1.8/ebin","$ROOT/lib/license-0.1.0/ebin",
          "$ROOT/lib/parallel_stream-1.0.6/ebin","$ROOT/lib/csv-2.4.1/ebin",
          "$ROOT/lib/phoenix_pubsub-2.0.0/ebin",
          "$ROOT/lib/phoenix-1.5.8/ebin","$ROOT/lib/flow-0.1.0/ebin",
          "$ROOT/lib/tds-2.1.3/ebin","$ROOT/lib/postgrex-0.15.9/ebin",
          "$ROOT/lib/myxql-0.5.1/ebin","$ROOT/lib/service-0.1.0/ebin",
          "$ROOT/lib/gettext-0.17.4/ebin",
          "$ROOT/lib/telemetry_metrics-0.4.2/ebin",
          "$ROOT/lib/telemetry_poller-0.5.0/ebin",
          "$ROOT/lib/phoenix_html-2.14.3/ebin",
          "$ROOT/lib/phoenix_live_view-0.13.3/ebin",
          "$ROOT/lib/phoenix_live_dashboard-0.2.6/ebin",
          "$ROOT/lib/runtime_tools-1.13.2/ebin","$ROOT/lib/web-0.1.0/ebin",
          "$ROOT/lib/artificery-0.4.2/ebin","$ROOT/lib/distillery-2.1.1/ebin",
          "$ROOT/lib/core-0.1.0/ebin","$ROOT/lib/mix-1.9.4/ebin",
          "$ROOT/lib/iex-1.9.4/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"6.3.1.3"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        erl_signal_handler,error_handler,error_logger,file,
                        file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,
                        hipe_unified_loader,inet6_tcp,inet6_tcp_dist,
                        inet6_udp,inet6_sctp,inet_config,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_udp,gen_sctp,inet,inet_db,inet_dns,
                        inet_parse,inet_res,inet_tcp,inet_udp,inet_sctp,pg2,
                        raw_file_io,raw_file_io_compressed,
                        raw_file_io_deflate,raw_file_io_delayed,
                        raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,
                        seq_trace,standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},{logger_sasl_compatible,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {kernelProcess,'Elixir.Distillery.Releases.Runtime.Pidfile',
         {'Elixir.Distillery.Releases.Runtime.Pidfile',start,[]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.8.2.4"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_internal,
                        erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_tar,error_logger_file_h,error_logger_tty_h,
                        escript,ets,file_sorter,filelib,filename,gb_trees,
                        gb_sets,gen,gen_event,gen_fsm,gen_server,gen_statem,
                        io,io_lib,io_lib_format,io_lib_fread,io_lib_pretty,
                        lists,log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.3.2"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bs,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_reorder,
                        beam_record,beam_split,beam_trim,beam_type,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_sets,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_alias,sys_core_bsm,sys_core_dsetel,
                        sys_core_fold,sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,v3_codegen,v3_core,v3_kernel,
                        v3_kernel_pp]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.9.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Identifier',
                        'Elixir.Code.LoadError','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.Kernel',
                        'Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker','Elixir.Module',
                        'Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.Path.Wildcard',
                        'Elixir.Path','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol.UndefinedError','Elixir.Protocol',
                        'Elixir.Range','Elixir.Record.Extractor',
                        'Elixir.Record','Elixir.Regex.CompileError',
                        'Elixir.Regex','Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Casing',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System','Elixir.SystemLimitError',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[compiler,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{check_endianness,true},
                        {ansi_enabled,false},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.9.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErlangHandler',
                        'Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Supervisor','Elixir.Logger.Watcher']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_periodic_check,30000},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_level,debug},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.2.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Decimal',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ink,
                  [{description,
                       "A backend for the Elixir Logger that logs JSON and can filter sensitive data.\n"},
                   {vsn,"1.2.0"},
                   {id,[]},
                   {modules,['Elixir.Ink','Elixir.Ink.Encoder']},
                   {registered,[]},
                   {applications,[elixir,logger,jason,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.8"},
                   {vsn,"5.0.8"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"4.4.2.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.6.6.1"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[asn1,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"9.2.3.6"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_handshake,tls_record,tls_socket,
                        tls_v1,ssl_v3,tls_connection_sup,tls_sender,
                        dtls_connection,dtls_handshake,dtls_record,
                        dtls_socket,dtls_v1,dtls_connection_sup,
                        dtls_packet_demux,dtls_listener_sup,ssl,
                        ssl_session_cache_api,ssl_config,ssl_connection,
                        ssl_handshake,ssl_record,ssl_cipher,ssl_cipher_format,
                        ssl_srp_primes,ssl_alert,ssl_listen_tracker_sup,
                        inet_tls_dist,inet6_tls_dist,ssl_dist_sup,
                        ssl_dist_connection_sup,ssl_dist_admin_sup,
                        ssl_session,ssl_session_cache,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_app,ssl_sup,ssl_admin_sup,ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[public_key,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"7.0.7.2"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,inets_ftp_wrapper,httpc,httpc_handler,
                        httpc_handler_sup,httpc_manager,httpc_profile_sup,
                        httpc_request,httpc_response,httpc_sup,httpc_cookie,
                        http_uri,http_chunk,http_request,http_response,
                        http_transport,http_util,httpd,httpd_acceptor,
                        httpd_acceptor_sup,httpd_cgi,httpd_connection_sup,
                        httpd_conf,httpd_custom,httpd_custom_api,httpd_esi,
                        httpd_example,httpd_file,httpd_instance_sup,httpd_log,
                        httpd_logger,httpd_manager,httpd_misc_sup,
                        httpd_request,httpd_request_handler,httpd_response,
                        httpd_script_env,httpd_socket,httpd_sup,httpd_util,
                        mod_actions,mod_alias,mod_auth,mod_auth_dets,
                        mod_auth_mnesia,mod_auth_plain,mod_auth_server,
                        mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,
                        mod_get,mod_head,mod_htaccess,mod_log,mod_range,
                        mod_responsecontrol,mod_security,mod_security_server,
                        mod_trace,inets_tftp_wrapper]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,libcluster,
                  [{description,
                       "Automatic Erlang cluster formation and management for Elixir/Erlang applications"},
                   {vsn,"3.2.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Cluster.Logger','Elixir.Cluster.Strategy',
                        'Elixir.Cluster.Strategy.DNSPoll',
                        'Elixir.Cluster.Strategy.Epmd',
                        'Elixir.Cluster.Strategy.ErlangHosts',
                        'Elixir.Cluster.Strategy.Gossip',
                        'Elixir.Cluster.Strategy.Kubernetes',
                        'Elixir.Cluster.Strategy.Kubernetes.DNS',
                        'Elixir.Cluster.Strategy.Kubernetes.DNSSRV',
                        'Elixir.Cluster.Strategy.Rancher',
                        'Elixir.Cluster.Strategy.State',
                        'Elixir.Cluster.Supervisor']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,ssl,jason,crypto,stdlib,inets,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,conv_case,
                  [{description,
                       "A library to convert strings, atoms and map keys between `camelCase`,\n`snake_case` and `kebab-case`.\n"},
                   {vsn,"0.2.2"},
                   {id,[]},
                   {modules,['Elixir.ConvCase']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,xema,
                  [{description,"A schema validator inspired by JSON Schema."},
                   {vsn,"0.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Xema.Ref',
                        'Elixir.Inspect.Xema.Schema','Elixir.Xema',
                        'Elixir.Xema.Behaviour','Elixir.Xema.Builder',
                        'Elixir.Xema.CastError','Elixir.Xema.Castable',
                        'Elixir.Xema.Castable.Atom',
                        'Elixir.Xema.Castable.BitString',
                        'Elixir.Xema.Castable.Date',
                        'Elixir.Xema.Castable.DateTime',
                        'Elixir.Xema.Castable.Decimal',
                        'Elixir.Xema.Castable.Float',
                        'Elixir.Xema.Castable.Helper',
                        'Elixir.Xema.Castable.Integer',
                        'Elixir.Xema.Castable.List',
                        'Elixir.Xema.Castable.Map',
                        'Elixir.Xema.Castable.NaiveDateTime',
                        'Elixir.Xema.Castable.Time',
                        'Elixir.Xema.Castable.Tuple','Elixir.Xema.Caster',
                        'Elixir.Xema.Format','Elixir.Xema.JsonSchema',
                        'Elixir.Xema.JsonSchema.Validator',
                        'Elixir.Xema.Loader','Elixir.Xema.NoLoader',
                        'Elixir.Xema.Ref','Elixir.Xema.Schema',
                        'Elixir.Xema.SchemaError',
                        'Elixir.Xema.SchemaValidator','Elixir.Xema.Utils',
                        'Elixir.Xema.ValidationError',
                        'Elixir.Xema.Validator']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,conv_case,kernel]},
                   {included_applications,[]},
                   {env,[{loader,'Elixir.Xema.NoLoader'}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,json_xema,
                  [{description,
                       "A JSON Schema validator for draft-04, -06, and -07."},
                   {vsn,"0.6.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.JsonXema','Elixir.JsonXema.SchemaError',
                        'Elixir.JsonXema.SchemaValidator',
                        'Elixir.JsonXema.ValidationError']},
                   {registered,[]},
                   {applications,[elixir,logger,xema,stdlib,conv_case,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,unicode_util_compat,
                  [{description,
                       "unicode_util compatibility library for Erlang < 20"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,[string_compat,unicode_util_compat]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"6.1.1"},
                   {id,[]},
                   {modules,
                       [idna,idna_bidi,idna_context,idna_data,idna_mapping,
                        idna_table,idna_ucs,punycode]},
                   {registered,[]},
                   {applications,[unicode_util_compat,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"Library to handle mimetypes"},
                   {vsn,"1.2.0"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,
                       "CA bundle adapted from Mozilla by https://certifi.io"},
                   {vsn,"2.8.0"},
                   {id,[]},
                   {modules,[certifi,certifi_pt]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"2.1.7.1"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        merl,merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,parse_trans,
                  [{description,"Parse transform library"},
                   {vsn,"3.3.1"},
                   {id,[]},
                   {modules,
                       [ct_expand,exprecs,parse_trans,parse_trans_codegen,
                        parse_trans_mod,parse_trans_pp]},
                   {registered,[]},
                   {applications,[stdlib,syntax_tools,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,"SSL verification functions for Erlang\n"},
                   {vsn,"1.1.6"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
                        ssl_verify_fun_encodings,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_string,ssl_verify_util]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.18.0"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_connection,hackney_connections,hackney_cookie,
                        hackney_date,hackney_headers,hackney_headers_new,
                        hackney_http,hackney_http_connect,hackney_local_tcp,
                        hackney_manager,hackney_metrics,hackney_multipart,
                        hackney_pool,hackney_pool_handler,hackney_request,
                        hackney_response,hackney_socks5,hackney_ssl,
                        hackney_ssl_certificate,hackney_stream,hackney_sup,
                        hackney_tcp,hackney_trace,hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [ssl,public_key,asn1,idna,unicode_util_compat,mimerl,
                        certifi,parse_trans,ssl_verify_fun,metrics,crypto,
                        stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,httpoison,
                  [{description,
                       "  Yet Another HTTP client for Elixir powered by hackney\n"},
                   {vsn,"1.6.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.HTTPoison','Elixir.HTTPoison.AsyncChunk',
                        'Elixir.HTTPoison.AsyncEnd',
                        'Elixir.HTTPoison.AsyncHeaders',
                        'Elixir.HTTPoison.AsyncRedirect',
                        'Elixir.HTTPoison.AsyncResponse',
                        'Elixir.HTTPoison.AsyncStatus',
                        'Elixir.HTTPoison.Base','Elixir.HTTPoison.Error',
                        'Elixir.HTTPoison.Handlers.Multipart',
                        'Elixir.HTTPoison.Request',
                        'Elixir.HTTPoison.Response']},
                   {registered,[]},
                   {applications,[elixir,hackney,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"0.4.3"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.8.0"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,cow_http_te,
                        cow_iolists,cow_mimetypes,cow_multipart,cow_qs,
                        cow_spdy,cow_sse,cow_uri,cow_ws]},
                   {registered,[]},
                   {applications,[crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.7.1"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[ssl,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.7.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_handler,cowboy_http,
                        cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[crypto,stdlib,cowlib,ranch,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.9.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError','Elixir.EEx.Tokenizer']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"1.3.1"},
                   {id,[]},
                   {modules,['Elixir.MIME','Elixir.MIME.Application']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{types,#{}}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.MIME.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug_crypto,
                  [{description,"Crypto-related functionality for the web"},
                   {vsn,"1.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier']},
                   {registered,[]},
                   {applications,[elixir,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Crypto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,
                       "A specification and conveniences for composable modules between web applications"},
                   {vsn,"1.10.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Plug.Conn',
                        'Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy2',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.MalformedURIError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Supervisor','Elixir.Plug.Telemetry',
                        'Elixir.Plug.Test','Elixir.Plug.TimeoutError',
                        'Elixir.Plug.Upload','Elixir.Plug.UploadError',
                        plug_multipart]},
                   {registered,[]},
                   {applications,
                       [elixir,logger,stdlib,eex,mime,kernel,plug_crypto]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug',[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug_cowboy,
                  [{description,"A Plug adapter for Cowboy"},
                   {vsn,"2.2.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
                        'Elixir.Plug.Cowboy.Drainer',
                        'Elixir.Plug.Cowboy.Handler',
                        'Elixir.Plug.Cowboy.Stream',
                        'Elixir.Plug.Cowboy.Translator']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,stdlib,telemetry,cowboy,plug,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Cowboy',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mnesia,
                  [{description,"MNESIA  CXC 138 12"},
                   {vsn,"4.15.6"},
                   {id,[]},
                   {modules,
                       [mnesia,mnesia_app,mnesia_backend_type,mnesia_backup,
                        mnesia_bup,mnesia_checkpoint,mnesia_checkpoint_sup,
                        mnesia_controller,mnesia_dumper,mnesia_event,
                        mnesia_ext_sup,mnesia_frag,mnesia_frag_hash,
                        mnesia_index,mnesia_kernel_sup,mnesia_late_loader,
                        mnesia_lib,mnesia_loader,mnesia_locker,mnesia_log,
                        mnesia_monitor,mnesia_recover,mnesia_registry,
                        mnesia_schema,mnesia_snmp_hook,mnesia_subscr,
                        mnesia_sup,mnesia_sp,mnesia_text,mnesia_tm]},
                   {registered,
                       [mnesia_dumper_load_regulator,mnesia_event,
                        mnesia_fallback,mnesia_controller,mnesia_kernel_sup,
                        mnesia_late_loader,mnesia_locker,mnesia_monitor,
                        mnesia_recover,mnesia_substr,mnesia_sup,mnesia_tm]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mnesia_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,common,
                  [{description,"common"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.Common.ABNF',
                        'Elixir.Autoflow.Common.ABNF.Core',
                        'Elixir.Autoflow.Common.ABNF.Decoder',
                        'Elixir.Autoflow.Common.ABNF.Encoder',
                        'Elixir.Autoflow.Common.ABNF.Grammar',
                        'Elixir.Autoflow.Common.ABNF.Util',
                        'Elixir.Autoflow.Common.Application',
                        'Elixir.Autoflow.Common.Binary',
                        'Elixir.Autoflow.Common.Connection',
                        'Elixir.Autoflow.Common.Data',
                        'Elixir.Autoflow.Common.Dispatch',
                        'Elixir.Autoflow.Common.Dispatch.Service',
                        'Elixir.Autoflow.Common.Dispatch.Service.Process',
                        'Elixir.Autoflow.Common.Dispatch.Service.Status',
                        'Elixir.Autoflow.Common.Dispatch.Service.Timer.Process',
                        'Elixir.Autoflow.Common.Dispatch.Web',
                        'Elixir.Autoflow.Common.Environment',
                        'Elixir.Autoflow.Common.Execution',
                        'Elixir.Autoflow.Common.File',
                        'Elixir.Autoflow.Common.Iex.Test',
                        'Elixir.Autoflow.Common.JsonSchemaForm',
                        'Elixir.Autoflow.Common.JsonSchemaForm.Error',
                        'Elixir.Autoflow.Common.JsonSchemaForm.State',
                        'Elixir.Autoflow.Common.LogReader',
                        'Elixir.Autoflow.Common.LogReader.State',
                        'Elixir.Autoflow.Common.LoggerNotificationBackend',
                        'Elixir.Autoflow.Common.Logs',
                        'Elixir.Autoflow.Common.Macros.Deployment',
                        'Elixir.Autoflow.Common.Object',
                        'Elixir.Autoflow.Common.Orm.Json',
                        'Elixir.Autoflow.Common.Orm.Native',
                        'Elixir.Autoflow.Common.Process.Cluster',
                        'Elixir.Autoflow.Common.Process.Registry',
                        'Elixir.Autoflow.Common.Process.TimeServer',
                        'Elixir.Autoflow.Common.Product',
                        'Elixir.Autoflow.Common.Rpc',
                        'Elixir.Autoflow.Common.Schema.Http.Loader',
                        'Elixir.Autoflow.Common.State.Cluster',
                        'Elixir.Autoflow.Common.State.Ratelimit',
                        'Elixir.Autoflow.Common.State.Table',
                        'Elixir.Autoflow.Common.SystemEnvironment',
                        'Elixir.Autoflow.Common.TLS',
                        'Elixir.Autoflow.Common.XML',
                        'Elixir.Autoflow.Utils.KeyValueStore',
                        'Elixir.Debugger','Elixir.Utils',
                        'Elixir.Yaml.Decoder',
                        'Elixir.Yaml.Decoder.FileNotFoundError',
                        'Elixir.Yaml.Decoder.Mapper',
                        'Elixir.Yaml.Decoder.Node.KeywordList',
                        'Elixir.Yaml.Decoder.ParsingError',
                        'Elixir.Yaml.Decoder.Records',
                        'Elixir.Yaml.Decoder.Sigil','Elixir.Yaml.Encoder']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,ink,libcluster,json_xema,jason,
                        httpoison,stdlib,plug_cowboy,kernel]},
                   {included_applications,[mnesia]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Autoflow.Common.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,gen_state_machine,
                  [{description,"An Elixir wrapper for gen_statem."},
                   {vsn,"2.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.GenStateMachine',
                        'Elixir.GenStateMachine.Application',
                        'Elixir.GenStateMachine.Translator']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.GenStateMachine.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,"Arbitrary precision decimal arithmetic."},
                   {vsn,"1.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Decimal.Macros',
                        'Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "A toolkit for data mapping and language integrated query for Elixir"},
                   {vsn,"3.6.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto','Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Queryable',
                        'Elixir.Ecto.Adapter.Schema',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.Transaction',
                        'Elixir.Ecto.Application','Elixir.Ecto.Association',
                        'Elixir.Ecto.Association.BelongsTo',
                        'Elixir.Ecto.Association.Has',
                        'Elixir.Ecto.Association.HasThrough',
                        'Elixir.Ecto.Association.ManyToMany',
                        'Elixir.Ecto.Association.NotLoaded',
                        'Elixir.Ecto.CastError','Elixir.Ecto.ChangeError',
                        'Elixir.Ecto.Changeset',
                        'Elixir.Ecto.Changeset.Relation',
                        'Elixir.Ecto.ConstraintError','Elixir.Ecto.Embedded',
                        'Elixir.Ecto.Enum',
                        'Elixir.Ecto.InvalidChangesetError',
                        'Elixir.Ecto.InvalidURLError',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
                        'Elixir.Ecto.MultiplePrimaryKeyError',
                        'Elixir.Ecto.MultipleResultsError',
                        'Elixir.Ecto.NoPrimaryKeyFieldError',
                        'Elixir.Ecto.NoPrimaryKeyValueError',
                        'Elixir.Ecto.NoResultsError',
                        'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API',
                        'Elixir.Ecto.Query.BooleanExpr',
                        'Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.CTE',
                        'Elixir.Ecto.Query.Builder.Combination',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.Dynamic',
                        'Elixir.Ecto.Query.Builder.Filter',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Update',
                        'Elixir.Ecto.Query.Builder.Windows',
                        'Elixir.Ecto.Query.CastError',
                        'Elixir.Ecto.Query.CompileError',
                        'Elixir.Ecto.Query.DynamicExpr',
                        'Elixir.Ecto.Query.FromExpr',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.Planner',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.SelectExpr',
                        'Elixir.Ecto.Query.Tagged',
                        'Elixir.Ecto.Query.WindowAPI',
                        'Elixir.Ecto.Query.WithExpr','Elixir.Ecto.QueryError',
                        'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Ecto.SubQuery',
                        'Elixir.Ecto.Queryable.Tuple','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Assoc','Elixir.Ecto.Repo.Preloader',
                        'Elixir.Ecto.Repo.Queryable',
                        'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
                        'Elixir.Ecto.Repo.Supervisor',
                        'Elixir.Ecto.Repo.Transaction','Elixir.Ecto.Schema',
                        'Elixir.Ecto.Schema.Loader',
                        'Elixir.Ecto.Schema.Metadata',
                        'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
                        'Elixir.Ecto.SubQueryError','Elixir.Ecto.Type',
                        'Elixir.Ecto.UUID',
                        'Elixir.Inspect.Ecto.Association.NotLoaded',
                        'Elixir.Inspect.Ecto.Changeset',
                        'Elixir.Inspect.Ecto.Query',
                        'Elixir.Inspect.Ecto.Query.DynamicExpr',
                        'Elixir.Inspect.Ecto.Schema.Metadata',
                        'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
                        'Elixir.Jason.Encoder.Ecto.Schema.Metadata',
                        'Elixir.Mix.Ecto','Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,crypto,stdlib,decimal,telemetry,eex,
                        kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,connection,
                  [{description,
                       "Connection behaviour for connection processes\n"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,['Elixir.Connection']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,db_connection,
                  [{description,
                       "Database connection behaviour for database transactions and connection pooling\n"},
                   {vsn,"2.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection','Elixir.DBConnection.App',
                        'Elixir.DBConnection.Backoff',
                        'Elixir.DBConnection.Connection',
                        'Elixir.DBConnection.ConnectionError',
                        'Elixir.DBConnection.ConnectionPool',
                        'Elixir.DBConnection.ConnectionPool.Pool',
                        'Elixir.DBConnection.EncodeError',
                        'Elixir.DBConnection.Holder',
                        'Elixir.DBConnection.LogEntry',
                        'Elixir.DBConnection.Ownership',
                        'Elixir.DBConnection.Ownership.Manager',
                        'Elixir.DBConnection.Ownership.Proxy',
                        'Elixir.DBConnection.OwnershipError',
                        'Elixir.DBConnection.PrepareStream',
                        'Elixir.DBConnection.Query',
                        'Elixir.DBConnection.Stream',
                        'Elixir.DBConnection.Task',
                        'Elixir.DBConnection.TransactionError',
                        'Elixir.DBConnection.Watcher',
                        'Elixir.Enumerable.DBConnection.PrepareStream',
                        'Elixir.Enumerable.DBConnection.Stream']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,connection,stdlib,telemetry,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.DBConnection.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_sql,
                  [{description,
                       "SQL-based adapters for Ecto and database migrations"},
                   {vsn,"3.6.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapter.Migration',
                        'Elixir.Ecto.Adapter.Structure',
                        'Elixir.Ecto.Adapters.MySQL',
                        'Elixir.Ecto.Adapters.MyXQL',
                        'Elixir.Ecto.Adapters.MyXQL.Connection',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.Connection',
                        'Elixir.Ecto.Adapters.SQL',
                        'Elixir.Ecto.Adapters.SQL.Application',
                        'Elixir.Ecto.Adapters.SQL.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
                        'Elixir.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapters.Tds',
                        'Elixir.Ecto.Adapters.Tds.Connection',
                        'Elixir.Ecto.Migration',
                        'Elixir.Ecto.Migration.Command',
                        'Elixir.Ecto.Migration.Constraint',
                        'Elixir.Ecto.Migration.Index',
                        'Elixir.Ecto.Migration.Reference',
                        'Elixir.Ecto.Migration.Runner',
                        'Elixir.Ecto.Migration.SchemaMigration',
                        'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
                        'Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Mix.EctoSQL','Elixir.Mix.Tasks.Ecto.Dump',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Load',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Migrations',
                        'Elixir.Mix.Tasks.Ecto.Rollback',
                        'Elixir.Tds.Ecto.UUID','Elixir.Tds.Ecto.VarChar']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,ecto,stdlib,db_connection,telemetry,eex,
                        kernel]},
                   {included_applications,[]},
                   {env,[{postgres_map_type,<<"jsonb">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Adapters.SQL.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,uuid,
                  [{description,"UUID generator and utilities for Elixir.\n"},
                   {vsn,"1.1.8"},
                   {id,[]},
                   {modules,['Elixir.UUID']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,store,
                  [{description,"store"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.Store.Application',
                        'Elixir.Autoflow.Store.Dispatcher',
                        'Elixir.Autoflow.Store.Manager',
                        'Elixir.Autoflow.Store.Migration',
                        'Elixir.Autoflow.Store.Procedure.Table',
                        'Elixir.Autoflow.Store.Process.ChangeHandler',
                        'Elixir.Autoflow.Store.Process.TableExpiry',
                        'Elixir.Autoflow.Store.Record',
                        'Elixir.Autoflow.Store.Resource',
                        'Elixir.Autoflow.Store.Table',
                        'Elixir.Autoflow.Store.Table.ChangeHistory',
                        'Elixir.Autoflow.Store.Table.Data',
                        'Elixir.Autoflow.Store.Table.DataGroup',
                        'Elixir.Autoflow.Store.Table.File',
                        'Elixir.Autoflow.Store.Table.FileContent',
                        'Elixir.Autoflow.Store.Table.Flow',
                        'Elixir.Autoflow.Store.Table.Inbound',
                        'Elixir.Autoflow.Store.Table.InboundEndpoint',
                        'Elixir.Autoflow.Store.Table.ResourceInfo',
                        'Elixir.Autoflow.Store.Table.Schema',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Header',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Oauth',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Operation',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Parameter',
                        'Elixir.Autoflow.Store.Table.Schema.Http.PathItem',
                        'Elixir.Autoflow.Store.Table.Schema.Http.RequestBody',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Response',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Schema',
                        'Elixir.Autoflow.Store.Table.Schema.Http.SecurityScheme',
                        'Elixir.Autoflow.Store.Table.Schema.Http.Tokens',
                        'Elixir.Autoflow.Store.Table.Test',
                        'Elixir.Autoflow.Store.Table.Timer',
                        'Elixir.Autoflow.Store.Table.User',
                        'Elixir.Autoflow.Store.Table.Variable']},
                   {registered,[]},
                   {applications,
                       [elixir,common,logger,gen_state_machine,ecto_sql,
                        stdlib,uuid,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Autoflow.Store.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,store_mnesia,
                  [{description,"store_mnesia"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.StoreMnesia.Adapter',
                        'Elixir.Autoflow.StoreMnesia.Application']},
                   {registered,[]},
                   {applications,[elixir,store,common,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Autoflow.StoreMnesia.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger_file_backend,
                  [{description,"Simple logger backend that writes to a file"},
                   {vsn,"0.0.11"},
                   {id,[]},
                   {modules,['Elixir.LoggerFileBackend']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,goldrush,
                  [{description,"Erlang event stream processor"},
                   {vsn,"0.1.9"},
                   {id,[]},
                   {modules,
                       [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,
                        gr_context,gr_counter,gr_counter_sup,gr_manager,
                        gr_manager_sup,gr_param,gr_param_sup,gr_sup,gre]},
                   {registered,[]},
                   {applications,[compiler,stdlib,syntax_tools,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gr_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lager,
                  [{description,"Erlang logging framework"},
                   {vsn,"3.8.0"},
                   {id,[]},
                   {modules,
                       [error_logger_lager_h,lager,lager_app,
                        lager_backend_throttle,lager_common_test_backend,
                        lager_config,lager_console_backend,lager_crash_log,
                        lager_default_formatter,lager_file_backend,
                        lager_format,lager_handler_watcher,
                        lager_handler_watcher_sup,lager_manager_killer,
                        lager_msg,lager_rotator_behaviour,
                        lager_rotator_default,lager_stdlib,lager_sup,
                        lager_transform,lager_trunc_io,lager_util]},
                   {registered,
                       [lager_sup,lager_event,lager_crash_log,
                        lager_handler_watcher_sup]},
                   {applications,[stdlib,goldrush,kernel]},
                   {included_applications,[]},
                   {env,
                       [{colored,false},
                        {colors,
                            [{debug,"\e[0;38m"},
                             {info,"\e[1;37m"},
                             {notice,"\e[1;36m"},
                             {warning,"\e[1;33m"},
                             {error,"\e[1;31m"},
                             {critical,"\e[1;35m"},
                             {alert,"\e[1;44m"},
                             {emergency,"\e[1;41m"}]},
                        {crash_log,"log/crash.log"},
                        {crash_log_msg_size,65536},
                        {crash_log_size,10485760},
                        {crash_log_date,"$D0"},
                        {crash_log_count,5},
                        {crash_log_rotator,lager_rotator_default},
                        {error_logger_redirect,true},
                        {error_logger_hwm,50},
                        {async_threshold,20},
                        {async_threshold_window,5}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lager_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,xmerl,
                  [{description,"XML parser"},
                   {vsn,"1.3.20.1"},
                   {id,[]},
                   {modules,
                       [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,
                        xmerl_html,xmerl_lib,xmerl_otpsgml,xmerl_regexp,
                        xmerl_sax_parser,xmerl_sax_parser_list,
                        xmerl_sax_parser_latin1,xmerl_sax_parser_utf8,
                        xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
                        xmerl_sax_simple_dom,xmerl_sax_old_dom,xmerl_scan,
                        xmerl_sgml,xmerl_simple,xmerl_text,xmerl_ucs,
                        xmerl_uri,xmerl_validate,xmerl_xlate,xmerl_xml,
                        xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
                        xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
                        xmerl_xsd_type]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.3"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tools,
                  [{description,"DEVTOOLS  CXC 138 16"},
                   {vsn,"3.1.0.1"},
                   {id,[]},
                   {modules,
                       [cover,eprof,fprof,instrument,lcnt,make,xref,xref_base,
                        xref_compiler,xref_parser,xref_reader,xref_scanner,
                        xref_utils]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{file_util_search_methods,
                            [{[],[]},{"ebin","esrc"},{"ebin","src"}]}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jsx,
                  [{description,"a streaming, evented json parsing toolkit"},
                   {vsn,"2.11.0"},
                   {id,[]},
                   {modules,
                       [jsx,jsx_config,jsx_consult,jsx_decoder,jsx_encoder,
                        jsx_parser,jsx_to_json,jsx_to_term,jsx_verify]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,recon,
                  [{description,"Diagnostic tools for production use"},
                   {vsn,"2.5.1"},
                   {id,[]},
                   {modules,
                       [recon,recon_alloc,recon_lib,recon_map,recon_rec,
                        recon_trace]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,credentials_obfuscation,
                  [{description,
                       "Helper library that obfuscates sensitive values in process state"},
                   {vsn,"2.2.0"},
                   {id,[]},
                   {modules,
                       [credentials_obfuscation,credentials_obfuscation_app,
                        credentials_obfuscation_pbe,
                        credentials_obfuscation_sup,
                        credentials_obfuscation_svc]},
                   {registered,[]},
                   {applications,[crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{enabled,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{credentials_obfuscation_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,rabbit_common,
                  [{description,
                       "Modules shared by rabbitmq-server and rabbitmq-erlang-client"},
                   {vsn,"3.8.9"},
                   {id,[]},
                   {modules,
                       [app_utils,code_version,credit_flow,delegate,
                        delegate_sup,file_handle_cache,
                        file_handle_cache_stats,gen_server2,
                        lager_forwarder_backend,mirrored_supervisor,
                        mnesia_sync,pmon,priority_queue,
                        rabbit_amqp_connection,rabbit_amqqueue_common,
                        rabbit_auth_backend_dummy,rabbit_auth_mechanism,
                        rabbit_authn_backend,rabbit_authz_backend,
                        rabbit_basic_common,rabbit_binary_generator,
                        rabbit_binary_parser,rabbit_cert_info,
                        rabbit_channel_common,rabbit_command_assembler,
                        rabbit_control_misc,rabbit_core_metrics,
                        rabbit_data_coercion,rabbit_env,
                        rabbit_error_logger_handler,rabbit_event,
                        rabbit_exchange_type,rabbit_framing_amqp_0_8,
                        rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
                        rabbit_http_util,rabbit_json,rabbit_log,
                        rabbit_log_ra_shim,rabbit_misc,rabbit_msg_store_index,
                        rabbit_net,rabbit_nodes_common,rabbit_numerical,
                        rabbit_password_hashing,rabbit_pbe,
                        rabbit_peer_discovery_backend,rabbit_policy_validator,
                        rabbit_queue_collector,rabbit_registry,
                        rabbit_registry_class,rabbit_resource_monitor_misc,
                        rabbit_runtime,rabbit_runtime_parameter,rabbit_semver,
                        rabbit_semver_parser,rabbit_ssl_options,rabbit_types,
                        rabbit_writer,supervisor2,vm_memory_monitor,
                        worker_pool,worker_pool_sup,worker_pool_worker]},
                   {registered,[]},
                   {applications,
                       [lager,sasl,ssl,public_key,compiler,xmerl,crypto,
                        stdlib,syntax_tools,tools,jsx,recon,
                        credentials_obfuscation,ranch,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,amqp_client,
                  [{description,"RabbitMQ AMQP Client"},
                   {vsn,"3.8.9"},
                   {id,[]},
                   {modules,
                       [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
                        amqp_channel_sup_sup,amqp_channels_manager,
                        amqp_client,amqp_connection,amqp_connection_sup,
                        amqp_connection_type_sup,amqp_direct_connection,
                        amqp_direct_consumer,amqp_gen_connection,
                        amqp_gen_consumer,amqp_main_reader,
                        amqp_network_connection,amqp_rpc_client,
                        amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
                        amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,
                        uri_parser]},
                   {registered,[amqp_client_sup,amqp_sup]},
                   {applications,[xmerl,stdlib,rabbit_common,kernel]},
                   {included_applications,[]},
                   {env,
                       [{prefer_ipv6,false},
                        {ssl_options,[]},
                        {writer_gc_threshold,1000000000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{amqp_client,[]}}]}]}},
     {apply,
         {application,load,
             [{application,amqp,
                  [{description,"Idiomatic Elixir client for RabbitMQ.\n"},
                   {vsn,"1.6.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.AMQP','Elixir.AMQP.Application',
                        'Elixir.AMQP.Basic','Elixir.AMQP.BasicError',
                        'Elixir.AMQP.Channel','Elixir.AMQP.Channel.Receiver',
                        'Elixir.AMQP.Channel.ReceiverManager',
                        'Elixir.AMQP.Confirm','Elixir.AMQP.Connection',
                        'Elixir.AMQP.Core','Elixir.AMQP.DirectConsumer',
                        'Elixir.AMQP.Exchange','Elixir.AMQP.Queue',
                        'Elixir.AMQP.Utils']},
                   {registered,[]},
                   {applications,[elixir,lager,stdlib,amqp_client,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.AMQP.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,rustler,
                  [{description,"rustler"},
                   {vsn,"0.22.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Compile.Rustler',
                        'Elixir.Mix.Tasks.Rustler.New','Elixir.Rustler',
                        'Elixir.Rustler.Compiler',
                        'Elixir.Rustler.Compiler.Config',
                        'Elixir.Rustler.Compiler.Messages',
                        'Elixir.Rustler.Compiler.Rustup']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,eex,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,tds_encoding,
                  [{description,
                       "String encoding/decoding NIF using rust [encoding](https://crates.io/crates/encoding) library"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,['Elixir.Tds.Encoding']},
                   {registered,[]},
                   {applications,[elixir,logger,rustler,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,redix,
                  [{description,
                       "Fast, pipelined, resilient Redis driver for Elixir."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Redix','Elixir.Redix.Connection',
                        'Elixir.Redix.ConnectionError',
                        'Elixir.Redix.Connector','Elixir.Redix.Error',
                        'Elixir.Redix.Protocol',
                        'Elixir.Redix.Protocol.ParseError',
                        'Elixir.Redix.PubSub',
                        'Elixir.Redix.PubSub.Connection',
                        'Elixir.Redix.SocketOwner',
                        'Elixir.Redix.StartOptions','Elixir.Redix.Telemetry',
                        'Elixir.Redix.URI']},
                   {registered,[]},
                   {applications,[elixir,logger,ssl,stdlib,telemetry,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mutex,
                  [{description,
                       "This package implements a simple mutex as a GenServer. It allows to await\nlocked keys and handles locking multiple keys without deadlocks.\n"},
                   {vsn,"1.1.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mutex','Elixir.Mutex.Lock','Elixir.Mutex.S']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,yamerl,
                  [{description,"YAML 1.2 and JSON parser in pure Erlang"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,
                       [yamerl,yamerl_app,yamerl_constr,yamerl_errors,
                        yamerl_node_bool,yamerl_node_bool_ext,
                        yamerl_node_bool_json,yamerl_node_erlang_atom,
                        yamerl_node_erlang_fun,yamerl_node_float,
                        yamerl_node_float_ext,yamerl_node_float_json,
                        yamerl_node_int,yamerl_node_int_ext,
                        yamerl_node_int_json,yamerl_node_ipaddr,
                        yamerl_node_map,yamerl_node_null,
                        yamerl_node_null_json,yamerl_node_seq,
                        yamerl_node_size,yamerl_node_str,yamerl_node_str_json,
                        yamerl_node_timestamp,yamerl_parser,yamerl_sup,
                        yamerl_yamler_compat]},
                   {registered,[yamerl_sup]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{node_mods,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{yamerl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,varint,
                  [{description,
                       "A library to compress integers using LEB128.\n"},
                   {vsn,"1.2.0"},
                   {id,[]},
                   {modules,['Elixir.Varint.LEB128','Elixir.Varint.Zigzag']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crc32cer,
                  [{description,"CRC32-C as nif for Erlang"},
                   {vsn,"0.1.10"},
                   {id,[]},
                   {modules,[crc32cer]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,kayrock,
                  [{description,"Elixir interface to the Kafka protocol"},
                   {vsn,"0.1.12"},
                   {id,[]},
                   {modules,
                       ['Elixir.Kayrock','Elixir.Kayrock.AddOffsetsToTxn',
                        'Elixir.Kayrock.AddOffsetsToTxn.V0.Request',
                        'Elixir.Kayrock.AddOffsetsToTxn.V0.Response',
                        'Elixir.Kayrock.AddPartitionsToTxn',
                        'Elixir.Kayrock.AddPartitionsToTxn.V0.Request',
                        'Elixir.Kayrock.AddPartitionsToTxn.V0.Response',
                        'Elixir.Kayrock.AlterConfigs',
                        'Elixir.Kayrock.AlterConfigs.V0.Request',
                        'Elixir.Kayrock.AlterConfigs.V0.Response',
                        'Elixir.Kayrock.AlterReplicaLogDirs',
                        'Elixir.Kayrock.AlterReplicaLogDirs.V0.Request',
                        'Elixir.Kayrock.AlterReplicaLogDirs.V0.Response',
                        'Elixir.Kayrock.ApiVersions',
                        'Elixir.Kayrock.ApiVersions.V0.Request',
                        'Elixir.Kayrock.ApiVersions.V0.Response',
                        'Elixir.Kayrock.ApiVersions.V1.Request',
                        'Elixir.Kayrock.ApiVersions.V1.Response',
                        'Elixir.Kayrock.BinaryDebugUtil',
                        'Elixir.Kayrock.BrokerConnection',
                        'Elixir.Kayrock.BrokerConnection.State',
                        'Elixir.Kayrock.Client',
                        'Elixir.Kayrock.Client.Broker',
                        'Elixir.Kayrock.Client.ClusterMetadata',
                        'Elixir.Kayrock.Client.Opts',
                        'Elixir.Kayrock.Client.State',
                        'Elixir.Kayrock.Client.Topic',
                        'Elixir.Kayrock.Compression',
                        'Elixir.Kayrock.Convenience',
                        'Elixir.Kayrock.CreateAcls',
                        'Elixir.Kayrock.CreateAcls.V0.Request',
                        'Elixir.Kayrock.CreateAcls.V0.Response',
                        'Elixir.Kayrock.CreateDelegationToken',
                        'Elixir.Kayrock.CreateDelegationToken.V0.Request',
                        'Elixir.Kayrock.CreateDelegationToken.V0.Response',
                        'Elixir.Kayrock.CreatePartitions',
                        'Elixir.Kayrock.CreatePartitions.V0.Request',
                        'Elixir.Kayrock.CreatePartitions.V0.Response',
                        'Elixir.Kayrock.CreateTopics',
                        'Elixir.Kayrock.CreateTopics.V0.Request',
                        'Elixir.Kayrock.CreateTopics.V0.Response',
                        'Elixir.Kayrock.CreateTopics.V1.Request',
                        'Elixir.Kayrock.CreateTopics.V1.Response',
                        'Elixir.Kayrock.CreateTopics.V2.Request',
                        'Elixir.Kayrock.CreateTopics.V2.Response',
                        'Elixir.Kayrock.DeleteAcls',
                        'Elixir.Kayrock.DeleteAcls.V0.Request',
                        'Elixir.Kayrock.DeleteAcls.V0.Response',
                        'Elixir.Kayrock.DeleteGroups',
                        'Elixir.Kayrock.DeleteGroups.V0.Request',
                        'Elixir.Kayrock.DeleteGroups.V0.Response',
                        'Elixir.Kayrock.DeleteRecords',
                        'Elixir.Kayrock.DeleteRecords.V0.Request',
                        'Elixir.Kayrock.DeleteRecords.V0.Response',
                        'Elixir.Kayrock.DeleteTopics',
                        'Elixir.Kayrock.DeleteTopics.V0.Request',
                        'Elixir.Kayrock.DeleteTopics.V0.Response',
                        'Elixir.Kayrock.DeleteTopics.V1.Request',
                        'Elixir.Kayrock.DeleteTopics.V1.Response',
                        'Elixir.Kayrock.DescribeAcls',
                        'Elixir.Kayrock.DescribeAcls.V0.Request',
                        'Elixir.Kayrock.DescribeAcls.V0.Response',
                        'Elixir.Kayrock.DescribeConfigs',
                        'Elixir.Kayrock.DescribeConfigs.V0.Request',
                        'Elixir.Kayrock.DescribeConfigs.V0.Response',
                        'Elixir.Kayrock.DescribeConfigs.V1.Request',
                        'Elixir.Kayrock.DescribeConfigs.V1.Response',
                        'Elixir.Kayrock.DescribeDelegationToken',
                        'Elixir.Kayrock.DescribeDelegationToken.V0.Request',
                        'Elixir.Kayrock.DescribeDelegationToken.V0.Response',
                        'Elixir.Kayrock.DescribeGroups',
                        'Elixir.Kayrock.DescribeGroups.V0.Request',
                        'Elixir.Kayrock.DescribeGroups.V0.Response',
                        'Elixir.Kayrock.DescribeGroups.V1.Request',
                        'Elixir.Kayrock.DescribeGroups.V1.Response',
                        'Elixir.Kayrock.DescribeLogDirs',
                        'Elixir.Kayrock.DescribeLogDirs.V0.Request',
                        'Elixir.Kayrock.DescribeLogDirs.V0.Response',
                        'Elixir.Kayrock.Deserialize','Elixir.Kayrock.EndTxn',
                        'Elixir.Kayrock.EndTxn.V0.Request',
                        'Elixir.Kayrock.EndTxn.V0.Response',
                        'Elixir.Kayrock.ErrorCode',
                        'Elixir.Kayrock.ErrorCode.InvalidAtomException',
                        'Elixir.Kayrock.ErrorCode.InvalidErrorCodeException',
                        'Elixir.Kayrock.ExpireDelegationToken',
                        'Elixir.Kayrock.ExpireDelegationToken.V0.Request',
                        'Elixir.Kayrock.ExpireDelegationToken.V0.Response',
                        'Elixir.Kayrock.Fetch',
                        'Elixir.Kayrock.Fetch.V0.Request',
                        'Elixir.Kayrock.Fetch.V0.Response',
                        'Elixir.Kayrock.Fetch.V1.Request',
                        'Elixir.Kayrock.Fetch.V1.Response',
                        'Elixir.Kayrock.Fetch.V2.Request',
                        'Elixir.Kayrock.Fetch.V2.Response',
                        'Elixir.Kayrock.Fetch.V3.Request',
                        'Elixir.Kayrock.Fetch.V3.Response',
                        'Elixir.Kayrock.Fetch.V4.Request',
                        'Elixir.Kayrock.Fetch.V4.Response',
                        'Elixir.Kayrock.Fetch.V5.Request',
                        'Elixir.Kayrock.Fetch.V5.Response',
                        'Elixir.Kayrock.Fetch.V6.Request',
                        'Elixir.Kayrock.Fetch.V6.Response',
                        'Elixir.Kayrock.Fetch.V7.Request',
                        'Elixir.Kayrock.Fetch.V7.Response',
                        'Elixir.Kayrock.FindCoordinator',
                        'Elixir.Kayrock.FindCoordinator.V0.Request',
                        'Elixir.Kayrock.FindCoordinator.V0.Response',
                        'Elixir.Kayrock.FindCoordinator.V1.Request',
                        'Elixir.Kayrock.FindCoordinator.V1.Response',
                        'Elixir.Kayrock.Generate',
                        'Elixir.Kayrock.GroupProtocolMetadata',
                        'Elixir.Kayrock.Heartbeat',
                        'Elixir.Kayrock.Heartbeat.V0.Request',
                        'Elixir.Kayrock.Heartbeat.V0.Response',
                        'Elixir.Kayrock.Heartbeat.V1.Request',
                        'Elixir.Kayrock.Heartbeat.V1.Response',
                        'Elixir.Kayrock.InitProducerId',
                        'Elixir.Kayrock.InitProducerId.V0.Request',
                        'Elixir.Kayrock.InitProducerId.V0.Response',
                        'Elixir.Kayrock.InvalidRequestError',
                        'Elixir.Kayrock.JoinGroup',
                        'Elixir.Kayrock.JoinGroup.V0.Request',
                        'Elixir.Kayrock.JoinGroup.V0.Response',
                        'Elixir.Kayrock.JoinGroup.V1.Request',
                        'Elixir.Kayrock.JoinGroup.V1.Response',
                        'Elixir.Kayrock.JoinGroup.V2.Request',
                        'Elixir.Kayrock.JoinGroup.V2.Response',
                        'Elixir.Kayrock.KafkaSchemaMetadata',
                        'Elixir.Kayrock.LeaveGroup',
                        'Elixir.Kayrock.LeaveGroup.V0.Request',
                        'Elixir.Kayrock.LeaveGroup.V0.Response',
                        'Elixir.Kayrock.LeaveGroup.V1.Request',
                        'Elixir.Kayrock.LeaveGroup.V1.Response',
                        'Elixir.Kayrock.ListGroups',
                        'Elixir.Kayrock.ListGroups.V0.Request',
                        'Elixir.Kayrock.ListGroups.V0.Response',
                        'Elixir.Kayrock.ListGroups.V1.Request',
                        'Elixir.Kayrock.ListGroups.V1.Response',
                        'Elixir.Kayrock.ListOffsets',
                        'Elixir.Kayrock.ListOffsets.V0.Request',
                        'Elixir.Kayrock.ListOffsets.V0.Response',
                        'Elixir.Kayrock.ListOffsets.V1.Request',
                        'Elixir.Kayrock.ListOffsets.V1.Response',
                        'Elixir.Kayrock.ListOffsets.V2.Request',
                        'Elixir.Kayrock.ListOffsets.V2.Response',
                        'Elixir.Kayrock.Macros',
                        'Elixir.Kayrock.MemberAssignment',
                        'Elixir.Kayrock.MemberAssignment.PartitionAssignment',
                        'Elixir.Kayrock.MessageSet',
                        'Elixir.Kayrock.MessageSet.Message',
                        'Elixir.Kayrock.Metadata',
                        'Elixir.Kayrock.Metadata.V0.Request',
                        'Elixir.Kayrock.Metadata.V0.Response',
                        'Elixir.Kayrock.Metadata.V1.Request',
                        'Elixir.Kayrock.Metadata.V1.Response',
                        'Elixir.Kayrock.Metadata.V2.Request',
                        'Elixir.Kayrock.Metadata.V2.Response',
                        'Elixir.Kayrock.Metadata.V3.Request',
                        'Elixir.Kayrock.Metadata.V3.Response',
                        'Elixir.Kayrock.Metadata.V4.Request',
                        'Elixir.Kayrock.Metadata.V4.Response',
                        'Elixir.Kayrock.Metadata.V5.Request',
                        'Elixir.Kayrock.Metadata.V5.Response',
                        'Elixir.Kayrock.OffsetCommit',
                        'Elixir.Kayrock.OffsetCommit.V0.Request',
                        'Elixir.Kayrock.OffsetCommit.V0.Response',
                        'Elixir.Kayrock.OffsetCommit.V1.Request',
                        'Elixir.Kayrock.OffsetCommit.V1.Response',
                        'Elixir.Kayrock.OffsetCommit.V2.Request',
                        'Elixir.Kayrock.OffsetCommit.V2.Response',
                        'Elixir.Kayrock.OffsetCommit.V3.Request',
                        'Elixir.Kayrock.OffsetCommit.V3.Response',
                        'Elixir.Kayrock.OffsetFetch',
                        'Elixir.Kayrock.OffsetFetch.V0.Request',
                        'Elixir.Kayrock.OffsetFetch.V0.Response',
                        'Elixir.Kayrock.OffsetFetch.V1.Request',
                        'Elixir.Kayrock.OffsetFetch.V1.Response',
                        'Elixir.Kayrock.OffsetFetch.V2.Request',
                        'Elixir.Kayrock.OffsetFetch.V2.Response',
                        'Elixir.Kayrock.OffsetFetch.V3.Request',
                        'Elixir.Kayrock.OffsetFetch.V3.Response',
                        'Elixir.Kayrock.Produce',
                        'Elixir.Kayrock.Produce.V0.Request',
                        'Elixir.Kayrock.Produce.V0.Response',
                        'Elixir.Kayrock.Produce.V1.Request',
                        'Elixir.Kayrock.Produce.V1.Response',
                        'Elixir.Kayrock.Produce.V2.Request',
                        'Elixir.Kayrock.Produce.V2.Response',
                        'Elixir.Kayrock.Produce.V3.Request',
                        'Elixir.Kayrock.Produce.V3.Response',
                        'Elixir.Kayrock.Produce.V4.Request',
                        'Elixir.Kayrock.Produce.V4.Response',
                        'Elixir.Kayrock.Produce.V5.Request',
                        'Elixir.Kayrock.Produce.V5.Response',
                        'Elixir.Kayrock.RecordBatch',
                        'Elixir.Kayrock.RecordBatch.Record',
                        'Elixir.Kayrock.RecordBatch.RecordHeader',
                        'Elixir.Kayrock.RenewDelegationToken',
                        'Elixir.Kayrock.RenewDelegationToken.V0.Request',
                        'Elixir.Kayrock.RenewDelegationToken.V0.Response',
                        'Elixir.Kayrock.Request',
                        'Elixir.Kayrock.Request.Kayrock.AddOffsetsToTxn.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.AddPartitionsToTxn.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.AlterConfigs.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.AlterReplicaLogDirs.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.ApiVersions.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.ApiVersions.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.CreateAcls.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.CreateDelegationToken.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.CreatePartitions.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.CreateTopics.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.CreateTopics.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.CreateTopics.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.DeleteAcls.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DeleteGroups.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DeleteRecords.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DeleteTopics.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DeleteTopics.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeAcls.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeConfigs.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeConfigs.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeDelegationToken.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeGroups.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeGroups.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.DescribeLogDirs.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.EndTxn.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.ExpireDelegationToken.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V3.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V4.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V5.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V6.Request',
                        'Elixir.Kayrock.Request.Kayrock.Fetch.V7.Request',
                        'Elixir.Kayrock.Request.Kayrock.FindCoordinator.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.FindCoordinator.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.Heartbeat.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.Heartbeat.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.InitProducerId.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.JoinGroup.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.JoinGroup.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.JoinGroup.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.LeaveGroup.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.LeaveGroup.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.ListGroups.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.ListGroups.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.ListOffsets.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.ListOffsets.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.ListOffsets.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.MessageSet',
                        'Elixir.Kayrock.Request.Kayrock.Metadata.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.Metadata.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.Metadata.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.Metadata.V3.Request',
                        'Elixir.Kayrock.Request.Kayrock.Metadata.V4.Request',
                        'Elixir.Kayrock.Request.Kayrock.Metadata.V5.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetCommit.V3.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.OffsetFetch.V3.Request',
                        'Elixir.Kayrock.Request.Kayrock.Produce.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.Produce.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.Produce.V2.Request',
                        'Elixir.Kayrock.Request.Kayrock.Produce.V3.Request',
                        'Elixir.Kayrock.Request.Kayrock.Produce.V4.Request',
                        'Elixir.Kayrock.Request.Kayrock.Produce.V5.Request',
                        'Elixir.Kayrock.Request.Kayrock.RecordBatch',
                        'Elixir.Kayrock.Request.Kayrock.RenewDelegationToken.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.SaslAuthenticate.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.SaslHandshake.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.SaslHandshake.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.SyncGroup.V0.Request',
                        'Elixir.Kayrock.Request.Kayrock.SyncGroup.V1.Request',
                        'Elixir.Kayrock.Request.Kayrock.TxnOffsetCommit.V0.Request',
                        'Elixir.Kayrock.SaslAuthenticate',
                        'Elixir.Kayrock.SaslAuthenticate.V0.Request',
                        'Elixir.Kayrock.SaslAuthenticate.V0.Response',
                        'Elixir.Kayrock.SaslHandshake',
                        'Elixir.Kayrock.SaslHandshake.V0.Request',
                        'Elixir.Kayrock.SaslHandshake.V0.Response',
                        'Elixir.Kayrock.SaslHandshake.V1.Request',
                        'Elixir.Kayrock.SaslHandshake.V1.Response',
                        'Elixir.Kayrock.Serialize','Elixir.Kayrock.Socket',
                        'Elixir.Kayrock.SyncGroup',
                        'Elixir.Kayrock.SyncGroup.V0.Request',
                        'Elixir.Kayrock.SyncGroup.V0.Response',
                        'Elixir.Kayrock.SyncGroup.V1.Request',
                        'Elixir.Kayrock.SyncGroup.V1.Response',
                        'Elixir.Kayrock.TxnOffsetCommit',
                        'Elixir.Kayrock.TxnOffsetCommit.V0.Request',
                        'Elixir.Kayrock.TxnOffsetCommit.V0.Response',
                        'Elixir.Mix.Tasks.Gen.KafkaProtocol']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,connection,varint,crc32cer,stdlib,
                        kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,kafka_ex,
                  [{description,"Kafka client for Elixir/Erlang."},
                   {vsn,"0.11.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.KafkaEx.Stream','Elixir.KafkaEx',
                        'Elixir.KafkaEx.ApiVersions',
                        'Elixir.KafkaEx.Compression','Elixir.KafkaEx.Config',
                        'Elixir.KafkaEx.ConsumerGroup',
                        'Elixir.KafkaEx.ConsumerGroup.Heartbeat',
                        'Elixir.KafkaEx.ConsumerGroup.Heartbeat.State',
                        'Elixir.KafkaEx.ConsumerGroup.Manager',
                        'Elixir.KafkaEx.ConsumerGroup.Manager.State',
                        'Elixir.KafkaEx.ConsumerGroup.PartitionAssignment',
                        'Elixir.KafkaEx.ConsumerGroupRequiredError',
                        'Elixir.KafkaEx.DefaultPartitioner',
                        'Elixir.KafkaEx.GenConsumer',
                        'Elixir.KafkaEx.GenConsumer.State',
                        'Elixir.KafkaEx.GenConsumer.Supervisor',
                        'Elixir.KafkaEx.InvalidConsumerGroupError',
                        'Elixir.KafkaEx.LegacyPartitioner',
                        'Elixir.KafkaEx.NetworkClient',
                        'Elixir.KafkaEx.New.Adapter',
                        'Elixir.KafkaEx.New.Broker',
                        'Elixir.KafkaEx.New.Client',
                        'Elixir.KafkaEx.New.Client.State',
                        'Elixir.KafkaEx.New.ClientCompatibility',
                        'Elixir.KafkaEx.New.ClusterMetadata',
                        'Elixir.KafkaEx.New.KafkaExAPI',
                        'Elixir.KafkaEx.New.NodeSelector',
                        'Elixir.KafkaEx.New.Partition',
                        'Elixir.KafkaEx.New.Topic',
                        'Elixir.KafkaEx.Partitioner',
                        'Elixir.KafkaEx.Protocol',
                        'Elixir.KafkaEx.Protocol.ApiVersions',
                        'Elixir.KafkaEx.Protocol.ApiVersions.ApiVersion',
                        'Elixir.KafkaEx.Protocol.ApiVersions.Response',
                        'Elixir.KafkaEx.Protocol.Common',
                        'Elixir.KafkaEx.Protocol.ConsumerMetadata',
                        'Elixir.KafkaEx.Protocol.ConsumerMetadata.Response',
                        'Elixir.KafkaEx.Protocol.CreateTopics',
                        'Elixir.KafkaEx.Protocol.CreateTopics.ConfigEntry',
                        'Elixir.KafkaEx.Protocol.CreateTopics.ReplicaAssignment',
                        'Elixir.KafkaEx.Protocol.CreateTopics.Request',
                        'Elixir.KafkaEx.Protocol.CreateTopics.Response',
                        'Elixir.KafkaEx.Protocol.CreateTopics.TopicError',
                        'Elixir.KafkaEx.Protocol.CreateTopics.TopicRequest',
                        'Elixir.KafkaEx.Protocol.DeleteTopics',
                        'Elixir.KafkaEx.Protocol.DeleteTopics.Request',
                        'Elixir.KafkaEx.Protocol.DeleteTopics.Response',
                        'Elixir.KafkaEx.Protocol.DeleteTopics.TopicError',
                        'Elixir.KafkaEx.Protocol.Fetch',
                        'Elixir.KafkaEx.Protocol.Fetch.Message',
                        'Elixir.KafkaEx.Protocol.Fetch.Request',
                        'Elixir.KafkaEx.Protocol.Fetch.Response',
                        'Elixir.KafkaEx.Protocol.Heartbeat',
                        'Elixir.KafkaEx.Protocol.Heartbeat.Request',
                        'Elixir.KafkaEx.Protocol.Heartbeat.Response',
                        'Elixir.KafkaEx.Protocol.JoinGroup',
                        'Elixir.KafkaEx.Protocol.JoinGroup.Request',
                        'Elixir.KafkaEx.Protocol.JoinGroup.Response',
                        'Elixir.KafkaEx.Protocol.LeaveGroup',
                        'Elixir.KafkaEx.Protocol.LeaveGroup.Request',
                        'Elixir.KafkaEx.Protocol.LeaveGroup.Response',
                        'Elixir.KafkaEx.Protocol.Metadata',
                        'Elixir.KafkaEx.Protocol.Metadata.Broker',
                        'Elixir.KafkaEx.Protocol.Metadata.PartitionMetadata',
                        'Elixir.KafkaEx.Protocol.Metadata.Request',
                        'Elixir.KafkaEx.Protocol.Metadata.Response',
                        'Elixir.KafkaEx.Protocol.Metadata.TopicMetadata',
                        'Elixir.KafkaEx.Protocol.Offset',
                        'Elixir.KafkaEx.Protocol.Offset.Request',
                        'Elixir.KafkaEx.Protocol.Offset.Response',
                        'Elixir.KafkaEx.Protocol.OffsetCommit',
                        'Elixir.KafkaEx.Protocol.OffsetCommit.Request',
                        'Elixir.KafkaEx.Protocol.OffsetCommit.Response',
                        'Elixir.KafkaEx.Protocol.OffsetFetch',
                        'Elixir.KafkaEx.Protocol.OffsetFetch.Request',
                        'Elixir.KafkaEx.Protocol.OffsetFetch.Response',
                        'Elixir.KafkaEx.Protocol.Produce',
                        'Elixir.KafkaEx.Protocol.Produce.Message',
                        'Elixir.KafkaEx.Protocol.Produce.Request',
                        'Elixir.KafkaEx.Protocol.Produce.Response',
                        'Elixir.KafkaEx.Protocol.SyncGroup',
                        'Elixir.KafkaEx.Protocol.SyncGroup.Assignment',
                        'Elixir.KafkaEx.Protocol.SyncGroup.Request',
                        'Elixir.KafkaEx.Protocol.SyncGroup.Response',
                        'Elixir.KafkaEx.Server','Elixir.KafkaEx.Server.State',
                        'Elixir.KafkaEx.Server0P10AndLater',
                        'Elixir.KafkaEx.Server0P8P0',
                        'Elixir.KafkaEx.Server0P8P2',
                        'Elixir.KafkaEx.Server0P9P0','Elixir.KafkaEx.Socket',
                        'Elixir.KafkaEx.Stream','Elixir.KafkaEx.Supervisor',
                        'Elixir.KafkaEx.TimestampNotSupportedError',
                        'Elixir.KafkaEx.Utils.Murmur']},
                   {registered,[]},
                   {applications,[elixir,logger,kayrock,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.KafkaEx',[]}}]}]}},
     {apply,
         {application,load,
             [{application,poolboy,
                  [{description,"A hunky Erlang worker pool factory"},
                   {vsn,"1.5.2"},
                   {id,[]},
                   {modules,[poolboy,poolboy_sup,poolboy_worker]},
                   {registered,[poolboy]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gen_smtp,
                  [{description,
                       "A generic Erlang SMTP server/client framework"},
                   {vsn,"0.15.0"},
                   {id,[]},
                   {modules,
                       [binstr,gen_smtp_application,gen_smtp_client,
                        gen_smtp_server,gen_smtp_server_session,mimemail,
                        smtp_rfc822_parse,smtp_server_example,smtp_socket,
                        smtp_util]},
                   {registered,[]},
                   {applications,[ssl,public_key,asn1,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir_radius,
                  [{description,"Decode & encode RADIUS packets\n"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Radius','Elixir.Radius.Application',
                        'Elixir.Radius.Dict','Elixir.Radius.Dict.Attribute',
                        'Elixir.Radius.Dict.DictEntry',
                        'Elixir.Radius.Dict.EntryNotFoundError',
                        'Elixir.Radius.Dict.ParserError',
                        'Elixir.Radius.Dict.Value',
                        'Elixir.Radius.Dict.Vendor','Elixir.Radius.Packet',
                        'Elixir.Radius.Supervisor','Elixir.Radius.Util',
                        radius_dict_lex,radius_dict_parser]},
                   {registered,['Elixir.Radius.Dict']},
                   {applications,[elixir,logger,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Radius.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,aws,
                  [{description,"AWS clients for Elixir"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.AWS','Elixir.AWS.ACM','Elixir.AWS.ACMPCA',
                        'Elixir.AWS.API.Pricing','Elixir.AWS.APIGateway',
                        'Elixir.AWS.AccessAnalyzer',
                        'Elixir.AWS.AlexaForBusiness','Elixir.AWS.Amplify',
                        'Elixir.AWS.ApiGatewayManagementApi',
                        'Elixir.AWS.ApiGatewayV2','Elixir.AWS.AppConfig',
                        'Elixir.AWS.AppMesh','Elixir.AWS.AppStream',
                        'Elixir.AWS.AppSync','Elixir.AWS.Appflow',
                        'Elixir.AWS.ApplicationAutoScaling',
                        'Elixir.AWS.ApplicationDiscovery',
                        'Elixir.AWS.ApplicationInsights','Elixir.AWS.Athena',
                        'Elixir.AWS.AutoScaling',
                        'Elixir.AWS.AutoScalingPlans','Elixir.AWS.Backup',
                        'Elixir.AWS.Batch','Elixir.AWS.Braket',
                        'Elixir.AWS.Budgets','Elixir.AWS.Chime',
                        'Elixir.AWS.Client','Elixir.AWS.Cloud9',
                        'Elixir.AWS.CloudDirectory',
                        'Elixir.AWS.CloudFormation','Elixir.AWS.CloudFront',
                        'Elixir.AWS.CloudHSM','Elixir.AWS.CloudHSMV2',
                        'Elixir.AWS.CloudSearch','Elixir.AWS.CloudTrail',
                        'Elixir.AWS.CloudWatch','Elixir.AWS.CloudWatchEvents',
                        'Elixir.AWS.CloudWatchLogs',
                        'Elixir.AWS.Cloudsearchdomain','Elixir.AWS.CodeBuild',
                        'Elixir.AWS.CodeCommit','Elixir.AWS.CodeDeploy',
                        'Elixir.AWS.CodeGuruProfiler',
                        'Elixir.AWS.CodeGuruReviewer',
                        'Elixir.AWS.CodePipeline','Elixir.AWS.CodeStar',
                        'Elixir.AWS.CodeStarConnections',
                        'Elixir.AWS.Codeartifact',
                        'Elixir.AWS.Codestarnotifications',
                        'Elixir.AWS.CognitoIdentity',
                        'Elixir.AWS.CognitoIdentityProvider',
                        'Elixir.AWS.CognitoSync','Elixir.AWS.Comprehend',
                        'Elixir.AWS.ComprehendMedical',
                        'Elixir.AWS.ComputeOptimizer','Elixir.AWS.Config',
                        'Elixir.AWS.Connect','Elixir.AWS.ConnectParticipant',
                        'Elixir.AWS.CostExplorer',
                        'Elixir.AWS.CostandUsageReport','Elixir.AWS.DAX',
                        'Elixir.AWS.DLM','Elixir.AWS.DataBrew',
                        'Elixir.AWS.DataExchange','Elixir.AWS.DataSync',
                        'Elixir.AWS.DatabaseMigration',
                        'Elixir.AWS.Datapipeline','Elixir.AWS.Detective',
                        'Elixir.AWS.DeviceFarm','Elixir.AWS.DirectConnect',
                        'Elixir.AWS.Directory','Elixir.AWS.DocDB',
                        'Elixir.AWS.DynamoDB','Elixir.AWS.DynamoDBStreams',
                        'Elixir.AWS.EBS','Elixir.AWS.EC2InstanceConnect',
                        'Elixir.AWS.ECR','Elixir.AWS.ECS','Elixir.AWS.EFS',
                        'Elixir.AWS.EKS','Elixir.AWS.EMR',
                        'Elixir.AWS.ElastiCache',
                        'Elixir.AWS.ElasticBeanstalk',
                        'Elixir.AWS.ElasticInference',
                        'Elixir.AWS.ElasticLoadBalancing',
                        'Elixir.AWS.ElasticLoadBalancingv2',
                        'Elixir.AWS.ElasticTranscoder',
                        'Elixir.AWS.Elasticsearch',
                        'Elixir.AWS.Entitlement.Marketplace',
                        'Elixir.AWS.EventBridge','Elixir.AWS.FMS',
                        'Elixir.AWS.FSx','Elixir.AWS.Firehose',
                        'Elixir.AWS.Forecast','Elixir.AWS.Forecastquery',
                        'Elixir.AWS.FraudDetector','Elixir.AWS.GameLift',
                        'Elixir.AWS.Glacier','Elixir.AWS.GlobalAccelerator',
                        'Elixir.AWS.Glue','Elixir.AWS.Greengrass',
                        'Elixir.AWS.GroundStation','Elixir.AWS.GuardDuty',
                        'Elixir.AWS.HTTPClient','Elixir.AWS.Health',
                        'Elixir.AWS.Honeycode','Elixir.AWS.IAM',
                        'Elixir.AWS.Identitystore','Elixir.AWS.Imagebuilder',
                        'Elixir.AWS.Importexport','Elixir.AWS.Inspector',
                        'Elixir.AWS.IoT','Elixir.AWS.IoT1ClickDevices',
                        'Elixir.AWS.IoT1ClickProjects',
                        'Elixir.AWS.IoTAnalytics','Elixir.AWS.IoTDataPlane',
                        'Elixir.AWS.IoTEvents','Elixir.AWS.IoTEventsData',
                        'Elixir.AWS.IoTJobsDataPlane',
                        'Elixir.AWS.IoTSecureTunneling',
                        'Elixir.AWS.IoTSiteWise','Elixir.AWS.IoTThingsGraph',
                        'Elixir.AWS.Ivs','Elixir.AWS.JSON','Elixir.AWS.KMS',
                        'Elixir.AWS.Kafka','Elixir.AWS.Kendra',
                        'Elixir.AWS.Kinesis','Elixir.AWS.KinesisAnalytics',
                        'Elixir.AWS.KinesisAnalyticsV2',
                        'Elixir.AWS.KinesisVideo',
                        'Elixir.AWS.KinesisVideoArchivedMedia',
                        'Elixir.AWS.KinesisVideoMedia',
                        'Elixir.AWS.KinesisVideoSignaling',
                        'Elixir.AWS.LakeFormation','Elixir.AWS.Lambda',
                        'Elixir.AWS.LexModelBuilding','Elixir.AWS.LexRuntime',
                        'Elixir.AWS.LicenseManager','Elixir.AWS.Lightsail',
                        'Elixir.AWS.MTurk','Elixir.AWS.MWAA',
                        'Elixir.AWS.Machinelearning','Elixir.AWS.Macie',
                        'Elixir.AWS.Macie2','Elixir.AWS.ManagedBlockchain',
                        'Elixir.AWS.MarketplaceCatalog',
                        'Elixir.AWS.MarketplaceCommerceAnalytics',
                        'Elixir.AWS.MarketplaceMetering',
                        'Elixir.AWS.MediaConnect','Elixir.AWS.MediaConvert',
                        'Elixir.AWS.MediaLive','Elixir.AWS.MediaPackage',
                        'Elixir.AWS.MediaPackageVod','Elixir.AWS.MediaStore',
                        'Elixir.AWS.MediaStoreData','Elixir.AWS.MediaTailor',
                        'Elixir.AWS.MigrationHub',
                        'Elixir.AWS.MigrationHubConfig','Elixir.AWS.Mobile',
                        'Elixir.AWS.Mobileanalytics','Elixir.AWS.Mq',
                        'Elixir.AWS.Neptune','Elixir.AWS.NetworkFirewall',
                        'Elixir.AWS.NetworkManager','Elixir.AWS.OpsWorks',
                        'Elixir.AWS.OpsWorksCM','Elixir.AWS.Organizations',
                        'Elixir.AWS.Outposts','Elixir.AWS.PI',
                        'Elixir.AWS.Personalize',
                        'Elixir.AWS.PersonalizeEvents',
                        'Elixir.AWS.PersonalizeRuntime','Elixir.AWS.Pinpoint',
                        'Elixir.AWS.PinpointEmail',
                        'Elixir.AWS.PinpointSMSVoice','Elixir.AWS.Polly',
                        'Elixir.AWS.QLDB','Elixir.AWS.QLDBSession',
                        'Elixir.AWS.QuickSight','Elixir.AWS.RAM',
                        'Elixir.AWS.RDS','Elixir.AWS.RDSData',
                        'Elixir.AWS.Redshift','Elixir.AWS.RedshiftData',
                        'Elixir.AWS.Rekognition','Elixir.AWS.Request',
                        'Elixir.AWS.Request.Internal',
                        'Elixir.AWS.ResourceGroups',
                        'Elixir.AWS.ResourceGroupsTaggingAPI',
                        'Elixir.AWS.RoboMaker','Elixir.AWS.Route53',
                        'Elixir.AWS.Route53Domains',
                        'Elixir.AWS.Route53Resolver','Elixir.AWS.S3',
                        'Elixir.AWS.S3Control','Elixir.AWS.S3Outposts',
                        'Elixir.AWS.SES','Elixir.AWS.SESv2','Elixir.AWS.SFN',
                        'Elixir.AWS.SMS','Elixir.AWS.SNS','Elixir.AWS.SQS',
                        'Elixir.AWS.SSM','Elixir.AWS.SSO',
                        'Elixir.AWS.SSOAdmin','Elixir.AWS.SSOOIDC',
                        'Elixir.AWS.STS','Elixir.AWS.SWF',
                        'Elixir.AWS.SageMaker',
                        'Elixir.AWS.SageMakerA2IRuntime',
                        'Elixir.AWS.SageMakerRuntime',
                        'Elixir.AWS.Savingsplans','Elixir.AWS.Schemas',
                        'Elixir.AWS.Sdb','Elixir.AWS.SecretsManager',
                        'Elixir.AWS.SecurityHub',
                        'Elixir.AWS.ServerlessApplicationRepository',
                        'Elixir.AWS.ServiceCatalog',
                        'Elixir.AWS.ServiceCatalogAppRegistry',
                        'Elixir.AWS.ServiceDiscovery',
                        'Elixir.AWS.ServiceMetadata',
                        'Elixir.AWS.ServiceQuotas','Elixir.AWS.Shield',
                        'Elixir.AWS.Signer','Elixir.AWS.Snowball',
                        'Elixir.AWS.StorageGateway','Elixir.AWS.Support',
                        'Elixir.AWS.Synthetics','Elixir.AWS.Textract',
                        'Elixir.AWS.TimestreamQuery',
                        'Elixir.AWS.TimestreamWrite','Elixir.AWS.Transcribe',
                        'Elixir.AWS.TranscribeStreaming',
                        'Elixir.AWS.Transfer','Elixir.AWS.Translate',
                        'Elixir.AWS.Util','Elixir.AWS.WAF',
                        'Elixir.AWS.WAFRegional','Elixir.AWS.WAFV2',
                        'Elixir.AWS.WorkDocs','Elixir.AWS.WorkLink',
                        'Elixir.AWS.WorkMail',
                        'Elixir.AWS.WorkMailMessageFlow',
                        'Elixir.AWS.WorkSpaces','Elixir.AWS.XML',
                        'Elixir.AWS.XRay']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,jason,xmerl,crypto,stdlib,eex,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ex_aws,
                  [{description,"Generic AWS client"},
                   {vsn,"2.1.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExAws','Elixir.ExAws.Auth',
                        'Elixir.ExAws.Auth.Credentials',
                        'Elixir.ExAws.Auth.Signatures',
                        'Elixir.ExAws.Auth.Utils','Elixir.ExAws.Behaviour',
                        'Elixir.ExAws.Config','Elixir.ExAws.Config.AuthCache',
                        'Elixir.ExAws.Config.AuthCache.AuthConfigAdapter',
                        'Elixir.ExAws.Config.Defaults',
                        'Elixir.ExAws.CredentialsIni','Elixir.ExAws.Error',
                        'Elixir.ExAws.InstanceMeta','Elixir.ExAws.JSON.Codec',
                        'Elixir.ExAws.JSON.JSX','Elixir.ExAws.Operation',
                        'Elixir.ExAws.Operation.ExAws.Operation.JSON',
                        'Elixir.ExAws.Operation.ExAws.Operation.Query',
                        'Elixir.ExAws.Operation.ExAws.Operation.RestQuery',
                        'Elixir.ExAws.Operation.ExAws.Operation.S3',
                        'Elixir.ExAws.Operation.JSON',
                        'Elixir.ExAws.Operation.Query',
                        'Elixir.ExAws.Operation.RestQuery',
                        'Elixir.ExAws.Operation.S3','Elixir.ExAws.Request',
                        'Elixir.ExAws.Request.Hackney',
                        'Elixir.ExAws.Request.HttpClient',
                        'Elixir.ExAws.Request.Url','Elixir.ExAws.Utils',
                        'Elixir.Mix.Tasks.Aws.Kinesis.Tail']},
                   {registered,[]},
                   {applications,[elixir,logger,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.ExAws',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mbcs_rs,
                  [{description,
                       "MBCS converter using ruster with encoding crate"},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,['Elixir.MbcsRs']},
                   {registered,[]},
                   {applications,[elixir,logger,rustler,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,tortoise,
                  [{description,"A MQTT client for Elixir.\n"},
                   {vsn,"0.9.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Tortoise.Package.Subscribe',
                        'Elixir.Enumerable.Tortoise.Package.Subscribe',
                        'Elixir.Tortoise','Elixir.Tortoise.App',
                        'Elixir.Tortoise.Connection',
                        'Elixir.Tortoise.Connection.Backoff',
                        'Elixir.Tortoise.Connection.Controller',
                        'Elixir.Tortoise.Connection.Inflight',
                        'Elixir.Tortoise.Connection.Inflight.Track',
                        'Elixir.Tortoise.Connection.Receiver',
                        'Elixir.Tortoise.Connection.Supervisor',
                        'Elixir.Tortoise.Decodable',
                        'Elixir.Tortoise.Decodable.BitString',
                        'Elixir.Tortoise.Decodable.List',
                        'Elixir.Tortoise.Encodable',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Connack',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Connect',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Disconnect',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Pingreq',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Pingresp',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Puback',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Pubcomp',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Publish',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Pubrec',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Pubrel',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Suback',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Subscribe',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Unsuback',
                        'Elixir.Tortoise.Encodable.Tortoise.Package.Unsubscribe',
                        'Elixir.Tortoise.Events','Elixir.Tortoise.Handler',
                        'Elixir.Tortoise.Handler.Default',
                        'Elixir.Tortoise.Handler.Logger',
                        'Elixir.Tortoise.Package',
                        'Elixir.Tortoise.Package.Connack',
                        'Elixir.Tortoise.Package.Connect',
                        'Elixir.Tortoise.Package.Disconnect',
                        'Elixir.Tortoise.Package.Meta',
                        'Elixir.Tortoise.Package.Pingreq',
                        'Elixir.Tortoise.Package.Pingresp',
                        'Elixir.Tortoise.Package.Puback',
                        'Elixir.Tortoise.Package.Pubcomp',
                        'Elixir.Tortoise.Package.Publish',
                        'Elixir.Tortoise.Package.Pubrec',
                        'Elixir.Tortoise.Package.Pubrel',
                        'Elixir.Tortoise.Package.Suback',
                        'Elixir.Tortoise.Package.Subscribe',
                        'Elixir.Tortoise.Package.Unsuback',
                        'Elixir.Tortoise.Package.Unsubscribe',
                        'Elixir.Tortoise.Pipe','Elixir.Tortoise.Registry',
                        'Elixir.Tortoise.Supervisor',
                        'Elixir.Tortoise.Transport',
                        'Elixir.Tortoise.Transport.SSL',
                        'Elixir.Tortoise.Transport.Tcp']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,ssl,gen_state_machine,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tortoise.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,jamdb_oracle,
                  [{description,"Erlang driver and Ecto adapter for Oracle"},
                   {vsn,"0.4.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection.Query.Jamdb.Oracle.Query',
                        'Elixir.Ecto.Adapters.Jamdb.Oracle',
                        'Elixir.Ecto.Adapters.Jamdb.Oracle.Connection',
                        'Elixir.Jamdb.Oracle','Elixir.Jamdb.Oracle.Query',
                        'Elixir.String.Chars.Jamdb.Oracle.Query',jamdb_oracle,
                        jamdb_oracle_conn,jamdb_oracle_crypt,
                        jamdb_oracle_tns_decoder,jamdb_oracle_tns_encoder]},
                   {registered,[]},
                   {applications,[elixir,ecto_sql,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,castore,
                  [{description,"Up-to-date CA certificate store."},
                   {vsn,"0.1.8"},
                   {id,[]},
                   {modules,['Elixir.CAStore']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,license,
                  [{description,"license"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.License.Application',
                        'Elixir.Autoflow.License.Manager']},
                   {registered,[]},
                   {applications,
                       [elixir,store,common,logger,ssl,jason,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Autoflow.License.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,parallel_stream,
                  [{description,"Parallel stream operations for Elixir"},
                   {vsn,"1.0.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.ParallelStream',
                        'Elixir.ParallelStream.Defaults',
                        'Elixir.ParallelStream.Each',
                        'Elixir.ParallelStream.Each.Consumer',
                        'Elixir.ParallelStream.Executor',
                        'Elixir.ParallelStream.Filter',
                        'Elixir.ParallelStream.Filter.Consumer',
                        'Elixir.ParallelStream.FilterExecutor',
                        'Elixir.ParallelStream.Inqueue',
                        'Elixir.ParallelStream.Mapper',
                        'Elixir.ParallelStream.Mapper.Consumer',
                        'Elixir.ParallelStream.Outqueue',
                        'Elixir.ParallelStream.Producer',
                        'Elixir.ParallelStream.Workers',
                        'Elixir.ParallelStream.Workers.Worker']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,csv,
                  [{description,"CSV Decoding and Encoding for Elixir"},
                   {vsn,"2.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.CSV','Elixir.CSV.Decoding.Decoder',
                        'Elixir.CSV.Decoding.Lexer',
                        'Elixir.CSV.Decoding.Parser',
                        'Elixir.CSV.Decoding.Preprocessing.Lines',
                        'Elixir.CSV.Decoding.Preprocessing.None',
                        'Elixir.CSV.Defaults','Elixir.CSV.Encode',
                        'Elixir.CSV.Encode.Any','Elixir.CSV.Encode.BitString',
                        'Elixir.CSV.Encoding.Encoder',
                        'Elixir.CSV.EncodingError',
                        'Elixir.CSV.EscapeSequenceError',
                        'Elixir.CSV.RowLengthError',
                        'Elixir.CSV.StrayQuoteError']},
                   {registered,[]},
                   {applications,[elixir,parallel_stream,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_pubsub,
                  [{description,"Distributed PubSub and Presence platform"},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.PubSub',
                        'Elixir.Phoenix.PubSub.Adapter',
                        'Elixir.Phoenix.PubSub.Application',
                        'Elixir.Phoenix.PubSub.BroadcastError',
                        'Elixir.Phoenix.PubSub.PG2',
                        'Elixir.Phoenix.PubSub.Supervisor',
                        'Elixir.Phoenix.Tracker',
                        'Elixir.Phoenix.Tracker.Clock',
                        'Elixir.Phoenix.Tracker.DeltaGeneration',
                        'Elixir.Phoenix.Tracker.Replica',
                        'Elixir.Phoenix.Tracker.Shard',
                        'Elixir.Phoenix.Tracker.State']},
                   {registered,[]},
                   {applications,[elixir,logger,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.PubSub.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix,
                  [{description,
                       "Productive. Reliable. Fast. A productive web framework that\ndoes not compromise speed or maintainability.\n"},
                   {vsn,"1.5.8"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
                        'Elixir.Mix.Phoenix.Schema',
                        'Elixir.Mix.Tasks.Compile.Phoenix',
                        'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
                        'Elixir.Mix.Tasks.Phx.Digest.Clean',
                        'Elixir.Mix.Tasks.Phx.Gen.Cert',
                        'Elixir.Mix.Tasks.Phx.Gen.Channel',
                        'Elixir.Mix.Tasks.Phx.Gen.Context',
                        'Elixir.Mix.Tasks.Phx.Gen.Embedded',
                        'Elixir.Mix.Tasks.Phx.Gen.Html',
                        'Elixir.Mix.Tasks.Phx.Gen.Json',
                        'Elixir.Mix.Tasks.Phx.Gen.Live',
                        'Elixir.Mix.Tasks.Phx.Gen.Presence',
                        'Elixir.Mix.Tasks.Phx.Gen.Schema',
                        'Elixir.Mix.Tasks.Phx.Gen.Secret',
                        'Elixir.Mix.Tasks.Phx.Routes',
                        'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
                        'Elixir.Phoenix.ActionClauseError',
                        'Elixir.Phoenix.Channel',
                        'Elixir.Phoenix.Channel.Server',
                        'Elixir.Phoenix.ChannelTest',
                        'Elixir.Phoenix.ChannelTest.NoopSerializer',
                        'Elixir.Phoenix.CodeReloader',
                        'Elixir.Phoenix.CodeReloader.Proxy',
                        'Elixir.Phoenix.CodeReloader.Server',
                        'Elixir.Phoenix.Config','Elixir.Phoenix.ConnTest',
                        'Elixir.Phoenix.Controller',
                        'Elixir.Phoenix.Controller.Pipeline',
                        'Elixir.Phoenix.Digester','Elixir.Phoenix.Endpoint',
                        'Elixir.Phoenix.Endpoint.Cowboy2Adapter',
                        'Elixir.Phoenix.Endpoint.Cowboy2Handler',
                        'Elixir.Phoenix.Endpoint.CowboyAdapter',
                        'Elixir.Phoenix.Endpoint.CowboyWebSocket',
                        'Elixir.Phoenix.Endpoint.RenderErrors',
                        'Elixir.Phoenix.Endpoint.Supervisor',
                        'Elixir.Phoenix.Endpoint.Watcher',
                        'Elixir.Phoenix.Logger',
                        'Elixir.Phoenix.MissingParamError',
                        'Elixir.Phoenix.Naming',
                        'Elixir.Phoenix.NotAcceptableError',
                        'Elixir.Phoenix.Param','Elixir.Phoenix.Param.Any',
                        'Elixir.Phoenix.Param.Atom',
                        'Elixir.Phoenix.Param.BitString',
                        'Elixir.Phoenix.Param.Integer',
                        'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
                        'Elixir.Phoenix.Presence.Tracker',
                        'Elixir.Phoenix.Router',
                        'Elixir.Phoenix.Router.ConsoleFormatter',
                        'Elixir.Phoenix.Router.Helpers',
                        'Elixir.Phoenix.Router.MalformedURIError',
                        'Elixir.Phoenix.Router.NoRouteError',
                        'Elixir.Phoenix.Router.Resource',
                        'Elixir.Phoenix.Router.Route',
                        'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
                        'Elixir.Phoenix.Socket.Broadcast',
                        'Elixir.Phoenix.Socket.InvalidMessageError',
                        'Elixir.Phoenix.Socket.Message',
                        'Elixir.Phoenix.Socket.PoolSupervisor',
                        'Elixir.Phoenix.Socket.Reply',
                        'Elixir.Phoenix.Socket.Serializer',
                        'Elixir.Phoenix.Socket.Transport',
                        'Elixir.Phoenix.Socket.V1.JSONSerializer',
                        'Elixir.Phoenix.Socket.V2.JSONSerializer',
                        'Elixir.Phoenix.Template',
                        'Elixir.Phoenix.Template.EExEngine',
                        'Elixir.Phoenix.Template.Engine',
                        'Elixir.Phoenix.Template.ExsEngine',
                        'Elixir.Phoenix.Template.UndefinedError',
                        'Elixir.Phoenix.Token',
                        'Elixir.Phoenix.Transports.LongPoll',
                        'Elixir.Phoenix.Transports.LongPoll.Server',
                        'Elixir.Phoenix.Transports.WebSocket',
                        'Elixir.Phoenix.View',
                        'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,public_key,crypto,stdlib,phoenix_pubsub,
                        telemetry,plug,eex,kernel,plug_crypto]},
                   {included_applications,[]},
                   {env,
                       [{logger,true},
                        {stacktrace_depth,nil},
                        {template_engines,[]},
                        {format_encoders,[]},
                        {filter_parameters,[<<"password">>]},
                        {serve_endpoints,false},
                        {gzippable_exts,
                            [<<".js">>,<<".css">>,<<".txt">>,<<".text">>,
                             <<".html">>,<<".json">>,<<".svg">>,<<".eot">>,
                             <<".ttf">>]},
                        {trim_on_html_eex_engine,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,flow,
                  [{description,"flow"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.Flow',
                        'Elixir.Autoflow.Flow.Action.Array',
                        'Elixir.Autoflow.Flow.Action.Communication',
                        'Elixir.Autoflow.Flow.Action.Conditional',
                        'Elixir.Autoflow.Flow.Action.Config',
                        'Elixir.Autoflow.Flow.Action.Connection',
                        'Elixir.Autoflow.Flow.Action.Data',
                        'Elixir.Autoflow.Flow.Action.Database',
                        'Elixir.Autoflow.Flow.Action.Database.Common',
                        'Elixir.Autoflow.Flow.Action.Database.Mariadb',
                        'Elixir.Autoflow.Flow.Action.Database.Mssql',
                        'Elixir.Autoflow.Flow.Action.Database.Oracle',
                        'Elixir.Autoflow.Flow.Action.Database.Postgres',
                        'Elixir.Autoflow.Flow.Action.Datetime',
                        'Elixir.Autoflow.Flow.Action.Encode',
                        'Elixir.Autoflow.Flow.Action.File',
                        'Elixir.Autoflow.Flow.Action.Float',
                        'Elixir.Autoflow.Flow.Action.Flow',
                        'Elixir.Autoflow.Flow.Action.Integer',
                        'Elixir.Autoflow.Flow.Action.Iteration',
                        'Elixir.Autoflow.Flow.Action.Json',
                        'Elixir.Autoflow.Flow.Action.Object',
                        'Elixir.Autoflow.Flow.Action.Organization',
                        'Elixir.Autoflow.Flow.Action.Security',
                        'Elixir.Autoflow.Flow.Action.Server',
                        'Elixir.Autoflow.Flow.Action.Service',
                        'Elixir.Autoflow.Flow.Action.Service.Aws.Common',
                        'Elixir.Autoflow.Flow.Action.Service.Aws.S3',
                        'Elixir.Autoflow.Flow.Action.Service.Oracle.Ords',
                        'Elixir.Autoflow.Flow.Action.String',
                        'Elixir.Autoflow.Flow.Action.System',
                        'Elixir.Autoflow.Flow.Action.Table',
                        'Elixir.Autoflow.Flow.Action.Uri',
                        'Elixir.Autoflow.Flow.Application',
                        'Elixir.Autoflow.Flow.Cache',
                        'Elixir.Autoflow.Flow.Condition.Array',
                        'Elixir.Autoflow.Flow.Condition.Data',
                        'Elixir.Autoflow.Flow.Condition.Number',
                        'Elixir.Autoflow.Flow.Condition.Object',
                        'Elixir.Autoflow.Flow.Condition.String',
                        'Elixir.Autoflow.Flow.Condition.Type',
                        'Elixir.Autoflow.Flow.Exception',
                        'Elixir.Autoflow.Flow.Http',
                        'Elixir.Autoflow.Flow.Migration',
                        'Elixir.Autoflow.Flow.Reference',
                        'Elixir.Autoflow.Flow.Schema.Http.Operation',
                        'Elixir.Autoflow.Flow.Utils']},
                   {registered,[]},
                   {applications,
                       [elixir,store,common,logger,ssl,stdlib,inets,phoenix,
                        plug_cowboy,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Autoflow.Flow.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,tds,
                  [{description,
                       "Microsoft SQL Server client (Elixir implementation of the MS TDS protocol)\n"},
                   {vsn,"2.1.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection.Query.Tds.Query','Elixir.Ntlm',
                        'Elixir.String.Chars.Tds.Query','Elixir.Tds',
                        'Elixir.Tds.BinaryUtils','Elixir.Tds.ConfigError',
                        'Elixir.Tds.Error','Elixir.Tds.Latin1',
                        'Elixir.Tds.Messages','Elixir.Tds.Parameter',
                        'Elixir.Tds.Perf','Elixir.Tds.Protocol',
                        'Elixir.Tds.Protocol.Collation',
                        'Elixir.Tds.Protocol.Grammar',
                        'Elixir.Tds.Protocol.Header',
                        'Elixir.Tds.Protocol.Prelogin',
                        'Elixir.Tds.Protocol.Token','Elixir.Tds.Query',
                        'Elixir.Tds.Result','Elixir.Tds.Tls',
                        'Elixir.Tds.TokenDescriptors.Basic',
                        'Elixir.Tds.Tokens','Elixir.Tds.Types',
                        'Elixir.Tds.Types.UUID','Elixir.Tds.Utils',
                        'Elixir.Tds.Version']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,ssl,stdlib,inets,db_connection,decimal,
                        kernel]},
                   {included_applications,[]},
                   {env,[{json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir"},
                   {vsn,"0.15.9"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Postgrex.Stream',
                        'Elixir.DBConnection.Query.Postgrex.Copy',
                        'Elixir.DBConnection.Query.Postgrex.Parameters',
                        'Elixir.DBConnection.Query.Postgrex.Query',
                        'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
                        'Elixir.Postgrex.App',
                        'Elixir.Postgrex.BinaryExtension',
                        'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
                        'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
                        'Elixir.Postgrex.Cursor',
                        'Elixir.Postgrex.DefaultTypes',
                        'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
                        'Elixir.Postgrex.Extension',
                        'Elixir.Postgrex.Extensions.Array',
                        'Elixir.Postgrex.Extensions.BitString',
                        'Elixir.Postgrex.Extensions.Bool',
                        'Elixir.Postgrex.Extensions.Box',
                        'Elixir.Postgrex.Extensions.Circle',
                        'Elixir.Postgrex.Extensions.Date',
                        'Elixir.Postgrex.Extensions.Float4',
                        'Elixir.Postgrex.Extensions.Float8',
                        'Elixir.Postgrex.Extensions.HStore',
                        'Elixir.Postgrex.Extensions.INET',
                        'Elixir.Postgrex.Extensions.Int2',
                        'Elixir.Postgrex.Extensions.Int4',
                        'Elixir.Postgrex.Extensions.Int8',
                        'Elixir.Postgrex.Extensions.Interval',
                        'Elixir.Postgrex.Extensions.JSON',
                        'Elixir.Postgrex.Extensions.JSONB',
                        'Elixir.Postgrex.Extensions.Line',
                        'Elixir.Postgrex.Extensions.LineSegment',
                        'Elixir.Postgrex.Extensions.MACADDR',
                        'Elixir.Postgrex.Extensions.Name',
                        'Elixir.Postgrex.Extensions.Numeric',
                        'Elixir.Postgrex.Extensions.OID',
                        'Elixir.Postgrex.Extensions.Path',
                        'Elixir.Postgrex.Extensions.Point',
                        'Elixir.Postgrex.Extensions.Polygon',
                        'Elixir.Postgrex.Extensions.Range',
                        'Elixir.Postgrex.Extensions.Raw',
                        'Elixir.Postgrex.Extensions.Record',
                        'Elixir.Postgrex.Extensions.TID',
                        'Elixir.Postgrex.Extensions.TSVector',
                        'Elixir.Postgrex.Extensions.Time',
                        'Elixir.Postgrex.Extensions.TimeTZ',
                        'Elixir.Postgrex.Extensions.Timestamp',
                        'Elixir.Postgrex.Extensions.TimestampTZ',
                        'Elixir.Postgrex.Extensions.UUID',
                        'Elixir.Postgrex.Extensions.VoidBinary',
                        'Elixir.Postgrex.Extensions.VoidText',
                        'Elixir.Postgrex.INET','Elixir.Postgrex.Interval',
                        'Elixir.Postgrex.Lexeme','Elixir.Postgrex.Line',
                        'Elixir.Postgrex.LineSegment',
                        'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
                        'Elixir.Postgrex.Notifications',
                        'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
                        'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
                        'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
                        'Elixir.Postgrex.QueryError','Elixir.Postgrex.Range',
                        'Elixir.Postgrex.Result','Elixir.Postgrex.SCRAM',
                        'Elixir.Postgrex.Stream',
                        'Elixir.Postgrex.SuperExtension',
                        'Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.TypeModule',
                        'Elixir.Postgrex.TypeServer',
                        'Elixir.Postgrex.TypeSupervisor',
                        'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
                        'Elixir.String.Chars.Postgrex.Copy',
                        'Elixir.String.Chars.Postgrex.Query']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,connection,crypto,stdlib,db_connection,
                        decimal,kernel]},
                   {included_applications,[]},
                   {env,
                       [{type_server_reap_after,180000},
                        {json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Postgrex.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,myxql,
                  [{description,"MySQL 5.5+ driver for Elixir"},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection.Query.MyXQL.Query',
                        'Elixir.DBConnection.Query.MyXQL.TextQuery',
                        'Elixir.MyXQL','Elixir.MyXQL.Client',
                        'Elixir.MyXQL.Client.Config',
                        'Elixir.MyXQL.Connection','Elixir.MyXQL.Cursor',
                        'Elixir.MyXQL.Error','Elixir.MyXQL.Protocol',
                        'Elixir.MyXQL.Protocol.Auth',
                        'Elixir.MyXQL.Protocol.Flags',
                        'Elixir.MyXQL.Protocol.Records',
                        'Elixir.MyXQL.Protocol.ServerErrorCodes',
                        'Elixir.MyXQL.Protocol.Types',
                        'Elixir.MyXQL.Protocol.Values','Elixir.MyXQL.Query',
                        'Elixir.MyXQL.Result','Elixir.MyXQL.TextQuery',
                        'Elixir.String.Chars.MyXQL.Query',
                        'Elixir.String.Chars.MyXQL.TextQuery']},
                   {registered,[]},
                   {applications,
                       [elixir,ssl,public_key,stdlib,db_connection,decimal,
                        kernel]},
                   {included_applications,[]},
                   {env,[{json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,service,
                  [{description,"service"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.Service.AMQP.Process',
                        'Elixir.Autoflow.Service.Application',
                        'Elixir.Autoflow.Service.Connection',
                        'Elixir.Autoflow.Service.Database',
                        'Elixir.Autoflow.Service.Http.Router',
                        'Elixir.Autoflow.Service.Http.Server',
                        'Elixir.Autoflow.Service.Kafka.Handler',
                        'Elixir.Autoflow.Service.Kafka.Process',
                        'Elixir.Autoflow.Service.MQTT.Handler',
                        'Elixir.Autoflow.Service.MQTT.Process',
                        'Elixir.Autoflow.Service.MSSQL.Process',
                        'Elixir.Autoflow.Service.MariaDB.Process',
                        'Elixir.Autoflow.Service.Oracle.Process',
                        'Elixir.Autoflow.Service.Postgres.Process',
                        'Elixir.Autoflow.Service.Process',
                        'Elixir.Autoflow.Service.Redis.Process',
                        'Elixir.Autoflow.Service.Registry',
                        'Elixir.Autoflow.Service.Server',
                        'Elixir.Autoflow.Service.Status',
                        'Elixir.Autoflow.Service.TCP.Client',
                        'Elixir.Autoflow.Service.TCP.Client.Connection',
                        'Elixir.Autoflow.Service.TCP.Server',
                        'Elixir.Autoflow.Service.TCP.Server.Connection',
                        'Elixir.Autoflow.Service.TCP.Server.Listener',
                        'Elixir.Autoflow.Service.Timer.Process']},
                   {registered,[]},
                   {applications,
                       [elixir,amqp,store,tds_encoding,redix,mutex,yamerl,
                        kafka_ex,poolboy,common,logger,ssl,json_xema,jason,
                        gen_smtp,elixir_radius,aws,ex_aws,mbcs_rs,tortoise,
                        jamdb_oracle,castore,csv,flow,httpoison,hackney,
                        stdlib,inets,tds,uuid,phoenix,postgrex,plug_cowboy,
                        myxql,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Autoflow.Service.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.17.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.PO','Elixir.Gettext.PO.Parser',
                        'Elixir.Gettext.PO.PluralTranslation',
                        'Elixir.Gettext.PO.SyntaxError',
                        'Elixir.Gettext.PO.Tokenizer',
                        'Elixir.Gettext.PO.Translation',
                        'Elixir.Gettext.PO.Translations',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge',gettext_po_parser]},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_metrics,
                  [{description,
                       "Provides a common interface for defining metrics based on Telemetry events.\n"},
                   {vsn,"0.4.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Telemetry.Metrics',
                        'Elixir.Telemetry.Metrics.ConsoleReporter',
                        'Elixir.Telemetry.Metrics.Counter',
                        'Elixir.Telemetry.Metrics.Distribution',
                        'Elixir.Telemetry.Metrics.LastValue',
                        'Elixir.Telemetry.Metrics.Sum',
                        'Elixir.Telemetry.Metrics.Summary']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,telemetry,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_poller,
                  [{description,
                       "Periodically collect measurements and dispatch them as Telemetry events."},
                   {vsn,"0.5.0"},
                   {id,[]},
                   {modules,
                       [telemetry_poller,telemetry_poller_app,
                        telemetry_poller_builtin,telemetry_poller_sup]},
                   {registered,[]},
                   {applications,[stdlib,telemetry,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_poller_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_html,
                  [{description,
                       "Phoenix view functions for working with HTML templates"},
                   {vsn,"2.14.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
                        'Elixir.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.FormData',
                        'Elixir.Phoenix.HTML.FormData.Atom',
                        'Elixir.Phoenix.HTML.FormData.Plug.Conn',
                        'Elixir.Phoenix.HTML.Format',
                        'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
                        'Elixir.Phoenix.HTML.Safe.Atom',
                        'Elixir.Phoenix.HTML.Safe.BitString',
                        'Elixir.Phoenix.HTML.Safe.Date',
                        'Elixir.Phoenix.HTML.Safe.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Float',
                        'Elixir.Phoenix.HTML.Safe.Integer',
                        'Elixir.Phoenix.HTML.Safe.List',
                        'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.Safe.Time',
                        'Elixir.Phoenix.HTML.Safe.Tuple',
                        'Elixir.Phoenix.HTML.Tag']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,plug,eex,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_view,
                  [{description,
                       "Rich, real-time user experiences with server-rendered HTML\n"},
                   {vsn,"0.13.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Phoenix.LiveView.Socket',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Element',
                        'Elixir.Inspect.Phoenix.LiveViewTest.View',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveComponent',
                        'Elixir.Phoenix.LiveView',
                        'Elixir.Phoenix.LiveView.Application',
                        'Elixir.Phoenix.LiveView.Channel',
                        'Elixir.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.LiveView.Controller',
                        'Elixir.Phoenix.LiveView.Diff',
                        'Elixir.Phoenix.LiveView.Engine',
                        'Elixir.Phoenix.LiveView.Helpers',
                        'Elixir.Phoenix.LiveView.Plug',
                        'Elixir.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveView.Renderer',
                        'Elixir.Phoenix.LiveView.Router',
                        'Elixir.Phoenix.LiveView.Socket',
                        'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Phoenix.LiveView.Static',
                        'Elixir.Phoenix.LiveView.Utils',
                        'Elixir.Phoenix.LiveViewTest',
                        'Elixir.Phoenix.LiveViewTest.ClientProxy',
                        'Elixir.Phoenix.LiveViewTest.DOM',
                        'Elixir.Phoenix.LiveViewTest.Element',
                        'Elixir.Phoenix.LiveViewTest.View']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,phoenix_html,stdlib,phoenix,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveView.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_dashboard,
                  [{description,"Real-time performance dashboard for Phoenix"},
                   {vsn,"0.2.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.LiveDashboard',
                        'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.Application',
                        'Elixir.Phoenix.LiveDashboard.ApplicationsLive',
                        'Elixir.Phoenix.LiveDashboard.CardUsageComponent',
                        'Elixir.Phoenix.LiveDashboard.ChartComponent',
                        'Elixir.Phoenix.LiveDashboard.ColorBarComponent',
                        'Elixir.Phoenix.LiveDashboard.ColorBarLegendComponent',
                        'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.EtsLive',
                        'Elixir.Phoenix.LiveDashboard.HomeLive',
                        'Elixir.Phoenix.LiveDashboard.LayoutView',
                        'Elixir.Phoenix.LiveDashboard.LiveHelpers',
                        'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
                        'Elixir.Phoenix.LiveDashboard.MenuLive',
                        'Elixir.Phoenix.LiveDashboard.MetricsLive',
                        'Elixir.Phoenix.LiveDashboard.ModalComponent',
                        'Elixir.Phoenix.LiveDashboard.OSMonLive',
                        'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.PortsLive',
                        'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.ProcessesLive',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
                        'Elixir.Phoenix.LiveDashboard.RequestLogger',
                        'Elixir.Phoenix.LiveDashboard.RequestLoggerLive',
                        'Elixir.Phoenix.LiveDashboard.Router',
                        'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.SocketsLive',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo',
                        'Elixir.Phoenix.LiveDashboard.TableHelpers',
                        'Elixir.Phoenix.LiveDashboard.TelemetryListener',
                        'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
                        'Elixir.Phoenix.LiveDashboard.Web']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,telemetry_metrics,phoenix_html,
                        phoenix_live_view,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveDashboard.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.13.2"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,web,
                  [{description,"web"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Web','Elixir.Web.Application',
                        'Elixir.Web.Authentication',
                        'Elixir.Web.Channels.Usage','Elixir.Web.Endpoint',
                        'Elixir.Web.ErrorHelpers','Elixir.Web.ErrorView',
                        'Elixir.Web.FunctionController','Elixir.Web.Gettext',
                        'Elixir.Web.LayoutView','Elixir.Web.PageController',
                        'Elixir.Web.PageView','Elixir.Web.Router',
                        'Elixir.Web.Router.Helpers','Elixir.Web.Socket',
                        'Elixir.Web.Telemetry']},
                   {registered,[]},
                   {applications,
                       [elixir,store,common,logger,jason,gettext,
                        telemetry_metrics,telemetry_poller,phoenix_html,
                        phoenix_live_view,phoenix_live_dashboard,stdlib,
                        runtime_tools,phoenix,plug_cowboy,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Web.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,artificery,
                  [{description,
                       "A toolkit for terminal user interfaces in Elixir"},
                   {vsn,"0.4.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Artificery','Elixir.Artificery.Command',
                        'Elixir.Artificery.Console',
                        'Elixir.Artificery.Console.Color',
                        'Elixir.Artificery.Console.Color.ANSI',
                        'Elixir.Artificery.Console.Events',
                        'Elixir.Artificery.Console.Prompt',
                        'Elixir.Artificery.Console.Spinner',
                        'Elixir.Artificery.Console.Table',
                        'Elixir.Artificery.Entry','Elixir.Artificery.Option']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,distillery,
                  [{description,
                       "Build releases of your Mix projects with ease!\n"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Distillery.Cookies',
                        'Elixir.Distillery.Releases.App',
                        'Elixir.Distillery.Releases.Appup',
                        'Elixir.Distillery.Releases.Appup.Transform',
                        'Elixir.Distillery.Releases.Appup.TransformError',
                        'Elixir.Distillery.Releases.Appup.Utils',
                        'Elixir.Distillery.Releases.Archiver',
                        'Elixir.Distillery.Releases.Archiver.Archive',
                        'Elixir.Distillery.Releases.Assembler',
                        'Elixir.Distillery.Releases.BootScript',
                        'Elixir.Distillery.Releases.Checks',
                        'Elixir.Distillery.Releases.Checks.Cookie',
                        'Elixir.Distillery.Releases.Checks.Erts',
                        'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
                        'Elixir.Distillery.Releases.Config',
                        'Elixir.Distillery.Releases.Config.LoadError',
                        'Elixir.Distillery.Releases.Config.Provider',
                        'Elixir.Distillery.Releases.Config.Providers.Elixir',
                        'Elixir.Distillery.Releases.Environment',
                        'Elixir.Distillery.Releases.Errors',
                        'Elixir.Distillery.Releases.Overlays',
                        'Elixir.Distillery.Releases.Plugin',
                        'Elixir.Distillery.Releases.Profile',
                        'Elixir.Distillery.Releases.Release',
                        'Elixir.Distillery.Releases.Runtime.Control',
                        'Elixir.Distillery.Releases.Runtime.Pidfile',
                        'Elixir.Distillery.Releases.Shell',
                        'Elixir.Distillery.Releases.Shell.Macros',
                        'Elixir.Distillery.Releases.Utils',
                        'Elixir.Mix.Tasks.Distillery.Gen.Appup',
                        'Elixir.Mix.Tasks.Distillery.Init',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
                        'Elixir.Mix.Tasks.Distillery.Release',
                        'Elixir.Mix.Tasks.Distillery.Release.Clean']},
                   {registered,[]},
                   {applications,
                       [elixir,stdlib,runtime_tools,artificery,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,core,
                  [{description,"core"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Autoflow.Core.AddOns',
                        'Elixir.Autoflow.Core.Downloads',
                        'Elixir.Autoflow.Core.Procedure.Process',
                        'Elixir.Autoflow.Core.Process.OauthProxy',
                        'Elixir.Autoflow.Core.Process.Radius',
                        'Elixir.Autoflow.Core.Schema.Http.Api',
                        'Elixir.Autoflow.Core.Schema.Http.Swagger',
                        'Elixir.Autoflow.Core.Schema.Http.Swagger.V2',
                        'Elixir.Autoflow.Core.Schema.Http.Swagger.V3',
                        'Elixir.Core']},
                   {registered,[]},
                   {applications,
                       [elixir,logger_file_backend,amqp,store,tds_encoding,
                        redix,mutex,yamerl,kafka_ex,poolboy,common,logger,
                        json_xema,jason,gen_smtp,elixir_radius,aws,ex_aws,
                        mbcs_rs,tortoise,jamdb_oracle,castore,license,service,
                        csv,flow,httpoison,hackney,web,stdlib,tds,phoenix,
                        postgrex,distillery,cowboy,myxql,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Core',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mix,
                  [{description,"mix"},
                   {vsn,"1.9.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix','Elixir.Mix.CLI',
                        'Elixir.Mix.Compilers.Elixir',
                        'Elixir.Mix.Compilers.Erlang',
                        'Elixir.Mix.Compilers.Test','Elixir.Mix.Config',
                        'Elixir.Mix.Dep','Elixir.Mix.Dep.Converger',
                        'Elixir.Mix.Dep.ElixirSCM','Elixir.Mix.Dep.Fetcher',
                        'Elixir.Mix.Dep.Loader','Elixir.Mix.Dep.Lock',
                        'Elixir.Mix.Dep.Umbrella',
                        'Elixir.Mix.ElixirVersionError','Elixir.Mix.Error',
                        'Elixir.Mix.Generator','Elixir.Mix.Hex',
                        'Elixir.Mix.InvalidTaskError','Elixir.Mix.Local',
                        'Elixir.Mix.Local.Installer',
                        'Elixir.Mix.NoProjectError','Elixir.Mix.NoTaskError',
                        'Elixir.Mix.Project','Elixir.Mix.ProjectStack',
                        'Elixir.Mix.PublicKey','Elixir.Mix.Rebar',
                        'Elixir.Mix.Release','Elixir.Mix.RemoteConverger',
                        'Elixir.Mix.SCM','Elixir.Mix.SCM.Git',
                        'Elixir.Mix.SCM.Path','Elixir.Mix.Shell',
                        'Elixir.Mix.Shell.IO','Elixir.Mix.Shell.Process',
                        'Elixir.Mix.Shell.Quiet','Elixir.Mix.State',
                        'Elixir.Mix.Task','Elixir.Mix.Task.Compiler',
                        'Elixir.Mix.Task.Compiler.Diagnostic',
                        'Elixir.Mix.Tasks.App.Start',
                        'Elixir.Mix.Tasks.App.Tree',
                        'Elixir.Mix.Tasks.Archive',
                        'Elixir.Mix.Tasks.Archive.Build',
                        'Elixir.Mix.Tasks.Archive.Check',
                        'Elixir.Mix.Tasks.Archive.Install',
                        'Elixir.Mix.Tasks.Archive.Uninstall',
                        'Elixir.Mix.Tasks.Clean','Elixir.Mix.Tasks.Cmd',
                        'Elixir.Mix.Tasks.Compile',
                        'Elixir.Mix.Tasks.Compile.All',
                        'Elixir.Mix.Tasks.Compile.App',
                        'Elixir.Mix.Tasks.Compile.Elixir',
                        'Elixir.Mix.Tasks.Compile.Erlang',
                        'Elixir.Mix.Tasks.Compile.Leex',
                        'Elixir.Mix.Tasks.Compile.Protocols',
                        'Elixir.Mix.Tasks.Compile.Xref',
                        'Elixir.Mix.Tasks.Compile.Yecc',
                        'Elixir.Mix.Tasks.Deps','Elixir.Mix.Tasks.Deps.Clean',
                        'Elixir.Mix.Tasks.Deps.Compile',
                        'Elixir.Mix.Tasks.Deps.Get',
                        'Elixir.Mix.Tasks.Deps.Loadpaths',
                        'Elixir.Mix.Tasks.Deps.Precompile',
                        'Elixir.Mix.Tasks.Deps.Tree',
                        'Elixir.Mix.Tasks.Deps.Unlock',
                        'Elixir.Mix.Tasks.Deps.Update','Elixir.Mix.Tasks.Do',
                        'Elixir.Mix.Tasks.Escript',
                        'Elixir.Mix.Tasks.Escript.Build',
                        'Elixir.Mix.Tasks.Escript.Install',
                        'Elixir.Mix.Tasks.Escript.Uninstall',
                        'Elixir.Mix.Tasks.Format','Elixir.Mix.Tasks.Help',
                        'Elixir.Mix.Tasks.Iex','Elixir.Mix.Tasks.Loadconfig',
                        'Elixir.Mix.Tasks.Loadpaths','Elixir.Mix.Tasks.Local',
                        'Elixir.Mix.Tasks.Local.Hex',
                        'Elixir.Mix.Tasks.Local.PublicKeys',
                        'Elixir.Mix.Tasks.Local.Rebar','Elixir.Mix.Tasks.New',
                        'Elixir.Mix.Tasks.Profile.Cprof',
                        'Elixir.Mix.Tasks.Profile.Eprof',
                        'Elixir.Mix.Tasks.Profile.Fprof',
                        'Elixir.Mix.Tasks.Release',
                        'Elixir.Mix.Tasks.Release.Init',
                        'Elixir.Mix.Tasks.Run','Elixir.Mix.Tasks.Test',
                        'Elixir.Mix.Tasks.Test.Cover',
                        'Elixir.Mix.Tasks.WillRecompile',
                        'Elixir.Mix.Tasks.Xref','Elixir.Mix.TasksServer',
                        'Elixir.Mix.Utils']},
                   {registered,
                       ['Elixir.Mix.State','Elixir.Mix.TasksServer',
                        'Elixir.Mix.ProjectStack']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{colors,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Mix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.9.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.Broker',
                        'Elixir.IEx.CLI','Elixir.IEx.Config',
                        'Elixir.IEx.Evaluator','Elixir.IEx.Helpers',
                        'Elixir.IEx.History','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
                        'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
                        'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
                        'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
                        'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection',
                        'Elixir.IEx.Pry','Elixir.IEx.Server',
                        'Elixir.IEx.State']},
                   {registered,
                       ['Elixir.IEx.Broker','Elixir.IEx.Config',
                        'Elixir.IEx.Pry','Elixir.IEx.Supervisor']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{colors,[]},
                        {inspect,[{pretty,true}]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[jason,permanent]}},
     {apply,{application,start_boot,[ink,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[libcluster,permanent]}},
     {apply,{application,start_boot,[conv_case,permanent]}},
     {apply,{application,start_boot,[xema,permanent]}},
     {apply,{application,start_boot,[json_xema,permanent]}},
     {apply,{application,start_boot,[unicode_util_compat,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[parse_trans,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[httpoison,permanent]}},
     {apply,{application,start_boot,[telemetry,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[eex,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[plug_crypto,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[plug_cowboy,permanent]}},
     {apply,{application,start_boot,[common,permanent]}},
     {apply,{application,start_boot,[gen_state_machine,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[connection,permanent]}},
     {apply,{application,start_boot,[db_connection,permanent]}},
     {apply,{application,start_boot,[ecto_sql,permanent]}},
     {apply,{application,start_boot,[uuid,permanent]}},
     {apply,{application,start_boot,[store,permanent]}},
     {apply,{application,start_boot,[store_mnesia,permanent]}},
     {apply,{application,start_boot,[logger_file_backend,permanent]}},
     {apply,{application,start_boot,[goldrush,permanent]}},
     {apply,{application,start_boot,[lager,permanent]}},
     {apply,{application,start_boot,[xmerl,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[tools,permanent]}},
     {apply,{application,start_boot,[jsx,permanent]}},
     {apply,{application,start_boot,[recon,permanent]}},
     {apply,{application,start_boot,[credentials_obfuscation,permanent]}},
     {apply,{application,start_boot,[rabbit_common,permanent]}},
     {apply,{application,start_boot,[amqp_client,permanent]}},
     {apply,{application,start_boot,[amqp,permanent]}},
     {apply,{application,start_boot,[rustler,permanent]}},
     {apply,{application,start_boot,[tds_encoding,permanent]}},
     {apply,{application,start_boot,[redix,permanent]}},
     {apply,{application,start_boot,[mutex,permanent]}},
     {apply,{application,start_boot,[yamerl,permanent]}},
     {apply,{application,start_boot,[varint,permanent]}},
     {apply,{application,start_boot,[crc32cer,permanent]}},
     {apply,{application,start_boot,[kayrock,permanent]}},
     {apply,{application,start_boot,[kafka_ex,permanent]}},
     {apply,{application,start_boot,[poolboy,permanent]}},
     {apply,{application,start_boot,[gen_smtp,permanent]}},
     {apply,{application,start_boot,[elixir_radius,permanent]}},
     {apply,{application,start_boot,[aws,permanent]}},
     {apply,{application,start_boot,[ex_aws,permanent]}},
     {apply,{application,start_boot,[mbcs_rs,permanent]}},
     {apply,{application,start_boot,[tortoise,permanent]}},
     {apply,{application,start_boot,[jamdb_oracle,permanent]}},
     {apply,{application,start_boot,[castore,permanent]}},
     {apply,{application,start_boot,[license,permanent]}},
     {apply,{application,start_boot,[parallel_stream,permanent]}},
     {apply,{application,start_boot,[csv,permanent]}},
     {apply,{application,start_boot,[phoenix_pubsub,permanent]}},
     {apply,{application,start_boot,[phoenix,permanent]}},
     {apply,{application,start_boot,[flow,permanent]}},
     {apply,{application,start_boot,[tds,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[myxql,permanent]}},
     {apply,{application,start_boot,[service,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[telemetry_metrics,permanent]}},
     {apply,{application,start_boot,[telemetry_poller,permanent]}},
     {apply,{application,start_boot,[phoenix_html,permanent]}},
     {apply,{application,start_boot,[phoenix_live_view,permanent]}},
     {apply,{application,start_boot,[phoenix_live_dashboard,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[web,permanent]}},
     {apply,{application,start_boot,[artificery,permanent]}},
     {apply,{application,start_boot,[distillery,permanent]}},
     {apply,{application,start_boot,[core,permanent]}},
     {apply,{application,start_boot,[mix,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
